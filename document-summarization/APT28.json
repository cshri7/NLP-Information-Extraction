[{"Unnamed: 0":0,"query":"APT28","text":"The nation-state adversary group known as FANCY BEAR has been operating since at least 2008 and represents a constant threat to a wide variety of organizations around the globe. They target aerospace, defense, energy, government, media, and dissidents, using a sophisticated and cross-platform implant.\nFANCY BEAR\u2019s code has been observed targeting conventional computers and mobile devices. To attack their victims, they typically employ both phishing messages and credential harvesting using spoofed websites.\nFANCY BEAR has demonstrated the ability to run multiple and extensive intrusion operations concurrently. In the blog post Bears in the Midst, CrowdStrike CTO Dmitri Alperovitch details the adversary\u2019s operations against U.S. political organizations. At the same time that operation was occurring, this actor was involved in extensive operations targeting European military organizations.\nIn his blog, Dmitri also notes that FANCY BEAR (also known as Sofacy or APT 28) is a Russian-based threat actor whose attacks have ranged far beyond the United States and Western Europe. The group has been observed targeting victims in multiple sectors across the globe. Because of its extensive operations against defense ministries and other military victims, FANCY BEAR\u2019s profile closely mirrors the strategic interests of the Russian government, and may indicate affiliation with \u0413\u043b\u0430\u0432\u043d\u043e\u0435 \u0420\u0430\u0437\u0432\u0435\u0434\u044b\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 (Main Intelligence Department) or GRU, Russia\u2019s premier military intelligence service.\nThis adversary has dedicated considerable time to developing their primary implant known as XAgent, and to leverage proprietary tools and droppers such as X-Tunnel, WinIDS, Foozer and DownRange. Their main implant has been ported across multiple operating systems for conventional computers as well as mobile platforms. This group is also known for registering domains that closely resemble domains of legitimate organizations they plan to target in order to establish phishing sites that spoof the look and feel of the victim\u2019s web-based email services, with the intention of harvesting their credentials. FANCY BEAR has also been linked publicly to intrusions into the German Bundestag and France\u2019s TV5 Monde TV station in April 2015.\nTo learn more about using threat intelligence to defend your enterprise, protect your endpoints and proactively hunt sophisticated threat actors, visit the CrowdStrike Falcon Intelligence page. To get full access to CrowdStrike\u2019s next-gen antivirus solution for 15 days visit the Falcon Prevent free trial page.\n\u00a0","url":"https:\/\/www.crowdstrike.com\/blog\/who-is-fancy-bear\/"},{"Unnamed: 0":0,"query":"APT28","text":"FireEye has moderate confidence that a campaign targeting the hospitality sector is attributed to Russian actor APT28 . We believe this activity, which dates back to at least July 2017, was intended to target travelers to hotels throughout Europe and the Middle East. The actor has used several notable techniques in these incidents such as sniffing passwords from Wi-Fi traffic, poisoning the NetBIOS Name Service, and spreading laterally via the EternalBlue exploit.  APT28 Uses Malicious Document to Target Hospitality Industry  FireEye has uncovered a malicious document sent in spear phishing emails to multiple companies in the hospitality industry, including hotels in at least seven European countries and one Middle Eastern country in early July. Successful execution of the macro within the malicious document results in the installation of APT28\u2019s signature GAMEFISH malware.  The malicious document \u2013 Hotel_Reservation_Form.doc (MD5: 9b10685b774a783eabfecdb6119a8aa3), as seen in Figure 1 \u2013 contains a macro that base64 decodes a dropper that then deploys APT28\u2019s signature GAMEFISH malware (MD5: 1421419d1be31f1f9ea60e8ed87277db), which uses mvband.net and mvtband.net as command and control (C2) domains.   Figure 1: Hotel_Reservation_Form.doc (MD5: 9b10685b774a783eabfecdb6119a8aa3)  APT28 Uses Novel Techniques to Move Laterally and Potentially Target Travelers  APT28 is using novel techniques involving the EternalBlue exploit and the open source tool Responder to spread laterally through networks and likely target travelers. Once inside the network of a hospitality company, APT28 sought out machines that controlled both guest and internal Wi-Fi networks.\u00a0No guest credentials were observed being stolen at the compromised hotels; however, in a separate incident that occurred in Fall 2016, APT28 gained initial access to a victim\u2019s network via credentials likely stolen from a hotel Wi-Fi network.  Upon gaining access to the machines connected to corporate and guest Wi-Fi networks, APT28 deployed Responder. Responder facilitates NetBIOS Name Service (NBT-NS) poisoning. This technique listens for NBT-NS (UDP\/137) broadcasts from victim computers attempting to connect to network resources. Once received, Responder masquerades as the sought-out resource and causes the victim computer to send the username and hashed password to the attacker-controlled machine. APT28 used this technique to steal usernames and hashed passwords that allowed escalation of privileges in the victim network.  To spread through the hospitality company\u2019s network, APT28 used a version of the EternalBlue SMB exploit. This was combined with the heavy use of py2exe to compile Python scripts. This is the first time we have seen APT28 incorporate this exploit into their intrusions.  In the 2016 incident, the victim was compromised after connecting to a hotel Wi-Fi network. Twelve hours after the victim initially connected to the publicly available Wi-Fi network, APT28 logged into the machine with stolen credentials. These 12 hours could have been used to crack a hashed password offline. After successfully accessing the machine, the attacker deployed tools on the machine, spread laterally through the victim's network, and accessed the victim's OWA account. The login originated from a computer on the same subnet, indicating that the attacker machine was physically close to the victim and on the same Wi-Fi network.  We cannot confirm how the initial credentials were stolen in the 2016 incident; however, later in the intrusion, Responder was deployed. Since this tool allows an attacker to sniff passwords from network traffic, it could have been used on the hotel Wi-Fi network to obtain a user\u2019s credentials.  Long-Standing Threats to Travelers  Cyber espionage activity against the hospitality industry is typically focused on collecting information on or from hotel guests of interest rather than on the hotel industry itself, though actors may also collect information on the hotel as a means of facilitating operations. Business and government personnel who are traveling, especially in a foreign country, often rely on systems to conduct business other than those at their home office, and may be unfamiliar with threats posed while abroad.  APT28 isn\u2019t the only group targeting travelers. South Korea-nexus Fallout Team (aka Darkhotel) has used spoofed software updates on infected Wi-Fi networks in Asian hotels , and Duqu 2.0 malware has been found on the networks of European hotels used by participants in the Iranian nuclear negotiations. Additionally, open sources have reported for several years that in Russia and China, high-profile hotel guests may expect their hotel rooms to be accessed and their laptops and other electronic devices accessed .  Outlook and Implications  These incidents show a novel infection vector being used by APT28. The group is leveraging less secure hotel Wi-Fi networks to steal credentials and a NetBIOS Name Service poisoning utility to escalate privileges. APT28\u2019s already wide-ranging capabilities and tactics are continuing to grow and refine as the group expands its infection vectors.  Travelers must be aware of the threats posed when traveling \u2013 especially to foreign countries \u2013 and take extra precautions to secure their systems and data. Publicly accessible Wi-Fi networks present a significant threat and should be avoided whenever possible.  Additional technical information and details are available to FireEye iSIGHT Intelligence customers through our portal.","url":"https:\/\/www.fireeye.com\/\/blog\/threat-research\/2017\/08\/apt28-targets-hospitality-sector.html"},{"Unnamed: 0":1,"query":"APT28","text":"On Jan. 6, 2017, the U.S. Director of National Intelligence released its Intelligence Community Assessment: Assessing Russian Activities and Intentions in Recent US Elections. Still, questions persist about Russian involvement. Did the Russian government direct the group responsible for the breaches and related data leaks? If so, is this simply a matter of accepted state espionage, or did it cross a line? Was the breach at the Democratic National Committee part of a concerted effort by the Russian government to interfere with the U.S. presidential election?  The most consequential question remains unasked: How will Russia continue to employ a variety of methods \u2013 including hacks and leaks \u2013 to undermine the institutions, policies and actors that the Russian government perceives as constricting and condemning its forceful pursuit of its state aims?  FireEye\u2019s visibility into the operations of APT28 \u2013 a group we believe the Russian government sponsors \u2013 has given us insight into some of the government\u2019s targets, as well as its objectives and the activities designed to further them.  We have tracked and profiled this group through multiple investigations, endpoint and network detections, and continuous monitoring. Our visibility into APT28\u2019s operations, which date to at least 2007, has allowed us to understand the group\u2019s malware, operational changes and motivations. This intelligence has been critical to protecting and informing our clients, exposing this threat and strengthening our confidence in attributing APT28 to the Russian government.  Our latest report, APT28: At the Center of the Storm , is available here .  You can also register for our webinar on Feb. 21, 2017, at 8 a.m. PT\/11 a.m. ET\/4 p.m. GMT (UK), which will feature additional insights from Jonathan Wrolstad, Senior Threat Intelligence Analyst with FireEye, and Robert Morgus, Policy Analyst with New America\u2019s Cybersecurity Initiative.","url":"https:\/\/www.fireeye.com\/\/blog\/threat-research\/2017\/01\/apt28_at_the_center.html"},{"Unnamed: 0":2,"query":"APT28","text":"Complimentary Intel\nReport: Russia\u2019s APT28 Strategically Evolves its Cyber Operations    Concerns over Russian espionage litter\ntoday\u2019s headlines as regional threat actors influence high-profile\ninternational matters, including the 2016 U.S. presidential election\nand more.  The U.S. Federal government confirmed\nwhat FireEye long upheld \u2013 that the Russian actor group APT28 is\nindeed sponsored by the Russian government \u2013 and in response, recently\nreleased indicators of compromise (IoCs) to block their espionage\nactivities. Learn more about this advanced persistent threat. Having\ntracked APT28 through multiple attacks and intrusions, FireEye has a\nunique understanding of the group\u2019s motives and techniques, tactics\nand procedures (TTPs).  Download this free 15-page intelligence\nreport \u2013 At the Center of the Storm: Russia\u2019s APT28 Strategically\nEvolves its Cyber Operations \u2013 for our unique insight into:   APT28\u2019s decade-long cyber support\nof Russian strategic interests.  The techniques, tactics and\nprocedures (TTPs) employed to compromise their victims.  FireEye\u2019s forensic and adversary intelligence gathered from\nprevious APT28 breaches.  APT28\u2019s influence on numerous\nhigh-profile national and international matters, including the\nSyrian conflict, NATO-Ukraine relations and the 2016 U.S.\npresidential election.   Gain valuable insight into who you\u2019re\nblocking and why. Download our summarized intel on this high-profile\nRussian threat. Download this complimentary report today.","url":"https:\/\/www.fireeye.com\/\/current-threats\/apt-groups\/rpt-apt28.html"},{"Unnamed: 0":3,"query":"APT28","text":"The role of nation-state actors in cyber attacks was perhaps most widely revealed in February 2013 when Mandiant released the APT1 report, which detailed a professional cyber espionage group based in China. Today we release a new report: APT28: A Window Into Russia\u2019s Cyber Espionage Operations?  This report focuses on a threat group that we have designated as APT28. While APT28\u2019s malware is fairly well known in the cybersecurity community, our report details additional information exposing ongoing, focused operations that we believe indicate a government sponsor based in Moscow.  In contrast with the China-based threat actors that FireEye tracks, APT28 does not appear to conduct widespread intellectual property theft for economic gain. Instead, APT28 focuses on collecting intelligence that would be most useful to a government. Specifically, FireEye found that since at least 2007, APT28 has been targeting privileged information related to governments, militaries and security organizations that would likely benefit the Russian government.  In our report, we also describe several malware samples containing details that indicate that the developers are Russian language speakers operating during business hours that are consistent with the time zone of Russia\u2019s major cities, including Moscow and St. Petersburg. FireEye analysts also found that APT28 has systematically evolved its malware since 2007, using flexible and lasting platforms indicative of plans for long-term use and sophisticated coding practices that suggest an interest in complicating reverse engineering efforts.  We assess that APT28 is most likely sponsored by the Russian government based on numerous factors summarized below:   FireEye is also releasing indicators to help organizations detect APT28 activity. Those indicators can be downloaded at https:\/\/github.com\/fireeye\/iocs .  As with the APT1 report, we recognize that no single entity completely understands the entire complex picture of intense cyber espionage over many years. Our goal by releasing this report is to offer an assessment that informs and educates the community about attacks originating from Russia. The complete report can be downloaded here: \/content\/dam\/legacy\/resources\/pdfs\/apt28.pdf .","url":"https:\/\/www.fireeye.com\/\/blog\/threat-research\/2014\/10\/apt28-a-window-into-russias-cyber-espionage-operations.html"},{"Unnamed: 0":4,"query":"APT28","text":"FireEye Labs recently detected a limited APT campaign exploiting zero-day vulnerabilities in Adobe Flash and a brand-new one in Microsoft Windows. Using the Dynamic Threat Intelligence Cloud (DTI), FireEye researchers detected a pattern of attacks beginning on April 13 th , 2015. Adobe independently patched the vulnerability (CVE-2015-3043) in APSB15-06 . Through correlation of technical indicators and command and control infrastructure, FireEye assess that APT28 is probably responsible for this activity.  Microsoft is aware of the outstanding local privilege escalation vulnerability in Windows (CVE-2015-1701). While there is not yet a patch available for the Windows vulnerability, updating Adobe Flash to the latest version will render this in-the-wild exploit innocuous. We have only seen CVE-2015-1701 in use in conjunction with the Adobe Flash exploit for CVE-2015-3043. The Microsoft Security Team is working on a fix for CVE-2015-1701.  Exploit Overview  The high level flow of the exploit is as follows:  1.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 User clicks link to attacker controlled website 2.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 HTML\/JS launcher page serves Flash exploit 3.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Flash exploit triggers CVE-2015-3043, executes shellcode 4.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Shellcode downloads and runs executable payload 5.\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Executable payload exploits local privilege escalation (CVE-2015-1701) to steal System token  The Flash exploit is served from unobfuscated HTML\/JS. The launcher page picks one of two Flash files to deliver depending upon the target\u2019s platform (Windows 32 versus 64bits).  The Flash exploit is mostly unobfuscated with only some light variable name mangling. The attackers relied heavily on the CVE-2014-0515 Metasploit module, which is well documented. It is ROPless, and instead constructs a fake vtable for a FileReference object that is modified for each call to a Windows API.  The payload exploits a local privilege escalation vulnerability in the Windows kernel if it detects that it is running with limited privileges. It uses the vulnerability to run code from userspace in the context of the kernel, which modifies the attacker\u2019s process token to have the same privileges as that of the System process.  CVE-2015-3043 Exploit  The primary difference between the CVE-2014-0515 metasploit module and this exploit is, obviously, the vulnerability. CVE-2014-0515 exploits a vulnerability in Flash\u2019s Shader processing, whereas CVE-2015-3043 exploits a vulnerability in Flash\u2019s FLV processing. The culprit FLV file is embedded within AS3 in two chunks, and is reassembled at runtime.  Vulnerability  A buffer overflow vulnerability exists in Adobe Flash Player (<=17.0.0.134) when parsing malformed FLV objects. Attackers exploiting the vulnerability can corrupt memory and gain remote code execution.  In the exploit, the attacker embeds the FLV object directly in the ActionScript code, and plays the video using NetStream class. In memory, it looks like the following:  0000000: 46 4c 56 01 05 00 00 00 09 00 00 00 00 12 00 00\u00a0 FLV............. 0000010: f4 00 00 00 00 00 00 00 02 00 0a 6f 6e 4d 65 74\u00a0 ...........onMet 0000020: 61 44 61 74 61 08 00 00 00 0b 00 08 64 75 72 61\u00a0 aData.......dura 0000030: 74 69 6f 6e 00 40 47 ca 3d 70 a3 d7 0a 00 05 77\u00a0 tion.@G.=p.....w 0000040: 69 64 74 68 00 40 74 00 00 00 00 00 00 00 06 68\u00a0 idth.@t........h 0000050: 65 69 67 68 74 00 40 6e 00 00 00 00 00 00 00 0d\u00a0 eight.@n........ 0000060: 76 69 64 65 6f 64 61 74 61 72 61 74 65 00 00 00\u00a0 videodatarate... \u2026.. 0003b20: 27 6e ee 72 87 1b 47 f7 41 a0 00 00 00 3a 1b 08\u00a0 'n.r..G.A....:.. 0003b30: 00 04 41 00 00 0f 00 00 00 00 68 ee ee ee ee ee\u00a0 ..A.......h..... 0003b40: ee ee ee ee ee ee ee ee ee ee ee ee ee ee ee ee\u00a0 ................ 0003b50: ee ee ee ee ee ee ee ee ee ee ee ee ee ee ee ee\u00a0 ................ 0003b60: ee ee ee ee ee ee ee ee ee ee ee ee ee ee ee ee\u00a0 ................   Files of the FLV file format contain a sequence of Tag structures. In Flash, these objects are created when parsing FLV Tags:  .text:1018ACE9 sub_1018ACE9\u00a0\u00a0\u00a0 proc near\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ; CODE XREF: sub_1018BBAC+2Bp .text:1018ACE9\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ; sub_10192797+1A1p ... .text:1018ACE9 .text:1018ACE9 arg_0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 = dword ptr\u00a0 4 .text:1018ACE9 .text:1018ACE9\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0\u00a0mov\u00a0\u00a0\u00a0\u00a0 eax, ecx .text:1018ACEB\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 ecx, [esp+arg_0] .text:1018ACEF\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 dword ptr [eax], offset off_10BA771C .text:1018ACF5\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 dword ptr [eax+24h], 1 .text:1018ACFC\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 and\u00a0\u00a0\u00a0\u00a0 dword ptr [eax+14h], 0 .text:1018AD00\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 [eax+28h], ecx .text:1018AD03\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 byte ptr [eax+20h], 0 .text:1018AD07\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 retn\u00a0\u00a0\u00a0 4 .text:1018AD07 sub_1018ACE9\u00a0\u00a0\u00a0 endp   In the case of this exploit, a Tag structure begins at offset 0x3b2f into the FLV stream that, when parsed, populates the Tag structure as follows:  Tag 2: UINT_8 type: 8 UINT_24 datasize: 1089 UINT_24 timestamp: 15 UINT_8 timestamphi: 0 UINT_24 streamid: 0 UINT_4 fmt: 6 UINT_2 sr: 2 UINT_1 bits: 0 UINT_1 channels: 0 UBYTE data[1088]: \\xee\\xee\\xee\\xee\u2026 UINT_32 lastsize: 0xeeeeeeee   Beginning within the data field, all contents of the FLV stream become 0xEE. Consequently, the data and lastsize fields are mangled, and one final tag technically exists consisting exclusively of 0xEE:  Tag 3: UINT_8 type: 0xEE UINT_24 datasize: 0xEEEEEE \u2026   One can see the datasize field of Tag2 populated from the attacker's FLV stream below:  .text:10192943\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 eax, [ebx+24h] .text:10192946\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 [esi+14h], eax .text:10192949\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 movzx\u00a0\u00a0 eax, byte ptr [ebx+19h] ; 00 .text:1019294D\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 movzx\u00a0\u00a0 ecx, byte ptr [ebx+1Ah] ; 04 .text:10192951\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 shl\u00a0\u00a0\u00a0\u00a0 eax, 8 .text:10192954\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 or\u00a0\u00a0\u00a0\u00a0\u00a0 eax, ecx .text:10192956\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 movzx\u00a0\u00a0 ecx, byte ptr [ebx+1Bh] ; 41 .text:1019295A\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 shl\u00a0\u00a0\u00a0\u00a0 eax, 8 .text:1019295D\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 or\u00a0\u00a0\u00a0\u00a0\u00a0 eax, ecx .text:1019295F\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 ecx, ebx .text:10192961\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 [esi+0Ch], eax\u00a0 ; 0x441 .text:10192964\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 call\u00a0\u00a0\u00a0 sub_1002E2B3   The buffer is allocated with fixed size 0x2000:  .text:101A647E\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 push\u00a0\u00a0\u00a0 2000h .text:101A6483\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0 \u00a0ecx, esi .text:101A6485\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 call\u00a0\u00a0\u00a0 sub_101A6257\u00a0\u00a0\u00a0 ; alloc 0x2000 buffer, store in esi+0xDC \u2026\u2026 .text:101A627F\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 push\u00a0\u00a0\u00a0 0 .text:101A6281\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 push\u00a0\u00a0\u00a0 edi\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 ; 0x2000 .text:101A6282\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 call\u00a0\u00a0\u00a0 sub_105EBEB0 .text:101A6287\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pop\u00a0\u00a0\u00a0\u00a0 ecx .text:101A6288\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 pop\u00a0\u00a0\u00a0\u00a0 ecx .text:101A6289\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 mov\u00a0\u00a0\u00a0\u00a0 [esi+0DCh], eax  Since the size is controlled by the attacker, it\u2019s possible to overflow the fixed size buffer with certain data.   A datasize of 0x441 results in a value here of 0x1100 passed to sub_100F88F8, which memcopies 0x2200 bytes in 0x11 chunks of 0x200. The last memcpy overflows the fixed size 0x2000 buffer into a adjacent heap memory.  Attackers spray the heap with array of Vector, 0x7fe * 4 + 8 == 0x2000, and create holes of such size, which will be allocated by the said object.  while (_local_2 < this._bp35) \/\/ _bp35 == 0x2000 { this._ok47[_local_2] = new Vector.<uint>(this._lb60); \/\/ _lb60 == 0x07FE _local_3 = 0x00; while (_local_3 < this._lb60) { this._ok47[_local_2][_local_3] = 0x41414141; _local_3++; }; _local_2 = (_local_2 + 0x01); }; _local_2 = 0x00; while (_local_2 < this._bp35) { this._ok47[_local_2] = null; _local_2 = (_local_2 + 0x02); };   As the previous picture demonstrated, the followed Vector object\u2019s length field being overflowed as 0x80007fff, which enables the attacker to read\/write arbitrary data within user space.  Shellcode  Shellcode is passed to the exploit from HTML in flashvars. The shellcode downloads the next stage payload, which is an executable passed in plaintext, to the temp directory with UrlDownloadToFileA, which it then runs with WinExec.  Payload & C2  This exploit delivers a malware variant that shares characteristics with the APT28 backdoors CHOPSTICK and CORESHELL malware families, both described in our APT28 whitepaper .\u00a0 The malware uses an RC4 encryption key that was previously used by the CHOPSTICK backdoor.\u00a0 And the C2 messages include a checksum algorithm that resembles those used in CHOPSTICK backdoor communications.\u00a0 In addition, the network beacon traffic for the new malware resembles those used by the CORESHELL backdoor.\u00a0 Like CORESHELL, one of the beacons includes a process listing from the victim host.\u00a0 And like CORESHELL, the new malware attempts to download a second-stage executable.  One of the C2 locations for the new payload, 87.236.215[.]246 , also hosts a suspected APT28 domain ssl-icloud[.]com .\u00a0 The same subnet ( 87.236.215.0\/24 ) also hosts several known or suspected APT28 domains, as seen in Table 1.   The target firm is an international government entity in an industry vertical that aligns with known APT28 targeting.  CVE-2015-1701 Exploit  The payload contains an exploit for the unpatched local privilege escalation vulnerability CVE-2015-1701 in Microsoft Windows. The exploit uses CVE-2015-1701 to execute a callback in userspace. The callback gets the EPROCESS structures of the current process and the System process, and copies data from the System token into the token of the current process. Upon completion, the payload continues execution in usermode with the privileges of the System process.  Because CVE-2015-3043 is already patched, this remote exploit will not succeed on a fully patched system. If an attacker wanted to exploit CVE-2015-1701, they would first have to be executing code on the victim\u2019s machine. Barring authorized access to the victim\u2019s machine, the attacker would have to find some other means, such as crafting a new Flash exploit, to deliver a CVE-2015-1701 payload.  Microsoft is aware of CVE-2015-1701 and is working on a fix. CVE-2015-1701 does not affect Windows 8 and later.  Acknowledgements  Thank you to all of the contributors to this blog!   The following people in FireEye: Dan Caselden, Yasir Khalid, James \u201cTom\u201d Bennett, GenWei Jiang, Corbin Souffrant, Joshua Homan, Jonathan Wrolstad, Chris Phillips, Darien Kindlund  Microsoft & Adobe security teams","url":"https:\/\/www.fireeye.com\/\/blog\/threat-research\/2015\/04\/probable_apt28_useo.html"},{"Unnamed: 0":0,"query":"APT28","text":"Introduction  On October 4, 2018, the MIVD held a press conference about an intercepted cyberattack on the OPWC in the Netherlands, allegedly by the advanced threat actor Sofacy (also known as APT28 or Fancy Bear, among others). According to the MIVD, four suspects were caught red handed trying to break into the OPWC\u2019s network. Sofacy activity in the Netherlands did not come as a surprise to us, since we have seen signs of its presence in that country before. However, aside from Sofacy we haven\u2019t seen many other advanced persistent threat (APT) groups in the Netherlands, at least when compared to other areas, such as the Middle-East. Upon further reflection, we have concluded that this is rather odd. There are quite a few big multinationals and some high tech companies located in the Netherlands. In addition, there are other potential strategic targets for threat actors. So we decided to review cyber-threat activity targeting or affecting the Netherlands.  Providing an overview of one APT\u2019s activity can be quite difficult, let alone all the APT activity affecting a country. First, we only see what we can see. That means we can only gather data from sources we have access to, such as that shared voluntarily by our customers with Kaspersky Security Network (KSN), and those sources also need to be supplied with data related to a specific APT. As a result, like any other cybersecurity vendor, our telemetry is naturally incomplete.  One way to improve our overview is to use sinkhole data. When a domain that is used by an APT expires, researchers can register that domain and direct the traffic to a sinkhole server. This is done quite frequently. For many of the APTs we track, we sinkhole at least one domain.  In comparison to other sources, such as KSN and multi-scanner services, sinkhole data has a number of advantages. For example, in some cases you can get a better overview of the victimology of the APT. The drawback is that we need to filter the results, since there can be quite a few false positives (e.g. because other researchers are investigating the malware). This filtering can be quite cumbersome, because if we base it solely on the IP and the requests, it is quite difficult to come to a verdict.  Methodology  For this blogpost we gathered all the sinkhole data for Dutch IPs in the last four years (September 2014 to September 2018), which amounts to around 85,000 entries. Of course, this is far too much to verify by hand, so the first step was to filter the results, and especially all the scanners. While some of these were relatively easy to spot and filter out (e.g. all the TOR exit nodes, all the Romanian. anti-sec ), others required a bit more effort.  In order to filter out the scanners, we deleted all entries where the IP matched more than four \u201ctags\u201d (each tag stands for a different campaign). After doing this, we were left with around 11,000. That meant 77% fewer results, but there were still too many, so we applied some more aggressive filtering.  The table below describes the number of tags that were hit per IP.      0  10,532    1  1,149    2  618    3  344    4  234    >4  938     One way to determine whether a hit in the sinkhole database is a true positive (TP) or a false positive (FP), is to find out who the victim is. We thus reversed the IP and checked whether, at the time of the first entry in our sinkhole database, the DNS entry matched the entries in our passive DNS database. If this was not the case, the entry was ignored. The next step was to remove all the entries that would be difficult to investigate (e.g. IP addresses that belong to an ADSL connection). Even though this method was quite rigid and meant that some TPs might be missed, we still decided to use it, since we knew it would be too resource-intensive to investigate all the entries. The result: only around 1,000 entries remained for investigation.  The aim of this blogpost is to give an overview of which APT groups are active in the Netherlands and what they are interested in, and that requires TPs, not FPs. For each remaining entry, a reverse DNS lookup was made, and the ASN information was saved. This was checked against our passive DNS database to see whether this IP had the same domain as its first entry in the sinkhole database. If it did, the entry was kept, if it was not, we tried to find out to which organization the IP belonged.  At this point, for the entries that remained, the raw requests were retrieved against the template request made by the APT. Finally, for each of the IPs left on our list, we tried to tie them to a company or institution. If this was the case, the entry was kept and marked as a TP.  We also checked our APT reports for targets in the Netherlands and added these results to the review.  Results  Using the methods described above, we found the following APTs that are or have been active in the Netherlands:  BlackOasis  BlackOasis is an APT group we have been tracking since May 2016. It uses the commercially available FinFisher malware made by Gamma International and sold to law enforcement agencies (LEAs) and nation states. BlackOasis differentiates itself from other APT-groups by using a vast amount of 0-days: at least five since 2015. Victims are mostly found in Middle Eastern countries, where the group is particularly interested in politics. We have also seen it targeting members of the United Nations and regional news correspondents. Recently we have seen a shift in focus towards other countries such as Russia, the UK and now also the Netherlands. Its Dutch victims fit into its shift of interest.  Sofacy  Sofacy, also known as Pawn Storm, Fancy Bear and many other names is an active APT group that we have followed since 2011. It is known for using spear phishing emails to infect targets and for the active deployment of 0-days. In 2015, Trend Micro researchers reported that the group had targeted the MH17 investigation team. Last year, the Volkskrant published an article alleging it tried to infect several Dutch Ministries. Then there is the October 4, 2018 news of four alleged Sofacy members having been caught in April 2018 trying to hack the OPWC. Even though we cannot confirm these last two incidents, since we are not involved, we have observed several targets in the Netherlands infected with Sofacy. Interestingly, we observe fewer deployments of Xagent (one of Sofacy\u2019s modules) after April 2018. Although one new Xagent deployment was noted in August 2018, it seems that the group pushed fewer, and then only new, deployments from April through June 2018.  Hades  Hades is the name given to the group held responsible for the Olympic Destroyer malware that was found targeting the 2018 Winter Olympic Games in South Korea. Our initial thought was that the malware was related to the Lazarus group, because several of our Yara rules had 100% matches with the malware. However, after careful research we found many false flags that pointed to different APT groups. A few months later, in May 2018 (not long after the OPWC incident took place), we found that Hades had returned and was now targeting financial institutions and chemical threat prevention laboratories. Given this shift of interest, it is no surprise that entities in the Netherlands were targeted as well.  Buhtrap  Buhtrap is one of the groups that targets financial institutions with the ultimate goal of stealing money. Its tools, techniques and processes (TTPs) don\u2019t differ extensively from those of traditional APT groups. Buhtrap is one of those (Carbanak and Tyupkin are others) that started by infecting financial institutions in Russia and Ukraine, but after a while shifted its focus to other parts of the world. We found Buhtrap activity in the Netherlands in 2017.  The Lamberts  In March 2017, WikiLeaks published online a series of documents that they call \u201cVault 7\u201d. Some of these documents feature malware that resembles that used by the Lamberts , a toolkit that has been used for several years, with most of its activity occurring in 2013 and 2014. One of The Lamberts\u2019 variants we have been investigating is the \u201cGreen Lamberts\u201d. We were surprised to see quite a few infections in the Netherlands, when the majority of attacks target Iran. We do not have any insight into the profile of the victims located in the Netherlands. Nevertheless, the fact that Lamberts is active in the Netherlands shows a possible shift in focus, and reminds us that for APT groups, borders do not exist.  Turla  Turla, also known as Uroboros, is a very active APT group, believed to be connected to many high-profile incidents such as the US Central Command attack in 2008 and the breach of RUAG (a Swiss military contractor). Other Turla targets include ministries and governmental organizations. Given all this, the Netherlands is a logical target for the Turla group. In fact, we would have been surprised not to have found any Turla infections in the Netherlands.  Gatak  Gatak, which also goes by the names of Stegoloader and GOLD, is a group that engages in data theft using watering hole attacks. It has been active since at least 2015, and its main interest is in intellectual property. Even though the use of watering hole attacks means the group does not have full control over who it infects, it has been able to hit a couple of high profile targets. In this case, our sinkhole database enabled us to determine that one of those was a high profile target in the Netherlands.  Putter Panda  In 2015, the Dutch chip maker, ASML was allegedly breached by Putter Panda . ASML acknowledged the breach and stated that one file was stolen. No further details are publicly available, although there was an episode of the TV program \u201cKRO reporter \u201c, partially dedicated to the breach. ASML is one of relatively few high-tech companies in the Netherlands. The fact that it has been breached is a clear sign that foreign threat actors are aware of and interested in industrial espionage in the Netherlands.  Animal Farm  Animal Farm is a group that has been active since at least 2009. A relatively advanced threat actor, it has been targeting a variety of organizations over the past years. Victims include governmental organizations, military contractors, activists and journalists. Even though the group is mainly focused on French speaking countries, we still found a few infections in the Netherlands.  Conclusion  Although our visibility of threat actor activity in the Netherlands is incomplete, the results are nevertheless surprising. Some groups we did not expect to see appear to be active in the country (such as the Lamberts). However, upon further thought, and especially when looking at potential targets located in the Netherlands and comparing this with the interests of some of the APT groups, their activity in the Netherlands makes sense.  The presence of both expected and unexpected threat actors is a good argument for organizations staying informed of the latest developments in cyberspace, particularly through threat intelligence reports. Because if you know what APT groups are up to, which organisations they target and what TTPs they use, you can implement the protection you need to stay one step ahead of them.  Such precautions are important, because one of the most stunning findings from the review of sinkhole databases was the number of organizations infected using \u201cordinary cybercrime malware\u201d. We saw infections among airlines, airports and other major companies (although it should be noted that this happens in other countries as well, not just in the Netherlands). It demonstrates again that it is not so difficult for (APT) groups to breach valuable targets and that basic cyber hygiene is important for everybody.  As a final note, one should always be careful about deriving hard conclusions from APT findings, particularly in terms of attribution. For example, even though we saw Olympic Destroyer malware being used to target chemical threat prevention laboratories shortly after the OPWC incident, this is not conclusive evidence that the groups behind these attacks are the same, or even related. However, using this fact to monitor your network for the presence of Olympic Destroyer malware if you think you might be a potential Sofacy target \u2013 and vice versa \u2013 seems like a good approach.  For more information on our private threat intelligence reporting service, please contact intelreports@kaspersky.com","url":"https:\/\/securelist.com\/threats-in-the-netherlands\/88185\/"},{"Unnamed: 0":1,"query":"APT28","text":"Targeted attacks and malware campaigns  Operation Parliament  In April, we reported the workings of Operation Parliament , a cyber-espionage campaign aimed at high-profile legislative, executive and judicial organizations around the world \u2013 with its main focus in the MENA (Middle East and North Africa) region, especially Palestine. The attacks, which started early in 2017, target parliaments, senates, top state offices and officials, political science scholars, military and intelligence agencies, ministries, media outlets, research centers, election commissions, Olympic organizations, large trading companies and others.   The attackers have taken great care to stay under the radar, imitating another attack group in the region. The targeting of victims is unlike that of previous campaigns in the Middle East, by Gaza Cybergang or Desert Falcons, and points to an elaborate information-gathering exercise that was carried out prior to the attacks (physical and\/or digital). The attackers have been particularly careful to verify victim devices before proceeding with the infection, safeguarding their C2 (Command-and-Control) servers. The attacks seem to have slowed down since the start of 2018, probably after the attackers achieved their objectives.  The malware basically provides a remote CMD\/PowerShell terminal for the attackers, enabling them to execute any scripts or commands and receive the result via HTTP requests.  This campaign is a further symptom of escalating tensions in the Middle East.  Energetic Bear  Crouching Yeti (aka Energetic Bear) is an APT group that has been active since at least 2010, mainly targeting energy and industrial companies. The group targets organizations around the world, but with a particular focus on Europe, the US and Turkey \u2013 the latter being a new addition to the group\u2019s interests during 2016-17. The group\u2019s main tactics include sending phishing e-mails with malicious documents and infecting servers for different purposes, including hosting tools and logs and watering-hole attacks . Crouching Yeti\u2019s activities against US targets have been publicly discussed by US-CERT and the UK National Cyber Security Centre (NCSC).  In April, Kaspersky Lab ICS CERT provided information on identified servers infected and used by Crouching Yeti and presented the findings of an analysis of several web servers compromised by the group during 2016 and early 2017.  Our findings are as follows.   With rare exceptions, the group\u2019s members get by with publicly available tools. The use of publicly available utilities by the group to conduct its attacks renders the task of attack attribution without any additional group \u2018markers\u2019 very difficult.  Potentially, any vulnerable server on the internet is of interest to the attackers when they want to establish a foothold in order to develop further attacks against target facilities.  In most cases that we have observed, the group performed tasks related to searching for vulnerabilities, gaining persistence on various hosts, and stealing authentication data.  The diversity of victims may indicate the diversity of the attackers\u2019 interests.  It can be assumed with some degree of certainty that the group operates in the interests of or takes orders from customers that are external to it, performing initial data collection, the theft of authentication data and gaining persistence on resources that are suitable for the attack\u2019s further development.   You can read the full report here .  ZooPark  The use of mobile platforms for cyber-espionage has been growing in recent years \u2013 not surprising, given the widespread use of mobile devices by businesses and consumers alike. ZooPark is one such operation. The attackers have been focusing on targets in the Middle East since at least June 2015, using several generations of malware to target Android devices, which we have labelled versions one to four.  Each version marks a progression \u2013 from very basic first and second versions, to the commercial spyware fork in the third version and then to the complex spyware that is the fourth version. The last step is especially interesting, showing a big leap from straightforward code functionality to highly sophisticated malware.   This suggests that the latest version may have been bought from a vendor of specialist surveillance tools. This wouldn\u2019t be surprising, since the market for these espionage tools is growing, becoming popular among governments, with several known cases in the Middle East. At this point, we cannot confirm attribution to any known threat actor. If you would like to learn more about our intelligence reports, or request more information on a specific report, contact us at intelreports@kaspersky.com.  We have seen two main distribution vectors for ZooPark \u2013 Telegram channels and watering-holes. The second of these has been the preferred method: we found several news websites that have been hacked by the attackers to redirect visitors to a downloading site that serves malicious APKs. Some of the themes observed in the campaign include \u2018Kurdistan referendum\u2019, \u2018TelegramGroups\u2019 and \u2018Alnaharegypt news\u2019, among others.  The target profile has evolved in the last few years of the campaign, focusing on victims in Egypt, Jordan, Morocco, Lebanon and Iran.   Some of the samples we have analyzed provide clues about the intended targets. For example, one sample mimics a voting application for the independence referendum in Kurdistan. Other possible high-profile targets include the United Nations Relief and Works Agency (UNRWA) for Palestine refugees in the Near East in Amman, Jordan.  The king is dead, long live the king!  On April 18, someone uploaded an interesting exploit to VirusTotal. This was detected by several security vendors, including Kaspersky Lab \u2013 using our generic heuristic logic for some older Microsoft Word documents.  This turned out to be a new zero-day vulnerability for Internet Explorer (CVE-2018-8174) \u2013patched by Microsoft on May 8, 2018. Following processing of the sample in our sandbox system , we noticed that it successfully exploited a fully patched version of Microsoft Word. This led us to carry out a deeper analysis of the vulnerability .  The infection chain consists of the following steps. The victim receives a malicious Microsoft Word document. After opening it, the second stage of the exploit is downloaded \u2013 an HTML page containing VBScript code. This triggers a UAF ( Use After Free ) vulnerability and executes shellcode.  Despite the initial attack vector being a Word document, the vulnerability is actually in VBScript. This is the first time we have seen a URL Moniker used to load an IE exploit in Word, but we believe that this technique will be heavily abused by attackers in the future, since it allows them to force victims to load IE, ignoring the default browser settings. It\u2019s likely that exploit kit authors will start abusing it in both drive-by attacks (through the browser) and spear-phishing campaigns (through a document).  To protect against this technique, we would recommend applying the latest security updates and using a security solution with behavior detection capabilities.  VPNFilter  In May, researchers from Cisco Talos published the results of their investigation into VPNFilter, malware used to infect different brands of routers \u2013 mainly in Ukraine, although affecting routers in 54 countries in total. Initially, they believed that the malware had infected around 500,000 routers \u2013 Linksys, MikroTik, Netgear and TP-Link networking equipment in the small office\/home office (SOHO) sector, and QNAP network-attached storage (NAS) devices. However, it later became clear that the list of infected routers was much longer \u2013 75 in total, including ASUS, D-Link, Huawei, Ubiquiti, UPVEL and ZTE.  The malware is capable of bricking the infected device, executing shell commands for further manipulation, creating a TOR configuration for anonymous access to the device or configuring the router\u2019s proxy port and proxy URL to manipulate browsing sessions.  Further research by Cisco Talos showed that the malware is able to infect more than just targeted devices. It is also spread into networks supported by the device, thereby extending the scope of the attack. Researchers also identified a new stage-three module capable of injecting malicious code into web traffic.  The C2 mechanism has several stages. First, the malware tries to visit a number of gallery pages hosted on \u2018photobucket[.]com\u2019 and fetches the image from the page. If this fails, the malware tries to fetch an image from the hard-coded domain \u2018toknowall[.]com\u2019 (this C2 domain is currently sink-holed by the FBI). If this fails also, the malware goes into passive backdoor mode, in which it processes network traffic on the infected device, waiting for the attacker\u2019s commands. Researchers in the Global Research and Analysis Team (GReAT) at Kaspersky Lab analyzed the EXIF processing mechanism .  One of the interesting questions is who is behind this malware. Cisco Talos indicated that a state-sponsored or state affiliated threat actor is responsible. In its affidavit for sink-holing the C2 , the FBI suggests that Sofacy (aka APT28, Pawn Storm, Sednit, STRONTIUM, and Tsar Team) is the culprit. There is some code overlap with the BlackEnergy malware used in previous attacks in Ukraine (the FBI\u2019s affidavit makes it clear that they see BlackEnergy (aka Sandworm) as a sub-group of Sofacy).  LuckyMouse  In March 2018, we detected an ongoing campaign targeting a national data center in Central Asia . The choice of target of the campaign, which has been active since autumn 2017, is especially significant \u2013 it means that the attackers were able to gain access to a wide range of government resources in one fell swoop. We think they did this by inserting malicious scripts into the country\u2019s official websites in order to conduct watering-hole attacks.  We attribute this campaign to the Chinese-speaking threat actor LuckyMouse (aka EmissaryPanda and APT27) because of the tools and tactics used in the campaign, because the C2 domain, update.iaacstudio[.]com, was previously used by this group and because they have previously targeted government organizations, including those in Central Asia.  The initial infection vector used in the attack against the data centre is unclear. Even where we observed LuckyMouse using weaponized documents with CVE-2017-118822 (Microsoft Office Equation Editor, widely used by Chinese-speaking actors since December 2017), we couldn\u2019t prove that they were related to this particular attack. It\u2019s possible that the attackers used a watering hole to infect data center employees.  The attackers used the HyperBro Trojan as their last-stage, in-memory remote administration tool (RAT) and their anti-detection launcher and decompressor makes extensive use of the Metasploit \u2018shikata_ga_nai\u2019 encoder as well as LZNT1 compression.  The main C2 used in this campaign is bbs.sonypsps[.]com, which resolved to an IP address that belongs to a Ukrainian ISP network, held by a MikroTik router using version 6.34.4 (March 2016) of the firmware with SMBv1 on board. We suspect that this router was hacked as part of the campaign in order to process the malware\u2019s HTTP requests.  The initial module drops three files that are typical for Chinese-speaking threat actors \u2013 a legitimate Symantec pcAnywhere file (\u2018intgstat.exe\u2019) for DLL side-loading, a DLL launcher (\u2018pcalocalresloader.dll\u2019) and the last-stage decompressor (\u2018thumb.db\u2019). As a result of all these steps, the last-stage Trojan is injected into the process memory of \u2018svchost.exe\u2019.  The launcher module, obfuscated with the notorious Metasploit \u2018shikata_ga_nai\u2019 encoder, is the same for all the droppers. The resulting de-obfuscated code performs typical side-loading: it patches the pcAnywhere image in memory at its entry-point. The patched code jumps back to the second \u2018shikata_ga_nai\u2019 iteration of the decryptor, but this time as part of the white-listed application.  The Metasploit encoder obfuscates the last part of the launcher\u2019s code, which in turn resolves the necessary API and maps \u2018thumb.db\u2019 into the memory of the same process (i.e. pcAnywhere). The first instructions in the mapped \u2018thumb.db\u2019 are for a new iteration of \u2018shikata_ga_nai\u2019. The decrypted code resolves the necessary API functions, decompresses the embedded PE file with \u2018RtlCompressBuffer()\u2019 using LZNT1 and maps it into memory.   Olympic Destroyer  In our first report on Olympic Destroyer , the cyberattack on the PyeongChang Winter Olympics, we highlighted a specific spear-phishing attack as the initial infection vector. The threat actor sent weaponized documents, disguised as Olympic-related content, to relevant persons and organizations.  We have continued to track this APT group\u2019s activities and recently noticed that they have started a new campaign with a different geographical distribution and using new themes. Our telemetry, and the characteristics of the spear-phishing documents we have analysed, indicate that the attackers behind Olympic Destroyer are now targeting financial and biotechnology-related organizations based in Europe \u2013 specifically, Russia, the Netherlands, Germany, Switzerland and Ukraine.   The group continues to use a non-executable infection vector and highly obfuscated scripts to evade detection.   The earlier Olympic Destroyer attacks \u2013 designed to destroy and paralyse infrastructure of the Winter Olympic Games and related supply chains, partners and venues \u2013 were preceded by a reconnaissance operation. It\u2019s possible that the new activities are part of another reconnaissance stage that will be followed by a wave of destructive attacks with new motives. This is why it is important for all bio-chemical threat prevention and research companies and organizations in Europe to strengthen their security and run unscheduled security audits.  The variety of financial and non-financial targets could indicate that the same malware is being used by several groups with different interests. This could also be a result of cyberattack outsourcing, which is not uncommon among nation state threat actors. However, it\u2019s also possible that the financial targets might be another false flag operation by a threat actor that has already shown that they excel at this during their last campaign.  It would be possible to draw certain conclusions about who is behind this campaign, based on the motives and selection of targets. However, it would be easy to make a mistake with only the fragments of the picture that are visible to researchers. The appearance of Olympic Destroyer at the start of this year, with its sophisticated deception efforts, changed the attribution game forever. In our view, it is no longer possible to draw conclusions based on a few attribution vectors discovered during a regular investigation. The response to threats such as Olympic Destroyer should be based on co-operation between the private sector and governments across national borders. Unfortunately, the current geo-political situation in the world only boosts the global segmentation of the internet and introduces many obstacles for researchers and investigators. This will encourage APT attackers to continue marching into the protected networks of foreign governments and commercial companies.  Malware stories  Leaking ads  When we download popular apps with good ratings from official app stores, we assume they are safe. This is partially true, because usually these apps have been developed with security in mind and have been reviewed by the app store\u2019s security team. Recently, we looked at 13 million APKs and discovered that around a quarter of them transmit unencrypted data over the internet. This was unexpected, because most apps were using HTTPS to communicate with their servers. But among the HTTPS requests, there were unencrypted requests to third-party servers. Some of these apps were very popular \u2013 in some cases they could boast hundreds of millions of downloads. On further inspection, it became clear that the apps were exposing customer data because of third-party SDKs \u2013 with advertising SDKs usually to blame. They collect data so that they can show relevant ads, but often fail to protect that data when sending it to their servers.  In most cases the apps were exposing IMEI, IMSI, Android ID, device information (e.g. manufacturer, model, screen resolution, system version and app name). Some apps were also exposing personal information, mostly the customer\u2019s name, age, gender, phone number, e-mail address and even their income.  Information transmitted over HTTP is sent in plain text, allowing almost anyone to read it. Moreover, there are likely to be several \u2018transit points\u2019 en route from the app to the third-party server \u2013 devices that receive and store information for a certain period of time. Any network equipment, including your home router, could be vulnerable. If hacked, it will give the attackers access to your data. Some of the device information gathered (specifically IMEI and IMSI numbers) is enough to monitor your further actions. The more complete the information, the more of an open book you are to outsiders \u2014 from advertisers to fake friends offering malicious files for download. However, data leakage is only part of the problem. It\u2019s also possible for unencrypted information to be substituted. For example, in response to an HTTP request from an app, the server might return a video ad, which cybercriminals can intercept and replace with a malicious version. Or they might simply change the link inside an ad so that it downloads malware.  You can find the research here , including our advice to developers and consumers.  SynAck targeted ransomware uses the Doppelganging technique  In April 2018, we saw a version of the SynAck ransomware Trojan that employs the Process Doppelganging technique. This technique, first presented in December 2017 at the BlackHat conference , has been used by several threat actors to try and bypass modern security solutions. It involves using NTFS transactions to launch a malicious process from the transacted file so that it looks like a legitimate process.  Malware developers often use custom packers to try and protect their code. In most cases, they can be effortlessly packed to reveal the original Trojan executable so that it can then be analyzed. However, the authors of SynAck obfuscated their code prior to compilation, further complicating the analysis process.  SynAck checks the directory where its executable is started from. If an attempt is made to launch it from an \u2018incorrect\u2019 directory, the Trojan simply exits. This is designed to counter automatic sandbox analysis.  The Trojan also checks to see if is being launched on a PC with the keyboard set to a Cyrillic script. If it is, it sleeps for 300 seconds and then exits, to prevent encryption of files belonging to victims from countries where Cyrillic is used.    Like other ransomware, SynAck uses a combination of symmetric and asymmetric encryption algorithms. You can find the details here .  The attacks are highly targeted, with a limited number of attacks observed against targets in the US, Kuwait, Germany and Iran. The ransom demands can be as high as $3,000.   Roaming Mantis  In May we published our analysis of a mobile banking Trojan, Roaming Mantis. We called it this because of its propagation via smartphones roaming between different Wi-Fi networks, although the malware is also known as \u2018Moqhao\u2019 and \u2018XLoader\u2019. This malicious Android app is spread using DNS hijacking through compromised routers. The victims are redirected to malicious IP addresses used to install malicious apps \u2013 called \u2018facebook.apk\u2019 and \u2018chrome.apk\u2019. The attackers count on the fact that victims are unlikely to be suspicious as long as the browser displays the legitimate URL.   The malware is designed to steal user information, including credentials for two-factor authentication, and give the attackers full control over compromised Android devices. The malware seems to be financially motivated and the low OPSEC suggests that this is the work of cybercriminals.  Our telemetry indicates that the malware was detected more than 6,000 times between February 9 and April 9, although the reports came from just 150 unique victims \u2013 some of whom saw the same malware appear again and again on their network. Our research revealed that there were thousands of daily connections to the attackers\u2019 C2 infrastructure.  The malware contains Android application IDs for popular mobile banking and game applications in South Korea. It seems the malicious app was initially targeted at victims in South Korea and this is where the malware was most prevalent. We also saw infections in China, India and Bangladesh.  It\u2019s unclear how the attackers were able to hijack the router settings. If you are concerned about DNS settings on your router, you should check the user manual to verify that your DNS settings haven\u2019t been tampered with, or contact your ISP for support. We would also strongly recommend that you change the default login and password for the admin web interface of the router, don\u2019t install firmware from third-party sources and update the router firmware regularly to prevent similar attacks.  Some clues left behind by the attackers \u2013 for example, comments in the HTML source, malware strings and a hardcoded legitimate website \u2013 point to Simplified Chinese. So we believe the cybercriminals are familiar with both Simplified Chinese and Korean.  Following our report, we continued to track this campaign. Less than a month later, Roaming Mantis had rapidly expanded its activities to include countries in Europe, the Middle East and beyond, supporting 27 languages in total.   The attackers also extended their activities beyond Android devices . On iOS, Roaming Mantis uses a phishing site to steal the victim\u2019s credentials. When the victim connects to the landing page from an iOS device, they are redirected to fake \u2018http:\/\/security.apple.com\/\u2019 webpage where the attackers steal user ID, password, card number, card expiry date and CVV .   On PCs, Roaming Mantis runs the CoinHive mining script to generate crypto-currency for the attackers \u2013 drastically increasing the victim\u2019s CPU usage.  The evasion techniques used by Roaming Mantis have also become more sophisticated. They include a new method of retrieving the C2 by using the e-mail POP protocol, server-side dynamic auto-generation of APK file\/filenames and the inclusion of an additional command to potentially assist in identifying research environments.  The rapid growth of the campaign implies that those behind it have a strong financial motivation and are probably well-funded.  If it\u2019s smart, it\u2019s potentially vulnerable  Our many years of experience in researching cyberthreats suggests that if a device is connected to the internet, eventually someone will try to hack it. This includes children\u2019s CCTV cameras, baby monitors, household appliances and even children\u2019s toys.  This also applies to routers \u2013 the gateway into a home network. In May, we described four vulnerabilities and hardcoded accounts in the firmware of the D-Link DIR-620 router \u2013 this runs on various D-Link routers supplied to customers by one of the biggest ISPs in Russia.   The latest versions of the firmware have hardcoded default credentials that can be exploited by an unauthenticated attacker to gain privileged access to the firmware and to extract sensitive data \u2013 for example, configuration files with plain-text passwords. The vulnerable web interface allows an unauthenticated attacker to run arbitrary JavaScript code in the user environment and run arbitrary commands in the router\u2019s operating system. The issues were originally identified in firmware version 1.0.37, although some of the discovered vulnerabilities were also identified in other version of the firmware.  You can read the details on the vulnerabilities here .  In May, we also investigated smart devices for animals \u2013 specifically, trackers to monitor the location of pets. These gadgets are able to access the pet owner\u2019s home network and phone, and their pet\u2019s location. We wanted to find out how secure they are. Our researchers looked at several popular trackers for potential vulnerabilities .  Four of the trackers we looked at use Bluetooth LE technology to communicate with the owner\u2019s smartphone. But only one does so correctly. The others can receive and execute commands from anyone. They can also be disabled, or hidden from the owner \u2013 all that\u2019s needed is proximity to the tracker. Only one of the tested Android apps verifies the certificate of its server, without relying solely on the system. As a result, they are vulnerable to Man-in-the-Middle (MitM) attacks\u2014intruders can intercept transmitted data by \u2018persuading\u2019 victims to install their certificate.  GPS trackers have been used successfully in many areas, but using them to track the location of pets is a step beyond their traditional scope of application. For this, they need to be upgraded with new \u2018user communication interfaces\u2019 and \u2018trained\u2019 to work with cloud services, etc. If security is not properly addressed, user data becomes accessible to intruders, potentially endangering both users and pets.  Some of our researchers recently looked at human wearable devices \u2013 specifically, smart watches and fitness trackers. We were interested in a scenario where a spying app installed on a smartphone could send data from the built-in motion sensors (accelerometer and gyroscope) to a remote server and use the data to piece together the wearer\u2019s actions \u2013 walking, sitting, typing, etc. We started with an Android-based smartphone, created a simple app to process and transmit the data and then looked at what we could get from this data.  Not only was it possible to work out if the wearer is sitting or walking, but also figure out if they are out for a stroll or changing subway trains, because the accelerometer patterns differ slightly \u2013 this is how fitness trackers distinguish between walking and cycling. It is also easy to see when someone is typing. However, finding out what they are typing would be hard and would require repeated text entry. Our researchers were able to determine the moments when a computer password entered with 96 per cent accuracy and a PIN code entered at an ATM with 87 per cent accuracy. However, it would be much harder to obtain other information \u2013 for example, a credit card number or CVC code \u2013 because of the lack of predictability about when the victim would type such information.  In reality, the difficulty involved in obtaining such information means that an attacker would have to have a strong motive for targeting someone specific. Of course, there are situations where this might be worthwhile for attackers .  An MitM extension for Chrome  Many browser extensions make our lives easier, hiding obtrusive advertising, translating text, helping us to choose the goods we want in online stores, etc. Unfortunately, there are also less desirable extensions that are used to bombard us with advertising or collect information about our activities. Then there are extensions whose main aim is to steal money. In the course of our work, we analyse a large number of extensions from different sources. Recently, a particular browser extension caught our eye because it communicated with a suspicious domain.  This extension, named \u2018 Desbloquear Conte\u00fado\u2019 (which means \u2018Unblock Content\u2019 in Portuguese) targeted customers of Brazilian online banking services \u2013 all the attempted installations that we traced occurred in Brazil.   The aim of this malicious extension is to harvest logins and passwords and then steal money from the victims\u2019 bank accounts. Such extensions are quite rare, but they need to be taken seriously because of the potential damage they can cause. You should only install verified extensions with large numbers of installations and reviews in the Chrome Web Store or other official service. Even so, in spite of the protection measures implemented by the owners of such services, malicious extensions can still end up being published there. So it\u2019s a good idea to use an internet security product that gives you a warning if an extension acts suspiciously.  By the time we published our report on this malicious extension , it had already been removed from the Chrome Web Store.  The World Cup of fraud  Fraudsters are always on the lookout for opportunities to make money off the back of major sporting events. The FIFA World Cup is no different. Long before anyone kicked a football in Russia, cybercriminals had started to create phishing websites and send messages exploiting World Cup themes.  This included notifications of fake lottery wins, informing recipients that they had won cash in a lottery supposedly held by FIFA or official partners and sponsors.   They typically contain attached documents congratulating the \u2018winner\u2019 and asking for personal details such as name, address, e-mail address, telephone number, etc. Sometimes such messages also contain malicious programs, such as banking Trojans.  Sometimes recipients are invited to take part in a ticket giveaway, or they are offered the chance to win a trip to a match. Such messages are sent in the name of FIFA, usually from addresses on recently registered domains. The purpose of such schemes is mainly to update e-mail databases used to distribute more spam.  One of the most popular ways to steal banking and other credentials is to create counterfeit imitations of official partner websites. Partner organizations often arrange ticket giveaways for clients, and attackers exploit this to lure their victims onto fake promotion sites. Such pages look very convincing: they are well-designed, with a working interface, and are hard to distinguish from the real thing. Some fraudsters buy SSL certificates to add further credibility to their fake sites. Cybercriminals are particularly keen to target clients of Visa, the tournament\u2019s commercial sponsor, offering prize giveaways in Visa\u2019s name. To take part, people need to follow a link that points to a phishing site where they are asked to enter their bank card details, including the CVV\/CVC code.   Cybercriminals also try to extract data by mimicking official FIFA notifications. The victim is informed that the security system has been updated and all personal data must be re-entered to avoid being locked out. The link in the message takes the victim to a fake account and all the data they enter is harvested by the scammers.   In the run up to the tournament, we also registered a lot of spam advertising soccer-related merchandise, though sometimes the scammers try to sell other things too \u2013 for example, pharmaceutical products.  You can find our report on the ways cybercriminals have exploited the World Cup in order to make money here . We\u2019ve provided some tips on how to avoid phishing scams \u2013 advice that holds good for any phishing scams, not just for those related to the World Cup.  In the run up to the tournament, we also analyzed wireless access points in 11 cities hosting FIFA World Cup matches \u2013 nearly 32,000 Wi-Fi hotspots in total. While checking encryption and authentication algorithms, we counted the number of WPA2 and open networks, as well as their share among all the access points.   More than a fifth of Wi-Fi hotspots use unreliable networks. This means that criminals simply need to be located near an access point to intercept the traffic and get their hands on people\u2019s data. Around three quarters of all access points use WPA\/WPA2 encryption, considered to be one of the most secure. The level of protection mostly depends on the settings, such as the strength of the password set by the hotspot owner. A complicated encryption key can take years to successfully hack. However, even reliable networks, like WPA2, cannot be automatically considered totally secure. They are still susceptible to brute-force , dictionary and key reinstallation attacks, for which there are a large number of tutorials and open source tools available online. Any attempt to intercept traffic from WPA Wi-Fi in public access points can also be made by penetrating the gap between the access point and the device at the beginning of the session.  You can read our report here , together with our recommendations on the safe use of Wi-Fi hotspots, advice that holds good wherever you may be \u2013 not just at the World Cup.","url":"https:\/\/securelist.com\/it-threat-evolution-q2-2018\/87172\/"},{"Unnamed: 0":2,"query":"APT28","text":"On May 23 2018, our colleagues from Cisco Talos published their excellent analysis of VPNFilter , an IoT \/ router malware which exhibits some worrying characteristics.  Some of the things which stand out about VPNFilter are:   It has a redundant, multi-stage command and control mechanism which uses three different channels to receive information  It has a multi-stage architecture, in which some of the more complex functionality runs only in the memory of the infected devices  It contains a destructive payload which is capable of rendering the infected devices unbootable  It uses a broken (or incorrect) RC4 implementation which has been observed before with the BlackEnergy malware  Stage 2 command and control can be executed over TOR, meaning it will be hard to notice for someone checking the network traffic   We\u2019ve decided to look a bit into the C&C mechanism for the persistent malware payload. As described in the Talos blog, this mechanism has several stages:   First, the malware tries to visit a number of gallery pages hosted on photobucket[.]com and fetches the first image from the page.  If this fails, the malware tries fetching an image file from a hardcoded domain, toknowall[.]com. This C2 domain is currently sinkholed by the FBI.  If that fails as well, the malware goes into a passive backdoor mode, in which it processes network traffic on the infected device waiting for the attacker\u2019s commands.   For the first two scenarios in which the malware successfully receives an image file, a C2 extraction subroutine is called which converts the image EXIF coordinates into an IPv4 address. This is used as an easy way to avoid using DNS lookups to reach the C&C. Of course, in case this fails, the malware will indeed lookup the hardcoded domain (toknowall[.]com). It may be worth pointing that in the past, the BlackEnergy APT devs have shown a preference for using IP addresses for C&C instead of hardcoded domain names, which can be easily sinkholed.  To analyse the EXIF processing mechanism, we looked into the sample 5f358afee76f2a74b1a3443c6012b27b , mentioned in the Talos blog. The sample is an i386 ELF binary and is about 280KB in size.  Unfortunately for researchers, it appears that the photobucket.com galleries used by the malware have been deleted, so the malware cannot use the first C2 mechanism anymore. For instance:   With these galleries unavailable, the malware tries to reach the hardcoded domain toknowall[.]com. While looking at the pDNS history for this domain, we noticed that it resolved to an IP addresses in France, at OVH, between Jan and Feb 2018:   Interestingly, when visiting this website\u2019s C2 URL, we are presented with a JPG image, suggesting it is still an active C2:   Here\u2019s how it looks when viewed as an image:   When we look into the EXIF data for the picture, for instance using IrfanView, it looks as following:  Filename \u2013 update.jpg   GPS information: \u2013  GPSLatitude \u2013 97  30  -175 (97.451389)  GPSLongitude \u2013 -118  140  -22 (-115.672778)   How to get the IP out of these? The subroutine which calculates the C2 IP from the Latitude and Longitude can be found at offset 0x08049160 in the sample.  As it turns out, VPNFilter implements an actual EXIF parser to get the required information.  First, it searches for a binary value 0xE1. This makes sense because the EXIF attribute information begins with a tag \u201c0xFF 0xE1\u201d. Then, it verifies that the tag is followed by a string \u201cExif\u201d. This is the exact data that should appear in a correct header of the Exif tag:  Exif tag FF E1        \tExif tag xx           \tLength of field 45 78 69 66 00  \u2018Exif\u2019 00           \tPadding  The tag is followed by an additional header:  \u201cAttribute information\u201d header 49 49 (or 4D 4D) Byte order, \u2018II\u2019 for little endian (\u2018MM\u2019 for big endian) 2A 00        \tFixed value xx xx        \tOffset of the first IFD  The data following this header is supposed to be the actual \u201cattribute information\u201d that is organized in so-called IFDs (Image File Directory) that are data records of a specific format. Each IFD consists of the following data:  IFD record xx xx        \tIFD tag xx xx        \tData type xx xx xx xx  \tNumber of data records of the same data type xx xx xx xx  \tOffset of the actual data, from the beginning of the EXIF  The malware\u2019s parser carefully traverses each record until it finds the one with a tag \u201925 88\u2032 (0x8825 little endian). This is the tag value for \u201cGPS Info\u201d. That IFD record is, in turn, a list of tagged IFD records that hold separate values for latitude, longitude, timestamp, speed, etc. In our case, the code is looking for the tags \u20182\u2019 (latitude) and \u20184\u2019 (longitude). The data for latitude and longitude are stored as three values in the \u201crational\u201d format : two 32-bit values, the first is the enumerator and the second one is the denominator. Each of these three values corresponds to degrees, minutes and seconds, respectively.  Then, for each record of interest, the code extracts the enumerator part and produces a string of three integers (i.e. \u201c97 30 4294967121\u201d and \u201c4294967178 140 4294967274\u2033 that will be displayed by a typical EXIF parser as 1193143 deg 55\u2032 21.00\u2033, 4296160226 deg 47\u2032 54.00\u201d). Then, curiously enough, it uses sscanf() to convert these strings back to integers. This may indicate that the GPS Info parser was taken from a third-party source file and used as-is. The extracted integers are then used to produce an actual IP address. The pseudocode in C is as follows:  const char    lat[]    = \"97 30 4294967121\";      \t\/\/ from Exif data const char    lon[]    = \"4294967178 140 4294967274\"; \/\/ from Exif data int         \to1p1, o1p2, o2p1, o3p1, o3p2, o4p1; uint8_t    octets[4];  sscanf(lat, \"%d %d %d\", &o1p2, &o1p1, &o2p1); sscanf(lon, \"%d %d %d\", &o3p2, &o3p1, &o4p1); octets[0] = o1p1 + ( o1p2 + 0x5A ); octets[1] = o2p1 + ( o1p2 + 0x5A ); octets[2] = o3p1 + ( o3p2 + 0xB4 ); octets[3] = o4p1 + ( o3p2 + 0xB4 );  printf(\"%u.%u.%u.%u\\n\", octets[0], octets[1], octets[2], octets[3]);","url":"https:\/\/securelist.com\/vpnfilter-exif-to-c2-mechanism-analysed\/85721\/"},{"Unnamed: 0":3,"query":"APT28","text":"Targeted attacks and malware campaigns  Skygofree:\u00a0 sophisticated mobile surveillance  In January, we uncovered a sophisticated mobile implant that provides attackers with remote control of infected Android devices.\u00a0 The malware, called Skygofree (after one of the domains it uses), is a targeted cyber-surveillance tool that has been in development since 2014.\u00a0 The malware is spread by means of spoofed web pages that mimic leading mobile providers.\u00a0 The campaign is ongoing and our telemetry indicates that there have been several victims, all in Italy.\u00a0 We feel confident that the developer of Skygofree is an Italian IT company that works on surveillance solutions.   The latest version of Skygofree includes functionality that has so far not been seen in the wild.\u00a0 Features include the ability to eavesdrop on conversations when the victim moves into a specific location; using Accessibility Services to capture WhatsApp messages and the ability to force an infected device to Wi-Fi networks controlled by the attackers.\u00a0 The malware includes multiple exploits for root access and is capable of stealing pictures and videos, capturing call records, SMS, geo-location, calendar events and business-related data stored in the device\u2019s memory.\u00a0 The Skygofree implant puts itself in the list of \u2018protected apps\u2019, so that it doesn\u2019t get switched off when the screen is off (this is to work around a battery-saving technique that has been implemented by one of the top device vendors.)  Our investigation also uncovered several spyware tools for Windows that form an implant for stealing sensitive data from a target computer.\u00a0 The version we found was created at the start of 2017:\u00a0 at the moment, we do not know if this implant has been used in the wild.  Since then we have also found a version for iOS that uses a rogue MDM (Mobile Device Management) server in order to infect devices.  Olympic Destroyer\u2026 but who did the \u2018destroying\u2019?  The issue of attribution was thrown into sharp relief following the malware attack on the Olympic infrastructure just before the opening of the games in February. Olympic Destroyer shut down display monitors, killed Wi-Fi and took down the Olympics web site \u2013 preventing visitors from to printing tickets.\u00a0 The attack also affected other organizations in the region \u2013 for example, ski gates and ski lifts were disabled at several South Korean ski resorts.  Olympic Destroyer is a network worm, the main purpose of which is to deliver and start a wiper payload that tries to destroy files on remote network shares in the following 60 minutes. In the meantime, the main module collects user passwords from the browser and Windows storage and crafts a new generation of the worm that contains old and freshly-collected compromised credentials. \u00a0This new generation worm is pushed to accessible local network computers and starts using the PsExec tool, drawing on the stolen credentials and current user privileges.\u00a0 Once the wiper has run for 60 minutes it cleans Windows event logs, resets backups, deletes shadow copies from the file system, disables the recovery item in the Windows boot menu, disables all services on the system and reboots the computer. \u00a0Those files on the network shares that it was able to wipe within 60 minutes remain destroyed. \u00a0The malware doesn\u2019t use any persistence and even contains protection against recurring reinfection.   One of the most notable aspects of this incident was the \u2018attribution hell\u2019 that followed.\u00a0 In the days after the attack, research teams and media companies around the world variously attributed the attack to Russia, China and North Korea \u2013 based on a number of features previously attributed to cyber-espionage and sabotage groups allegedly based in these countries or working for the governments of these countries.  Our own researchers were also trying to understand which group was behind the attack.\u00a0 At one stage during our research, we discovered something that seemed to indicate that the Lazarus group was behind the attack.\u00a0 We found a unique trace left by the attackers that exactly matched a previously known Lazarus malware component.\u00a0 However, the lack of obvious motive and inconsistencies with known Lazarus TTPs (tactics, techniques and procedures) that we found during our on-site investigation at a compromised facility in South Korea led us to look again at this artefact.\u00a0 When we did so, we discovered that the set of features didn\u2019t match the code \u2013 it had been forged to perfectly match the fingerprint used by Lazarus.\u00a0\u00a0So we concluded that the \u2018fingerprint\u2019 was a very sophisticated false flag, intentionally placed inside the malware in order to give threat hunters the impression that they had found a \u2018smoking gun\u2019 and diverting them from a more accurate attribution.  The problems associated with attribution must be taken seriously. \u00a0Given how politicised cyberspace has recently become, incorrect attribution could lead to severe consequences; and it\u2019s possible that threat actors might try to manipulate the opinion of the security community in order to influence the geo-political agenda.  Sofacy turns eastwards  Sofacy (aka APT28, Fancy Bear and Tsar Team) is a highly active and prolific cyber-espionage group that Kaspersky Lab has been tracking for many years. \u00a0In February, we published an overview of Sofacy activities in 2017 , revealing a gradual moved away from NATO-related targets at the start of 2017, towards targets in the Middle East, Central Asia and beyond. \u00a0Sofacy uses spear-phishing and watering-hole attacks to steal information, including account credentials, sensitive communications and documents.\u00a0 This threat actor also makes use of zero-day vulnerabilities to deploy its malware  Sofacy uses different tools for different target profiles.\u00a0 Early in 2017, the group\u2019s \u2018Dealer\u2019s Choice\u2019 campaign was used to target military and diplomatic organizations (mainly in NATO countries and Ukraine).   Later in the year, the group used other tools from its arsenal, \u2018Zebrocy\u2019 and \u2018SPLM\u2019, to target a broader range of organizations, including science and engineering centers and press services, with more of a focus on Central Asia and the Far East.   Sophisticated threat actors such as Sofacy continually develop the tools they use.\u00a0 The group maintains a high level of operational security and focuses on making its malware hard to detect.\u00a0 In the case of groups such as Sofacy, once any signs of their activity have been found in a network, it\u2019s important to review logins and unusual administrator access on systems, thoroughly scan and sandbox incoming attachments, and maintain two-factor authentication for services such as e-mail and VPN access. The use of APT intelligence reports , threat hunting tools such as YARA and advanced detection solutions such as KATA (Kaspersky Anti Targeted Attack Platform) will help you to understand their targeting and provide powerful ways of detecting their activities.  Our research shows that Sofacy is not the only threat actor operating in the Far East and this sometimes results in a target overlap between very different threat actors . \u00a0We have seen cases where Sofacy\u2019s Zebrocy malware has competed for access to victim\u2019s computers with the Russian-speaking Mosquito Turla clusters; and where its SPLM backdoor has competed with the traditional Turla and Chinese-speaking Danti attacks. The shared targets included government administration, technology, science and military-related organizations in or from Central Asia.  The most intriguing overlap is probably that between Sofacy and the English-speaking threat actor behind The Lamberts. The connection was discovered after researchers detected the presence of Sofacy on a server that threat intelligence had previously identified as compromised by Grey Lambert malware.\u00a0 The server belongs to a Chinese conglomerate that designs and manufactures aerospace and air defense technologies.\u00a0 However, in this case the original SPLM delivery vector remains unknown. This raises a number of hypothetical possibilities, including the fact that Sofacy could be using a new and as yet undetected exploit or a new strain of its backdoor, or that Sofacy somehow\u00a0managed to harness Grey Lambert\u2019s communication channels to download its malware. It could even be a false flag, planted during the previous Lambert infection. \u00a0We think that the most likely answer is that an unknown new PowerShell script or legitimate but vulnerable web app was exploited to load and execute the SPLM code.  Slingshot: a route[r] into the network  One of the presentations at this year\u2019s Kaspersky Security Analyst Summit was a report on a sophisticated cyber-espionage platform that has targeted victims in the Middle East and Africa since 2012.  Slingshot uses an unusual (and, as far as we know, unique) attack vector.\u00a0 Many of the victims were attacked by means of compromised MikroTik routers.\u00a0 The exact method for compromising the routers is not clear, but the attackers have found a way to add a malicious DLL to the device.\u00a0 This DLL is a downloader for other malicious files that are then stored on the router.\u00a0 When a system administrator logs in to configure the router, the router\u2019s management software downloads and runs a malicious module on the administrator\u2019s computer.  Slingshot loads a number of modules onto the victim\u2019s computer, including two huge and powerful ones:\u00a0 Cahnadr, a kernel mode module, and GollumApp, a user mode module.\u00a0 The two modules are connected and support each other in gathering information, persistence and data exfiltration.\u00a0 GollumApp is the most sophisticated of the modules:\u00a0 it contains nearly 1,500 user-code functions and provides most of the routines for persistence, file system control and C2 (Command-and-Control) communications.\u00a0 Cahnadr (also known as NDriver) contains low-level routines for network, IO operations and so on. Its kernel-mode program is able to execute malicious code without crashing the whole file system or causing a blue screen \u2013 a remarkable achievement.\u00a0 Cahnadr, written in pure C language, provides full access to the hard drive and operating memory, notwithstanding device security restrictions, and carries out integrity control of various system components to avoid debugging and security detection.  Slingshot incorporates a number of techniques to help it evade detection.\u00a0 These include encrypting all strings in its modules, calling system services directly in order to bypass security-product hooks, using a number of anti-debugging techniques and selecting which process to inject depending on the installed and running security solution processes.  Further information on target ed attack activity in the first quarter of 2018 can be found in the APT trends report for Q1 2018.  Malware stories  A Spectre is haunting Europe \u2013 and anywhere else with vulnerable CPUs  Two severe vulnerabilities affecting Intel CPUs were reported early in 2018. Dubbed \u2018Meltdown\u2019 and \u2018Spectre\u2019, they respectively allow an attacker to read memory from any process and from its own process.\u00a0 The vulnerabilities have been around since at least 2011.  Rumours of a new attack on Intel CPUs emerged at the start of December 2017 when e-mails on the LKML (Linux kernel mailing list) appeared about adding the KAISER patches to the Linux kernel.\u00a0 These patches, designed to separate the user address space from the kernel address space, were originally intended to \u2018close all hardware side channels on kernel address information\u2019. It was the impact of this seemingly drastic measure, with its clear performance impact, that had prompted the rumours.  This attack, now known as Meltdown (CVE-2017-5754), is able to read data from any process on the host system.\u00a0 While code execution is required, this can be obtained in various ways \u2013 for example, through a software bug or by visiting a malicious website that loads JavaScript code that executes the Meltdown attack.\u00a0 This means that all the data residing in memory (passwords, encryption keys, PINs, etc.) could be read if the vulnerability is exploited properly.\u00a0 Meltdown affects most Intel CPUs and some ARM CPUs.  Vendors were quick to publish patches for the most popular operating systems.\u00a0 The Microsoft update, released on 3 January, was not compatible with all anti-virus programs \u2013 possibly resulting in a BSoD (Blue Screen of Death) on incompatible systems.\u00a0 So updates could only be installed if an anti-virus product had first set a specific registry key, to indicate that there were no compatibility problems.  Spectre (CVE-2017-5753 and CVE-2017-5715) is slightly different.\u00a0 Unlike Meltdown, this attack also works on other architectures (such as AMD and ARM).\u00a0 Also, Spectre is only able to read the memory space of the exploited process, and not that of any process.\u00a0 More importantly, aside from some counter-measures in some browsers, no universal solution is readily available for Spectre.  It became clear in the weeks following the reports of the vulnerabilities that they are not easily fixable. \u00a0Spectre in particular opened new ways of exploitation that might affect different software in the months and years to come. \u00a0Most of the released patches have reduced the attack surface, mitigating against known ways of exploiting them, but do not eradicate it completely.\u00a0 Since the problem is fundamental to the working of the vulnerable CPUs, it\u2019s likely that vendors will have to deal with new ways of exploiting the vulnerabilities for years to come.  O smart new world\u2026  These days we\u2019re surrounded by smart devices.\u00a0 This includes everyday household objects such as TVs, smart meters, thermostats, baby monitors and children\u2019s toys.\u00a0\u00a0 But it also includes cars, medical devices, CCTV cameras and parking meters.\u00a0 We\u2019re even seeing the emergence of smart cities.\u00a0 However, this offers a greater attack surface to anyone looking to take advantage of security weaknesses \u2013 for whatever purpose.\u00a0 Securing traditional computers is difficult.\u00a0 But things are more problematic with the Internet of Things, where lack of standardization leaves developers able to ignore security, or to consider it as an afterthought.\u00a0 There are plenty of examples to illustrate this.  We\u2019ve looked before at vulnerabilities in smart devices around the home.\u00a0 But some of our researchers recently explored the possibility that a smart hub might be vulnerable to attack .\u00a0 A smart hub lets you control the operation of other smart devices in the home, receiving information and issuing commands.\u00a0 Smart hubs might be controlled through a touch screen, or through a mobile app or web interface.\u00a0 If it\u2019s vulnerable, it would potentially provide a single point of failure.\u00a0 While the smart hub our researchers investigated didn\u2019t contain significant vulnerabilities, there were logical mistakes that were enough to allow our researchers to obtain remote access.  Researchers at Kaspersky Lab ICS CERT recently checked a popular smart camera , to see how well protected it is from hackers.\u00a0 Smart cameras are now part of everyday life.\u00a0 Many now connect to the cloud, allowing someone to monitor what\u2019s happening at a remote location \u2013to check on pets, for security surveillance, etc.\u00a0 The model our researchers investigated is marketed as an all-purpose tool \u2013 suitable for use as a baby monitor, or as part of a security system.\u00a0 The camera is able to see in the dark, follow a moving object, stream footage to a smartphone or tablet and play back sound through a built-in speaker.\u00a0 Unfortunately, the camera turned out to have 13 vulnerabilities \u2013 almost as many as it has features \u2013 that could allow an attacker to change the administrator password, execute arbitrary code on the device, build a botnet of compromised cameras or stop it functioning completely.  Before buying any connected device, it\u2019s important to keep security in mind.   Consider if you really need the device. If you do, check the functions available and disable any that you don\u2019t need, to reduce your attack surface.  Look online for information about any vulnerabilities that have been reported.  Check to see if it\u2019s possible to update the firmware on the device.  Always change the default password and replace it with a unique, complex password.  Don\u2019t share serial numbers, IP addresses and other sensitive data relating to the device online.   You can use the free Kaspersky IoT Scanner to check your Wi-Fi network and tell you if the devices connected to it are safe.  Potential problems are not limited to consumer devices.\u00a0 Recently, Ido Naor, a researcher from our Global Research and Analysis Team and Amihai Neiderman, then at Azimuth Security, discovered a vulnerability in an automation device for a gas station .\u00a0 This device was directly connected to the Internet and was responsible for managing every component of the station, including fuel dispensers and payment terminals.\u00a0 Even more alarming, the web interface for the device was accessible with default credentials.\u00a0 Further investigation revealed that it was possible to shut down all fueling systems, cause fuel a leakage, change the price, circumvent the payment terminal (in order to steal money), capture vehicle license plates and driver identities, execute code on the controller unit and even move freely across the gas station network.  It\u2019s no less important for vendors to improve their security approach to ensure that security is considered when products are being designed.\u00a0 Kaspersky Lab, as a member of the ITU-T Study Group 20, was a contributor to the development of Recommendation ITU-T T.4806 , designed to classify security issues, examine potential threats and determine how cyber-security measures can support the safe execution of IoT systems tasks.\u00a0 This applies mostly to safety-critical IoT systems such as industrial automation, automotive systems, transportation, smart cities, and wearable and standalone medical devices.  IoT-medicine under siege  Technology is driving improvements in healthcare.\u00a0 It has the power to transform the quality and reduce the cost of health and care services. It can also give patients and citizens more control over their care, empower carers and support the development of new medicines and treatments.\u00a0 However, new healthcare technologies and mobile working practices are producing more data than ever before, at the same time providing more opportunities for data to be lost or stolen.\u00a0 We\u2019ve highlighted the issues several times over the last few years \u2013 for example, in the articles \u2018 Hospitals are under attack in 2016 \u2018, \u2018 The mistakes of smart medicine \u2018 and \u2018 Connected medicine and its diagnosis \u2018.  The number of medical data breaches continues to increase:   Over the last year we\u2019ve continued to track the activities of cybercriminals, looking at how they penetrate medical networks, how they find data on publicly available medical resources and how they exfiltrate it.\u00a0 This includes open ports:   And the services that sit behind them:   More than 60 per cent of medical organizations had some kind of malware on their computers:   We saw even more attacks on organizations closely connected to hospitals, clinics and doctors \u2013 that is, in the pharmaceutical industry:   It\u2019s vital that medical facilities remove all nodes that process personal medical data, update software and remove applications that are no longer needed, and do not connect expensive medical equipment to the main LAN.\u00a0 You can find more detailed tips here .  Crypto-currency mining is the new black  In the legitimate economy, capital tends to flow into areas where it will be most profitable.\u00a0 It\u2019s no different with cybercrime.\u00a0 Malware development is focused in areas that are likely to be more lucrative.\u00a0 So it\u2019s no surprise that, as crypto-currencies become a mainstream feature of society, we\u2019ve seen a growth in the number of malicious crypto-currency miners .\u00a0 In 2017, we blocked malicious miners on the computers of 2.7 million Kaspersky Lab customers \u2013 compared to 1.87 million in 2016.\u00a0 This is now beginning to eclipse ransomware as a way of making money illegally.   As the name suggests, crypto-currency miners are programs designed to hijack the victim\u2019s CPU in order to mine crypto-currencies.\u00a0 Like ransomware, the business model is simple:\u00a0 infect victim\u2019s computer, use the processing power of their CPU or GPU to generate coins and earn real-world money through legal exchanges and transactions.\u00a0 Unlike ransomware, it\u2019s not obvious to the victim that they are infected \u2013 most people seldom use most of their computer\u2019s processing power; and miners harness the 70 to 80 per cent that is not being used for anything else.  Crypto-miners are installed \u2013 on the computers of consumers and businesses alike \u2013 alongside adware, cracked games and pirated content. \u00a0It\u2019s becoming easy for cybercriminals to create miners, because of ready to use partner programs, open mining pools and miner-builders.\u00a0 Another method is web mining, where cybercriminals insert a script into a compromised web site that mines crypto-currencies while the victim browses the site.\u00a0 Other criminal groups are more selective, using exploits to install miners on the servers of large companies, rather than trying to infect lots of individuals.  Some of the ways cybercriminals install malicious miners in the network of corporate victims are very sophisticated, resembling the methods of APT attackers.\u00a0 Our researchers identified a case where the attackers used a process-hollowing technique.\u00a0 The infection starts with the download of a potentially unwanted application (PUA) that contains the miner.\u00a0 \u00a0This miner installer drops the legitimate Windows utility \u2018msiexec\u2019 with a random name, which downloads and executes a malicious module from a remote server. \u00a0\u00a0The next step is to install a malicious scheduler task that drops the body of the miner. This executes the legitimate system process and uses a process-hollowing technique whereby the legitimate process code is switched for malicious code. \u00a0A special system critical flag is set for this new process:\u00a0 if the victim tries to kill this process, Windows reboots.    Using such techniques, we estimate that mining botnets generated more than $7,000,000 in the second half of 2017.  You can find tips on securing businesses from malicious miners here .  Our data in their hands  Personal data is valuable.\u00a0 This is evident from the regular news reports of data breaches.\u00a0 These include the theft of huge amounts of data and the re-use of stolen credentials .\u00a0 However, the recent scandal involving the use, by Cambridge Analytica, of Facebook data is a reminder that personal information is not just valuable to cybercriminals.  In many cases, personal data is the price people pay to obtain a product or service \u2013 \u2018free\u2019 browsers, \u2018free\u2019 e-mail accounts, \u2018free\u2019 social network accounts, etc.\u00a0 But not always.\u00a0 Increasingly, we\u2019re surrounded by smart devices that are capable of gathering details on the minutiae of our lives.\u00a0 Earlier this year, one journalist turned her apartment into a smart home in order to measure how much data was being collected by the firms that made the devices .\u00a0 Since we generally pay for such devices, the harvesting of data can hardly be seen as the price we pay for the benefits they bring in these cases.  The issues surrounding security and privacy of data continue to make headlines, not least as we approach 25 May, 2018 and the implementation of the EU General Data Protection Regulation.\u00a0 It will, of course, be interesting to see what impact the legislation has.\u00a0 But we should not forget that we should all consider what data we share, with whom, and how it might be used.\u00a0 It\u2019s vital to take steps to secure our data, by using unique, complex passwords for each account and by using two-factor authentication where it\u2019s available.","url":"https:\/\/securelist.com\/it-threat-evolution-q1-2018\/85469\/"},{"Unnamed: 0":4,"query":"APT28","text":"Sofacy, also known as APT28, Fancy Bear, and Tsar Team, is a prolific, well resourced, and persistent adversary. They are sometimes portrayed as wild and reckless, but as seen under our visibility, the group can be pragmatic, measured, and agile. Our previous post on their 2017 activity stepped away from the previously covered headline buzz presenting their association with previously known political hacks and interest in Europe and the US, and examines their under-reported ongoing activity in middle east, central asia, and now a shift in targeting further east, including China, along with an overlap surprise. There is much understated activity that can be clustered within this set and overlap in APT activity . Here, we examine current deployment, code, cryptography, and targeting.  Essentially, this examination finds the group maintains subdivisions of efforts in targeting, development, and coding. Comparisons to other modules quickly shows a delineation in other Sofacy efforts. SPLM, GAMEFISH, and Zebrocy delivery all maintain their own clusters, but frequently overlap later.  Because SPLM is their primary and selective second stage tool, SPLM deployment is of much interest. But Zebrocy efforts are in such high volume, that these modules need examination as well.  SPLM\/CHOPSTICK\/XAgent Code  SPLM, otherwise known as CHOPSTICK, or by the author(s) as \u201cXAgent\u201d, is described as Sofacy\u2019s signature second stage tool, selectively used for years against around the world. Really, many modified XAgent modules have been deployed over the years. Even the individual Linux modules renamed as \u201cFysbis\u201d backdoors released in 2016 were merely modified and reduced portions of recompiled XAgent C\/C++ codebase. Anyway, SPLM\/CHOPSTICK has maintained various combinations of code, with some recognizable functionality listed here.     Source  Modules  Channels    Modules  Keylogger  HTTP    Channels  RemoteShell  FTP    Boot  FileSystem  SMTP    Library  Launcher     MainHandler  CameraShot      InjectApp      Screenshot      FileObserver      PasswordFirefox      InfoOS      Version 3 and early version 4 SPLM modules maintained keylogger, remoteshell, and filestealer code all within the larger compiled backdoor, and executed each body of functionality from within that process memory space. Later v4 SPLM injected individual keylogger, filestealer, and remoteshell modules into memory space. But for the most part, deployed SPLM maintained the structure of earlier executable code. In 2018, we now see them pushing individual and separate blobs of keylogger, filesystem, and remoteshell code that never touch disk. The larger, 300kb+ SPLM backdoors deployed in 2016 and 2017 are not observed any longer at targets in 2018. Instead, in-memory modules appear in isolation.  In addition to purely XAgent based code, we also observe zebrocy modules completely recoded into powershell from .Net.  Code and Crypto Comparisons  Current SPLM code maintains the unusual cipher hack that Sofacy began deploying in 2017 to hide away configuration details. Comparisons with cipher design and implementations we see in WhiteBear, earlier SPLM and Zebrocy modules tell a few things about design decisions and culture. And when specific malware sets are selectively deployed, that may tell us something about how efforts are divided.  SPLM full backdoor and plugins crypto and strings v4 973ff7eb7a5b720c5f6aafe4cd0469d5 Summary:\u00a0SPLM is being carved up and delivered as memory-only chunks of compiled code. We observe the \u201cretranslator\u201d code, or ProcessRetranslator.dll, currently being delivered to systems without the presence of the previous, large, SPLM code and injection capabilities. The smaller plugins deployed in 2018 now maintain the same dynamic encryption code as the large 330kb full SPLM backdoors seen in more widespread use in 2017. Strings are well organized and concise.  Code and strings example (decrypted from 2018 \u201cProcessRetranslator.dll\u201d plugin):   success command not correct error save parameters error set parameters for channel, see full info command processing error not correct command command loading func\/net module error command unloading func\/net module error cmd.exe Retranslator is now launched Retranslator is now stopped the process is destroyed one thread has died so the process is killed too create process failed on: (%s) , error (%d) Retranslator is already running Retranslator is not running exit command is successful command is unsuccessful   SPLM crypto v3 (DNC hack)  cc9e6578a47182a941a478b276320e06 Summary: This earlier SPLM variant found on the DNC network in 2016 still maintains the internal name \u201csplm.dll\u201d, with only one export \u201cinit\u201d that was called at runtime. The C++ structure of this 280kb+ dll is familiar SPLM\/CHOPSTICK, but it maintains a completely different cipher for decrypting configuration data and error messages, etc. The loop performing the bulk of the work is less than 100 bytes, performing pointer arithmetic alongside a couple xor operations of a lower nibble against sequential bytes.   Here, the cipher uses a modolo pointer arithmetic along with a decryption key per blob. Reviewing all the older ciphers and newer EC based ciphers in openssl and elsewhere results in no match.  WhiteBear code and strings Summary: WhiteBear is a cluster of activity targeting foreign embassies and MFA organizations, starting in early 2016 and continued into early 2017. Our private GReAT report on this activity pushed in February 2017, and a public report from another vendor described much of the same content almost seven months later as \u201cGayzer\u201d. It appeared to be a parallel project to WhiteAtlas Turla, and maintained quirks like modular, well logged code with an elegant, professional RSA and 3DES encryption implementation and high quality code injection capabilities, but lots of immature and crude language and english mistakes. Clearly, english and maturity was not the developers\u2019 native language.  While WhiteBear is Turla related, it is interesting to compare to other ongoing development styles. Strings and code are crass.  Debug and command strings   i cunt waiting anymore #%d lights aint turnt off with #%d Not find process CMessageProcessingSystem::Receive_NO_CONNECT_TO_GAYZER CMessageProcessingSystem::Receive_TAKE_LAST_CONNECTION CMessageProcessingSystem::Send_TAKE_FIN   Zebrocy custom crypto Summary: innovative .Net, AutoIT, Delphi, and powershell components are continually updated and deployed to new and old targets. Cryptography ranges from built-in windows api to custom RC4-based ciphers. Strings and code are simple, innovative, and concise.  Code:   Targeting Overlap and a Pivot to Asia  News headlines repeatedly trumpet Sofacy\u2019s foray into Western targets in the US and Europe, especially those connected with NATO. But these efforts only tell a portion of the Sofacy story.  Delineating groups and activity can be messy, and there appears to be overlap in targeting efforts across varying groups in central and east asia throughout 2017 and into 2018. Sofacy has been heavily interested in military and foreign affairs organizations here, resulting in multiple overlapped and competing targeting scenarios:   Mosquito Turla and Zebrocy clusters \u2013 Zebrocy clusters targeting diplomatic and commercial organizations within Europe and Asia that match Mosquito targeting profiling  SPLM overlap with traditional Turla \u2013 often Turla precedes SPLM deployments  SPLM overlap with Zebrocy \u2013 Zebrocy often precedes SPLM deployments  SPLM overlap with Danti   Currently, Sofacy targets large air-defense related commercial organizations in China with SPLM, and moves Zebrocy focus across Armenia, Turkey, Kazahkstan, Tajikistan, Afghanistan, Mongolia, China, and Japan. A previous, removed, report from another vendor claimed non-specific information about the groups\u2019 interest in Chinese universities, but that report has been removed \u2013 most likely detections were related to students\u2019 and researchers\u2019 scanning known collected samples and any \u201cincidents\u201d remain unconfirmed and unknown. On the other hand, this Chinese conglomerate designs and manufactures aerospace and air defense technologies, among many other enterprises. And here, an interest in military technologies is certainly within Sofacy purview.   So, even more interesting than the shift eastward and other targeting overlap, is that the specific target system in China was previously a Grey Lambert target. The Sofacy modules at this system appeared to never touch disk, and resemble the Linux Fysbis code. Only one maintained the Filesystem.dll code, while another maintained ProcessRetranslator.dll code. However, it is unusual that a full SPLM backdoor was not detected on this system, nor was any powershell loader script. Because the injection source remains unidentified on such a unique system, we might speculate on what is going on here:   Sofacy attackers had recorded a previous Grey Lambert remote session and replayed the communication after discovering this host, essentially compromising the Grey Lambert module on the system to gain access and later injecting SPLM modules  Grey Lambert attackers inserted false flag and reduced SPLM modules  a new and unrecognized, full variant of SPLM attempted to inject module code into memory and deleted itself  an unknown new powershell script or legitimate but vulnerable web app was exploited to load and execute this unusual SPLM code   In all likelihood, the last option is accurate.  Conclusion  Sofacy is such a large, active group that appears to maintain multiple sub-groups and efforts that all fit under the Sofacy \u201cumbrella\u201d. Sometimes, they share infrastructure, but more often they do not share infrastructure and appear to compete for access within targets. Either way, the group\u2019s consistent activity throughout central and eastern asia seems to be poorly represented in the public discussion.  SPLM did not change in substantial ways for several years, and now it is being split up and used for just functional modules. And much of the malware being deployed by Sofacy is quickly changed from C\/C++ to .Net to powershell. Other open source and semi-legitimate pen-testing tools like nbtscan and powercat are being used for mapping available resources and lateral movement as well. It is easy to expect deliberate changes within this group in 2018, with even more .Net, Delphi,\u00a0 and powershell ports of various tools appearing at Sofacy targets throughout the year.  Technical Appendix  Early 2018 Reference Set SPLM 452ed4c80c1d20d111a1dbbd99d649d5  ZEBROCY efd8a516820c44ddbf4cc8ed7f30df9c ff0e4f31a6b18b676b9518d4a748fed1  GAMEFISH bd3e9f7e65e18bb9a7c4ff8a8aa3a784  GREY LAMBERT 86146d38b738d5bfaff7e85a23dcc53e  GREYWARE\/PEN-TESTING NBTSCAN f01a9a2d1e31332ed36c1a4d2839f412","url":"https:\/\/securelist.com\/masha-and-these-bears\/84311\/"},{"Unnamed: 0":5,"query":"APT28","text":"Sofacy, also known as APT28, Fancy Bear, and Tsar Team, is a highly active and prolific APT . From their high volume 0day deployment to their innovative and broad malware set, Sofacy is one of the top groups that we monitor, report, and protect against. 2017 was not any different in this regard. Our private reports subscription customers receive a steady stream of YARA , IOC, and reports on Sofacy, our most reported APT for the year.  This high level of cyber-espionage activity goes back years. In 2011-2012, the group used a relatively tiny implant (known as \u201cSofacy\u201d or SOURFACE) as their first stage malware, which at the time had similarities with the old Miniduke implants. This made us believe the two groups were connected, although it looks they split ways at a certain point, with the original Miniduke group switching to the CosmicDuke implant in 2014. The division in malware was consistent and definitive at that point.  In 2013, the Sofacy group expanded their arsenal and added more backdoors and tools, including CORESHELL, SPLM (aka Xagent, aka CHOPSTICK), JHUHUGIT (which is built with code from the Carberp sources), AZZY (aka ADVSTORESHELL, NETUI, EVILTOSS, and spans across 4-5 generations) and a few others. We\u2019ve seen quite a few versions of these implants, which were relatively widespread at some point or still are. In 2015 we noticed another wave of attacks which took advantage of a new release of the AZZY implant, largely undetected by antivirus products. The new wave of attacks included a new generation of USB stealers deployed by Sofacy, with initial versions dating to February 2015. It appeared to be geared exclusively towards high profile targets.  Sofacy\u2019s reported presence in the DNC network alongside APT29 brought possibly the highest level of public attention to the group\u2019s activities in 2016, especially when data from the compromise was leaked and \u201cweaponized\u201d. And later 2016, their focus turned towards the Olympics\u2019 and the World Anti-Doping Agency (WADA) and Court of Arbitration for Sports (CAS), when individuals and servers in these organizations were phished and compromised. In a similar vein with past CyberBerkut activity, attackers hid behind anonymous activist groups like \u201canonpoland\u201d, and data from victimized organizations were similarly leaked and \u201cweaponized\u201d.  This write-up will survey notables in the past year of 2017 Sofacy activity, including their targeting, technology, and notes on their infrastructure. No one research group has 100% global visibility, and our collected data is presented accordingly. Here, external APT28 reports on 2017 Darkhotel -style activity in Europe and Dealer\u2019s Choice spearphishing are of interest. From where we sit, 2017 Sofacy activity starts with a heavy focus on NATO and Ukrainian partners, coinciding with lighter interest in Central Asian targets, and finishing the second half of the year with a heavy focus on Central Asian targets and some shift further East.   Dealer\u2019s Choice  The beginning of 2017 began with a slow cleanup following the Dealer\u2019s Choice campaign, with technical characteristics documented by our colleagues at Palo Alto in several stages at the end of 2016. The group spearphished targets in several waves with Flash exploits leading to their carberp based JHUHUGIT downloaders and further stages of malware. It seems that many folks did not log in and pull down their emails until Jan 2017 to retrieve the Dealer\u2019s Choice spearphish. Throughout these waves, we observed that the targets provided connection, even tangential, to Ukraine and NATO military and diplomatic interests.  In multiple cases, Sofacy spoofs the identity of a target, and emails a spearphish to other targets of interest. Often these are military or military-technology and manufacturing related, and here, the DealersChoice spearphish is again NATO related:   The global reach that coincided with this focus on NATO and the Ukraine couldn\u2019t be overstated. Our KSN data showed spearphishing targets geolocated across the globe into 2017. AM, AZ, FR, DE, IQ, IT, KG, MA, CH, UA, US, VN  DealersChoice emails, like the one above, that we were able to recover from third party sources provided additional targeting insight, and confirmed some of the targeting within our KSN data: TR, PL, BA, AZ, KR, LV, GE, LV, AU, SE, BE  0day Deployment(s)  Sofacy kicked off the year deploying two 0day in a spearphish document, both a Microsoft Office encapsulated postscript type confusion exploit (abusing CVE-2017-0262 ) and an escalation of privilege use-after-free exploit (abusing CVE-2017-0263 ). The group attempted to deploy this spearphish attachment to push a small 30kb backdoor known as GAMEFISH to targets in Europe at the beginning of 2017. They took advantage of the Syrian military conflict for thematic content and file naming \u201cTrump\u2019s_Attack_on_Syria_English.docx\u201d. Again, this deployment was likely a part of their focus on NATO targets.  Light SPLM deployment in Central Asia and Consistent Infrastructure  Meanwhile in early-to-mid 2017, SPLM\/CHOPSTICK\/XAgent detections in Central Asia provided a glimpse into ongoing focus on ex-Soviet republics in Central Asia. These particular detections are interesting because they indicate an attempted selective 2nd stage deployment of a backdoor maintaining filestealer, keylogger, and remoteshell functionality to a system of interest. As the latest revision of the backdoor, portions of SPLM didn\u2019t match previous reports on SPLM\/XAgent while other similarities were maintained. SPLM 64-bit modules already appeared to be at version 4 of the software by May of the year. Targeting profiles included defense related commercial and military organizations, and telecommunications.  Targeting included TR, KZ, AM, KG, JO, UK, UZ   Heavy Zebrocy deployments  Since mid-November 2015, the threat actor referred to as \u201cSofacy\u201d or \u201cAPT28\u201d has been utilizing a unique payload and delivery mechanism written in Delphi and AutoIT. We collectively refer to this package and related activity as \u201cZebrocy\u201d and had written a few reports on its usage and development by June 2017 \u2013 Sofacy developers modified and redeployed incremented versions of the malware. The Zebrocy chain follows a pattern: spearphish attachment -> compiled Autoit script (downloader) -> Zebrocy payload. In some deployments, we observed Sofacy actively developing and deploying a new package to a much smaller, specific subset of targets within the broader set.  Targeting profiles, spearphish filenames, and lures carry thematic content related to visa applications and scanned images, border control administration, and various administrative notes. Targeting appears to be widely spread across the Middle East, Europe, and Asia:   Business accounting practices and standards  Science and engineering centers  Industrial and hydrochemical engineering and standards\/certification  Ministry of foreign affairs  Embassies and consulates  National security and intelligence agencies  Press services  Translation services  NGO \u2013 family and social service  Ministry of energy and industry   We identified new MSIL components deployed by Zebrocy. While recent Zebrocy versioning was 7.1, some of the related Zebrocy modules that drop file-stealing MSIL modules we call Covfacy were v7.0. The components were an unexpected inclusion in this particular toolset. For example, one sent out to a handful of countries identifies network drives when they are added to target systems, and then RC4-like-encrypts and writes certain file metadata and contents to a local path for later exfiltration. The stealer searches for files 60mb and less with these extensions:   .doc  .docx  .xls  .xlsx  .ppt  .pptx  .exe  .zip  .rar   At execution, it installs an application-defined Windows hook. The hook gets windows messages indicating when a network drive has been attached. Upon adding a network drive, the hook calls its \u201cRecordToFile\u201d file stealer method.   Zebrocy spearphishing targets: AF, AM, AU, AZ, BD, BE, CN, DE, ES, FI, GE, IL, IN, JO, KW, KG, KZ, LB, LT, MN, MY, NL, OM, PK, PO, SA, ZA, SK, SE, CH, TJ, TM, TR, UA, UAE, UK, US, UZ  SPLM deployment in Central Asia  SPLM\/CHOPSTICK components deployed throughout 2017 were native 64-bit modular C++ Windows COM backdoors supporting http over fully encrypted TLSv1 and TLSv1.2 communications, mostly deployed in the second half of 2017 by Sofacy. Earlier SPLM activity deployed 32-bit modules over unencrypted http (and sometimes smtp) sessions. In 2016 we saw fully functional, very large SPLM\/X-Agent modules supporting OS X.  The executable module continues to be part of a framework supporting various internal and external components communicating over internal and external channels, maintaining slightly morphed encryption and functionality per deployment. Sofacy selectively used SPLM\/CHOPSTICK modules as second stage implants to high interest targets for years now. In a change from previous compilations, the module was structured and used to inject remote shell, keylogger, and filesystem add-ons into processes running on victim systems and maintaining functionality that was originally present within the main module.  The newer SPLM modules are deployed mostly to Central Asian based targets that may have a tie to NATO in some form. These targets include foreign affairs government organizations both localized and abroad, and defense organizations\u2019 presence localized, located in Europe and also located in Afghanistan. One outlier SPLM target profile within our visibility includes an audit and consulting firm in Bosnia and Herzegovina.  Minor changes and updates to the code were released with these deployments, including a new mutex format and the exclusive use of encrypted HTTP communications over TLS. The compiled code itself already is altered per deployment in multiple subtle ways, in order to stymie identification and automated analysis and accommodate targeted environments. Strings (c2 domains and functionality, error messages, etc) are custom encrypted per deployment.  Targets: TR, KZ, BA, TM, AF, DE, LT, NL  SPLM\/CHOPSTICK\/XAgent Modularity and Infrastructure  This subset of SPLM\/CHOPSTICK activity leads into several small surprises that take us into 2018, to be discussed in further detail at SAS 2018. The group demonstrates malleability and innovation in maintaining and producing familiar SPLM functionality, but the pragmatic and systematic approach towards producing undetected or difficult-to-detect malware continues. Changes in the second stage SPLM backdoor are refined, making the code reliably modular.  Infrastructure Notes  Sofacy set up and maintained multiple servers and c2 for varying durations, registering fairly recognizable domains with privacy services, registrars that accept bitcoin, fake phone numbers, phony individual names, and 1 to 1 email address to domain registration relationships. Some of this activity and patterns were publicly disclosed, so we expect to see more change in their process in 2018. Also, throughout the year and in previous years, researchers began to comment publicly on Sofacy\u2019s fairly consistent infrastructure setup.  As always, attackers make mistakes and give away hints about what providers and registrars they prefer. It\u2019s interesting to note that this version of SPLM implements communications that are fully encrypted over HTTPS. As an example, we might see extraneous data in their SSL\/TLS certificates that give away information about their provider or resources. Leading up to summer 2017, infrastructure mostly was created with PDR and Internet Domain Service BS Corp, and their resellers. Hosting mostly was provided at Fast Serv Inc and resellers, in all likelihood related to bitcoin payment processing.  Accordingly, the server side certificates appear to be generated locally on VPS hosts that exclusively are paid for at providers with bitcoin merchant processing. One certificate was generated locally on what appeared to be a HP-UX box, and another was generated on \u201c8569985.securefastserver[.]com\u201d with an email address \u201croot@8569985.securefastserver[.]com\u201d, as seen here for their nethostnet[.]com domain. This certificate configuration is ignored by the malware.   In addition to other ip data, this data point suggested that Qhoster at https:\/\/www.qhoster[.]com was a VPS hosting reseller of choice at the time. It should be noted that the reseller accepted Alfa Click, PayPal, Payza, Neteller, Skrill, WebMoney, Perfect Money, Bitcoin, Litecoin, SolidTrust Pay, CashU, Ukash, OKPAY, EgoPay, paysafecard, Alipay, MG, Western Union, SOFORT Banking, QIWI, Bank transfer for payment.  Conclusion  Sofacy, one of the most active APT we monitor, continues to spearphish their way into targets, reportedly widely phishes for credentials, and infrequently participates in server side activity (including host compromise with BeEF deployment , for example). KSN visibility and detections suggests a shift from their early 2017 high volume NATO spearphish targeting towards the middle east and Central Asia, and finally moving their focus further east into late 2017. Their operational security is good. Their campaigns appear to have broken out into subsets of activity and malware involving GAMEFISH, Zebrocy, and SPLM, to name a few. Their evolving and modified SPLM\/CHOPSTICK\/XAgent code is a long-standing part of Sofacy activity, however much of it is changing. We\u2019ll cover more recent 2018 change in their targeting and the malware itself at SAS 2018 .  With a group like Sofacy, once their attention is detected on a network, it is important to review logins and unusual administrator access on systems, thoroughly scan and sandbox incoming attachments, and maintain two factor authentication for services like email and vpn access. In order to identify their presence, not only can you gain valuable insight into their targeting from intelligence reports and gain powerful means of detections with hunting tools like YARA, but out-of-band processing with a solution like KATA is important.  Technical Appendix  Related md5  8f9f697aa6697acee70336f66f295837 1a4b9a6b321da199aa6d10180e889313 842454b48f5f800029946b1555fba7fc d4a5d44184333442f5015699c2b8af28 1421419d1be31f1f9ea60e8ed87277db b1d1a2c64474d2f6e7a5db71ccbafa31 953c7321c4959655fdd53302550ce02d 57601d717fcf358220340675f8d63c8a 02b79c468c38c4312429a499fa4f6c81 85cd38f9e2c9397a18013a8921841a04 f8e92d8b5488ea76c40601c8f1a08790 66b4fb539806ce27be184b6735584339 e8e1fcf757fe06be13bead43eaa1338c 953c7321c4959655fdd53302550ce02d aa2aac4606405d61c7e53140d35d7671 85cd38f9e2c9397a18013a8921841a04 57601d717fcf358220340675f8d63c8a 16e1ca26bc66e30bfa52f8a08846613d f8e92d8b5488ea76c40601c8f1a08790 b137c809e3bf11f2f5d867a6f4215f95 237e6dcbc6af50ef5f5211818522c463 88009adca35560810ec220544e4fb6aa 2163a33330ae5786d3e984db09b2d9d2 02b79c468c38c4312429a499fa4f6c81 842454b48f5f800029946b1555fba7fc d4a5d44184333442f5015699c2b8af28 b88633376fbb144971dcb503f72fd192 8f9f697aa6697acee70336f66f295837 b6f77273cbde76896a36e32b0c0540e1 1a4b9a6b321da199aa6d10180e889313 1421419d1be31f1f9ea60e8ed87277db 1a4b9a6b321da199aa6d10180e889313 9b10685b774a783eabfecdb6119a8aa3 aa34fb2e5849bff4144a1c98a8158970 aced5525ba0d4f44ffd01c4db2730a34 b1d1a2c64474d2f6e7a5db71ccbafa31 b924ff83d9120d934bb49a7a2e3c4292 cdb58c2999eeda58a9d0c70f910d1195 d4a5d44184333442f5015699c2b8af28 d6f2bf2066e053e58fe8bcd39cb2e9ad 34dc9a69f33ba93e631cd5048d9f2624 1c6f8eba504f2f429abf362626545c79 139c9ac0776804714ebe8b8d35a04641 e228cd74103dc069663bb87d4f22d7d5 bed5bc0a8aae2662ea5d2484f80c1760 8c3f5f1fff999bc783062dd50357be79 5882a8dd4446abd137c05d2451b85fea 296c956fe429cedd1b64b78e66797122 82f06d7157dd28a75f1fbb47728aea25 9a975e0ddd32c0deef1318c485358b20 529424eae07677834a770aaa431e6c54 4cafde8fa7d9e67194d4edd4f2adb92b f6b2ef4daf1b78802548d3e6d4de7ba7 ede5d82bb6775a9b1659dccb699fadcb 116d2fc1665ce7524826a624be0ded1c 20ff290b8393f006eaf4358f09f13e99 4b02dfdfd44df3c88b0ca8c2327843a4 c789ec7537e300411d523aef74407a5e 0b32e65caf653d77cab2a866ee2d9dbc 27faa10d1bec1a25f66e88645c695016 647edddf61954822ddb7ab3341f9a6c5 2f04b8eb993ca4a3d98607824a10acfb 9fe3a0fb3304d749aeed2c3e2e5787eb 62deab0e5d61d6bf9e0ba83d9e1d7e2b 86b607fe63c76b3d808f84969cb1a781 f62182cf0ab94b3c97b0261547dfc6cf 504182aaa5575bb38bf584839beb6d51 d79a21970cad03e22440ea66bd85931f  Related domains  nethostnet[.]com hostsvcnet[.]com etcrem[.]net movieultimate[.]com newfilmts[.]com fastdataexchange[.]org liveweatherview[.]com analyticsbar[.]org analyticstest[.]net lifeofmentalservice[.]com meteost[.]com righttopregnantpower[.]com kiteim[.]org adobe-flash-updates[.]org generalsecurityscan[.]com globalresearching[.]org lvueton[.]com audiwheel[.]com online-reggi[.]com fsportal[.]net netcorpscanprotect[.]com mvband[.]net mvtband[.]net viters[.]org treepastwillingmoment[.]com sendmevideo[.]org satellitedeluxpanorama[.]com ppcodecs[.]com encoder-info[.]tk wmdmediacodecs[.]com postlkwarn[.]com shcserv[.]com versiontask[.]com webcdelivery[.]com miropc[.]org securityprotectingcorp[.]com uniquecorpind[.]com appexsrv[.]net adobeupgradeflash[.]com","url":"https:\/\/securelist.com\/a-slice-of-2017-sofacy-activity\/83930\/"},{"Unnamed: 0":6,"query":"APT28","text":"How serious, really, is the danger presented by exploits? The recent leak of an exploit toolset allegedly used by the infamous Equation Group suggests it\u2019s time to revisit that question. Several zero-days, as well as a bunch of merely \u2018severe\u2019 exploits apparently used in-the-wild were disclosed, and it is not yet clear whether this represents the full toolset or whether there\u2019s more to come, related to either Equation or another targeted threat actor.  Of course, Equation Group is not the first, and is certainly not the only sophisticated targeted attacker to use stealthy, often zero-day exploits in its activity.  Today we are publishing an overview of the exploit threat landscape. Using our own telemetry data and intelligence reports as well as publically available information, we\u2019ve looked at the top vulnerabilities and applications exploited by attackers.  We have examined them from two equally important perspectives. The first part of the report summarises the top exploits targeting all users in 2015-2016, and the most vulnerable applications. The second part considers the vulnerabilities exploited between 2010 and 2016 by significant targeted threat actors reported on by Kaspersky Lab: that\u2019s 35 actors and campaigns in total.  This report focuses on attacks using client-side exploits and does not include data on attacks using server-side exploits.  Key findings on exploits targeting all users in 2015-2016:   In 2016 the number of attacks with exploits increased 24.54%, to 702,026,084 attempts to launch an exploit.    4,347,966 users were attacked with exploits in 2016 which is 20.85% less than in the previous year.    The number of corporate users who encountered an exploit at least once increased 28.35% to reach 690,557, or 15.76% of the total amount of users attacked with exploits.    Browsers, Windows, Android and Microsoft Office were the applications exploited most often \u2013 69.8% of users encountered an exploit for one of these applications at least once in 2016.  In 2016, more than 297,000 users worldwide were attacked by unknown exploits (zero-day and heavily obfuscated known exploits).   2015-2016 witnessed a number of positive developments in the exploit threat landscape. For example, two very dangerous and effective exploit kits \u2013 Angler (XXX) and Neutrino, left the underground market, depriving cybercriminals community of a very comprehensive set of tools created to hack computers remotely.  A number of bug bounty initiatives aimed at highlighting dangerous security issues were launched or extended. Together with the ever-increasing efforts of software vendors to fix new vulnerabilities, this significantly increased the cost to cybercriminals of developing new exploits. A clear victory for the infosec community that has resulted in a drop of just over 20% in the number of private users attacked with exploits: from 5.4 million in 2015 to 4.3 million in 2016.  However, alongside this welcome decline, we\u2019ve registered an increase in the number of corporate users targeted by attacks involving exploits. In 2016, the number of attacks rose by 28.35% to reach more than 690,000, or 15.76% of the total amount of users attacked with exploits. In the same year, more than 297,000 users worldwide were attacked by unknown exploits. These attacks were blocked by our Automatic Exploit Prevention technology, created to detect this type of exploits.  Key findings on exploits used by targeted attackers 2010 -2016:   Overall, targeted attackers and campaigns reported on by Kaspersky Lab in the years 2010 to 2016 appear to have held, used and re-used more than 80 vulnerabilities. Around two-thirds of the vulnerabilities tracked were used by more than one threat actor.  Sofacy, also known as APT28 and Fancy Bear seems to have made use of a staggering 25 vulnerabilities, including at least six, if not more zero-days. The Equation Group is not far behind, with approximately 17 vulnerabilities in its arsenal, of which at least eight were zero-days, according to public data and Kaspersky Lab\u2019s own intelligence.  Russian-speaking targeted attack actors take three of the top four places in terms of vulnerability use (the exception being Equation Group in second place), with other English- and Chinese-speaking threat actors further down the list.  Once made public, a vulnerability can become even more dangerous: grabbed and repurposed by big threat actors within hours.  Targeted attackers often exploit the same vulnerabilities as general attackers \u2013 there are notable similarities between the list of top vulnerabilities used by targeted threat actors in 2010-2016, and those used in all attacks in 2015-2016.   When looking more closely at the applications used by targeted threat actors to mount exploit-based attacks, we weren\u2019t surprised to discover that Windows, Flash and Office top the list.   Applications and Operation Systems most often exploited by targeted attack groups.  Moreover, the recent leak of multiple exploits allegedly belonging to the Equation cyberespionage group highlighted another known but often overlooked truth: the life of an exploit doesn\u2019t end with the release of a security patch designed to fix the vulnerability being exploited.  Our research suggests that threat actors are still actively and successfully exploiting vulnerabilities patched almost a decade ago \u2013 as can be seen in the chart below:   Everyone loves an exploit  Exploits are an effective delivery tool for malicious payloads and this means they are in high demand among malicious users, whether they are cybercriminal groups, or targeted cyberespionage and cybersabotage actors.  To take just one example, when we looked at our most recent threat statistics we found that exploits to CVE-2010-2568 (used in the notorious Stuxnet campaign) still rank first in terms of the number of users attacked. Almost a quarter of all users who encountered any exploit threat in 2016 were attacked with exploits to this vulnerability.  Conclusion and Advice  The conclusion is a simple one: even if a malicious user doesn\u2019t have access to expensive zero-days, the chances are high that they\u2019d succeed with exploits to old vulnerabilities because there are many systems and devices out there that have not yet been updated.  Even though developers of popular software invest huge resources into finding and eliminating bugs in their products and exploit mitigation techniques, for at least the foreseeable future the challenge of vulnerabilities will remain.  In order to protect your personal or business data from attacks via software exploits, Kaspersky Lab experts advise the following:   Keep the software installed on your PC up to date, and enable the auto-update feature if it is available.  Wherever possible, choose a software vendor which demonstrates a responsible approach to a vulnerability problem. Check if the software vendor has its own bug bounty program.  If you are managing a network of PCs, use patch management solutions that allow for the centralized updating of software on all endpoints under your control.  Conduct regular security assessments of the organization\u2019s IT infrastructure.  Educate your personnel on social engineering as this method is often used to make a victim open a document or a link infected with an exploit.  Use security solutions equipped with specific exploit prevention mechanisms or at least behavior-based detection technologies  Give preference to vendors which implement a multilayered approach to protection against cyberthreats, including exploits.   Further details on exploits used in attacks in 2015 and 2016, as well as by the big targeted threat actors over the last six years \u2013 and Kaspersky Lab guidance on how to address the threat they present, can be found in the full report.","url":"https:\/\/securelist.com\/exploits-how-great-is-the-threat\/78125\/"},{"Unnamed: 0":7,"query":"APT28","text":"Sofacy (also known as \u201cFancy Bear\u201d, \u201cSednit\u201d, \u201cSTRONTIUM\u201d and \u201cAPT28\u201d) is an advanced threat group that has been active since around 2008, targeting mostly military and government entities worldwide, with a focus on NATO countries.  More recently, we have also seen an increase in activity targeting Ukraine.  Back in 2011-2012, the group used a relatively tiny implant (known as \u201cSofacy\u201d or SOURFACE) as its first stage malware. The implant shared certain similarities with the old Miniduke implants . This led us to believe the two groups were connected, at least to begin with, although it appears they parted ways in 2014, with the original Miniduke group switching to the CosmicDuke implant .  At some point during 2013, the Sofacy group expanded its arsenal and added more backdoors and tools, including CORESHELL, SPLM (aka Xagent, aka CHOPSTICK), JHUHUGIT (which is built with code from the Carberp sources), AZZY (aka ADVSTORESHELL, NETUI, EVILTOSS, and spans across four to five generations) and a few others. We\u2019ve seen quite a few versions of these implants and they were relatively widespread for a time.  #Sofacy group has been active since 2008, targeting mostly military and government entities in NATO countries Tweet  Earlier this year, we noticed a new release of the AZZY implant which, at the time, was largely undetected by anti-malware products. We observed several waves of attacks using this version, most recently in October. The new waves of attacks also included a new generation of USB stealers deployed by the Sofacy actor, with the first versions dating back to February 2015, and which appear to be geared exclusively towards high profile targets.  Sofacy\u2019s August 2015 attack wave  In the months leading up to August, the Sofacy group launched several waves of attacks relying on zero-day exploits in Microsoft Office, Oracle Sun Java, Adobe Flash Player and Windows itself. For instance, its JHUHUGIT implant was delivered through a Flash zero-day and used a Windows EoP exploit to break out of the sandbox. The JHUHUGIT implant became a relatively popular first stage for the Sofacy attacks and was used again with a Java zero-day (CVE-2015-2590) in July 2015.  While the JHUHUGIT (and more recently, \u201cJKEYSKW\u201d) implant used in most of the Sofacy attacks, high profile victims are being targeted with another first level implant, representing the latest evolution of their AZZYTrojan.  Two recurring characteristics of the #Sofacy group are speed and the use of multi-backdoor packages Tweet  The first versions of the new AZZY implant appeared in August of this year. During a high profile incident we investigated, our products successfully detected and blocked a \u201cstandard\u201d Sofacy \u201cAZZY\u201d sample that was used to target a range of defense contractors. The sample used in this attack (md5 A96F4B8AC7AA9DBF4624424B7602D4F7, compiled July 29th, 2015) was a pretty standard Sofacy x64 AZZY implant, which has the internal name \u201cadvshellstore.dll\u201d.  Interestingly, the fact that the attack was blocked didn\u2019t appear to stop the Sofacy team. Just an hour and a half later they had compiled and delivered another AZZY x64 backdoor (md5: 9D2F9E19DB8C20DC0D20D50869C7A373, compiled August 4th, 2015). This was no longer detectable with static signatures by our product. However, it was detected dynamically by the host intrusion prevention subsystem when it appeared in the system and was executed.   This recurring, blindingly-fast Sofacy attack attracted our attention as neither sample was delivered through a zero-day vulnerability \u2014 instead, they appeared to be downloaded and installed by another malware. This separate malware was installed by an unknown attack as \u201c AppData\\Local\\Microsoft\\Windows\\msdeltemp.dll \u201d (md5: CE8B99DF8642C065B6AF43FDE1F786A3).  The top level malware, CE8B99DF8642C065B6AF43FDE1F786A3 (named by its authors \u201cmsdeltemp.dll\u201d according to internal strings, and compiled July 28th, 2015) is a rare type of the Sofacy AZZY implant.  It has been modified to drop a separate C&C helper, (md5: 8C4D896957C36EC4ABEB07B2802268B9) as \u201c tf394kv.dll \u201c.  The dropped \u201c tf394kv.dll \u201d file is an external C&C communications library, compiled on July 24th, 2015 and used by the main backdoor for all Internet-based communications.   Decrypted configuration block of the C&C helper library \u201c tf394kv.dll \u201c  This code modification marks an unusual departure from the typical AZZY backdoors, with its C&C communication functions moved to an external DLL file. In the past, the Sofacy developers modified earlier AZZY backdoors to use a C&C server encoded in the registry, instead of storing it in the malware itself, so this code modularisation follows the same line of thinking.  In addition to the new AZZY backdoors with side-DLL for C&C, we observed a new set of data-theft modules deployed against victims by the Sofacy group. Among the most popular modern defense mechanisms against APTs are air-gaps \u2014 isolated network segments without Internet access, where sensitive data is stored. In the past, we\u2019ve seen groups such as Equation and Flame use malware to steal data from air-gapped networks. The Sofacy group uses such tools as well.  The first versions of these new USB stealer modules appeared around February 2015 and the latest appear to have been compiled in May 2015. Older versions of these USBSTEALER modules were previously described by our colleagues from ESET .  One example of the new Sofacy USBSTEALER modules is 8b238931a7f64fddcad3057a96855f6c, which is named internally as msdetltemp.dll.   This data theft module appears to have been compiled in May 2015 and is designed to watch removable drives and collect files from them, depending on a set of rules defined by the attackers. The stolen data is copied into a hidden directory as \u201c %MYPICTURES%\\%volume serial number% \u201c, from where it can be exfiltrated by the attackers using one of the AZZY implants. More details on the new USB stealers are available in the section on technical analysis.  Conclusions  Over the last year, the Sofacy group has increased its activity almost tenfold when compared to previous years, becoming one of the most prolific, agile and dynamic threat actors in the arena. This activity spiked in July 2015, when the group dropped two completely new exploits, an Office and Java zero-day.  At the beginning of August, Sofacy began a new wave of attacks, focusing on  defense-related targets. As of November 2015, this wave of attacks is ongoing. The attackers deploy a rare modification of the AZZY backdoor, which is used for the initial reconnaissance. Once a foothold is established, they try to upload more backdoors, USB stealers as well as other hacking tools such as \u201cMimikatz\u201d for lateral movement.  Over the last year, the #Sofacy group has increased its activity almost tenfold, that spiked in July 2015 Tweet  Two recurring characteristics of the Sofacy group that we keep seeing in its attacks are speed and the use of multi-backdoor packages for extreme resilience. In the past, the group used droppers that installed both the SPLM and AZZY backdoors on the same machine. If one of them was detected, the other one provided the attacker with continued access.  As usual, the best defense against targeted attacks is a multi-layered approach. Combine traditional anti-malware technologies with patch management, host intrusion detection and, ideally, whitelisting and default-deny strategies. According to a study by the Australian DSD, 85% of the targeted attacks analysed could have been stopped by four simple defense strategies . While it\u2019s impossible to achieve 100% protection, in practice and most cases all you have to do is increase your defenses to the point where it becomes too expensive for the attacker \u2013 who will just give up and move on to other targets.  More information about the Sofacy group is available to customers of Kaspersky Intelligent Services .  Is there a \u2018silver bullet\u2019 to protect yourself against Sofacy? Learn more on Kaspersky Business blog .  Technical analysis  Internal name: DWN_DLL_MAIN.dll File format: PE32 DLL MD5: ce8b99df8642c065b6af43fde1f786a3 Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.07.28 13:05:20 (GMT) Exported functions:   10003F30: ?Applicate@@YGHXZ  10004270: ?SendDataToServer_2@@YGHPAEKEPAPAEPAK@Z  10003F60: ?k@@YGPAUHINSTANCE__@@PBD@Z   The library starts its main worker thread from the DllMain function.  Most of the strings inside the module are encrypted with a homebrew XOR-based algorithm. In addition to that, API function names are reversed, presumably to avoid detection in memory.  Once started, the code in the main thread resolves the basic API functions it needs and loads an additional library from the following location: \u201c%TEMP%\\tf394kv.dll\u201d . If this file is not present, it is recreated from a hardcoded encrypted array inside the body of the DLL.  Next, the module enters an infinite loop. Every five minutes it collects basic system information and sends it to the C2 server:   Windows version number  Hardcoded string \u201c4.3\u201d (the backdoor\u2019s internal version number)  List of running processes   The main thread also spawns a separate thread for receiving new commands from the C2 servers. Every 10 minutes, it sends a new request to the server. The server is expected to send back executable code and one of the following commands:   Write a new file \u201c%LOCAL_APPDATA%\\dllhost.exe\u201d or \u201c%TEMP%\\dllhost.exe\u201d and execute it, then delete the file  Write a new file \u201c%LOCAL_APPDATA%\\sechost.dll\u201d or \u201c%TEMP%\\sechost.dll\u201d and call its first exported function using  \u201crundll32.exe\u201d or Windows API, then delete the file  Run shellcode provided by the server in a new thread   While processing the commands, the backdoor logs all errors and execution results. The module also reads the contents of the file \u201c %APPDATA%\\chkdbg.log \u201d and appends it to the results. It then sends the aggregated log back to the C2 server.  The module aborts the thread receiving C2 command after it fails to correctly execute commands more than six times in a row, i.e. if file or process creation fails.  The export called \u201c k \u201d is a wrapper for the \u201cLoadLibraryA\u201d API function.  The export called \u201c SendDataToServer_2 \u201d does exactly what the name means: it encrypts all collected data, encodes it using Base64 encoding and calls its additional library to send the data to the C2 server. The names of the C2 servers are hardcoded.   Hardcoded C&C servers in the main module  The two C&C\u2019s hardcoded in the configuration block of the main binary are:   intelnetservice[.]com  intelsupport[.]net   The export called \u201c Applicate \u201d runs a standard Windows application message loop until a \u201cWM_ENDSESSION\u201d message is received. It then terminates the main thread.  Internal name: snd.dll File format: PE32 DLL MD5: 8c4d896957c36ec4abeb07b2802268b9 Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.07.24 12:07:27 (GMT) Exported functions:   10001580: Init  10001620: InternetExchange  10001650: SendData   This external library implements a simple Wininet-based transport for the main module.  The strings inside the binary are encrypted using 3DES and XOR and reversed.  The DllMain function initializes the library and resolves all required Windows API functions.  The \u201c Init \u201d export establishes connection to port 80 of a C2 server using Wininet API. The user agent string employed is \u201cMSIE 8.0\u201d .  The \u201c SendData \u201d export sends a HTTP POST request using a hardcoded URI \u201c \/store\/ \u201c. The reply, if its length is not equal to six and its contents do not contain \u201cOK\u201d is returned back to the caller.  The \u201c InternetExchange \u201d export closes the established connection and frees associated handles.  Sofacy AZZY 4.3 dropper analysis  File format: PE32 EXE File size: 142,336 bytes MD5: c3ae4a37094ecfe95c2badecf40bf5bb Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.02.10 10:01:59 (GMT)  Most of the strings and data in the file are encrypted using 3DES and XOR.  The code makes use of the Windows Crypto API for 3DES and the decryption key is stored as a standard Windows PUBLICKEYSTRUC structure:   Part of the decryption algorithm   Header of one encrypted data buffer containing the hardcoded 3DES key  First, it creates a new directory: \u201c%LOCAL_APPDATA%\\Microsoft\\Windows\u201d. If the directory creation fails it tries to install into \u201c%TEMP%\u201d directory instead.  Next it writes a hardcoded binary from its body to \u201cmsdeltemp.dll\u201d into the target directory . If the file exists it then moves it to \u201c__tmpdt.tmp\u201d in the same directory and continues the installation. Sets file creation timestamp to that of \u201c%SYSTEM%\\sfc.dll\u201d  To ensure the dropped payload starts automatically on user log-in it creates the following registry key:  [HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run]  StartUpChekTemp=RUNDLL32.EXE \u201c%path to msdeltemp.dll%\u201d,#1  Next, it starts the dropped dll using the same command line:  RUNDLL32.EXE \u201c %path to msdeltemp.dll% \u201c,#1  Finally, the program removes itself by starting the following command: \u201ccmd \/c DEL %path to self% \u201c  The MD5 of the dropped file is f6f88caf49a3e32174387cacfa144a89  Dropper payload \u2013 downloader DLL  Internal name: msdetltemp.dll File format: PE32 DLL File size: 73 728 bytes MD5: f6f88caf49a3e32174387cacfa144a89 Linker version: 11.0, Microsoft Visual Studio Linker timestamp: 2015.02.10 07:20:02 (GMT) Exported functions: 10002B55: Applicate  Most of the strings inside the binary are encrypted using a homebrew XOR-based algorithm and reversed.  The library is an older version of the \u201cDWN_DLL_MAIN.dll\u201d (md5: ce8b99df8642c065b6af43fde1f786a3).  The DllMain function is identical and starts the main thread; the \u201c Applicate \u201d function is identical to the one in the newer library. This version of the module does not rely on an external transport DLL for communicating with its C2 servers; instead it directly uses Wininet API functions.  The module contains the following hardcoded C2 server names:   drivres-update[.]info  softupdates[.]info   The module uses a hardcoded URL (\u201c \/check\/ \u201c) for sending HTTP POST requests to its C2 servers.  The server is expected to send back executable code and one of the following commands:   Write a new file \u201c%LOCAL_APPDATA%\\svchost.exe\u201d or \u201c%TEMP%\\svchost.exe\u201d and execute it, then delete the file  Write a new file \u201c%LOCAL_APPDATA%\\conhost.dll\u201d or \u201c%TEMP%\\conhost.dll\u201d and call its first exported function using  \u201crundll32.exe\u201d or Windows API, then delete the file  Run shellcode provided by the server in a new thread   File collection module (\u201cUSB Stealer\u201d)  Internal name: msdetltemp.dll (from resources) File size: 50,176 bytes File format: PE32 EXE MD5: 0369620eb139c3875a62e36bb7abdae8 Linker version: 10.0, Microsoft Visual Studio Linker timestamp: 2015.02.09 11:48:01 (GMT)  Most of the strings inside the binary are encrypted using 3DES and XOR and reversed.  The program creates the mutex \u201cmtx\u201d and an event named \u201cWerTyQ34C\u201d.  Upon start, it creates a window with the class name \u201cHello\u201d and title \u201cProgram\u201d, subscribes for device arrival notifications for that window and enters a standard Windows message processing loop. The message processing function waits for the WM_DEVICECHANGE event and starts a new thread on its arrival.  The module inspects every new disk volume attached to the system. For every disk it creates a \u201cstash\u201d directory in \u201c% root stash directory location %\\ %volume serial number in hex%\u201d with attributes FILE_ATTRIBUTE_HIDDEN and FILE_ATTRIBUTE_SYSTEM. The root stash directory location may be read from the configuration file or set to the default location which is \u201c%MYPICTURES%\u201d.  Then, it traverses the filesystem of the volume looking for files. Depending on the settings read from the configuration file, the scope may be narrowed to files with particular extensions and\/or files created after a specified date.  It is worth noting that if the source file location contains the string \u201cSystem Volume Information\\S-1-5-21-1315235578-283289242\\\u201d, then the file is deleted after copying to the \u201cstash\u201d directory. There are known related samples that are able to create such directories on removable drives, i.e. the sample with md5: 8cb08140ddb00ac373d29d37657a03cc.  The configuration file is loaded from the same directory as the module and is expected to have a name \u201c NvCpld.dat \u201c. It is a text file that may contain the following configuration parameters:   Path \u2013 location of the root \u201cstash\u201d directory  Ext \u2013 search for files with one of these extensions only  Date \u2013 search for files not earlier than this date   Internal name: NvCpld.dll (from export table), msdetltemp.dll (from resources), IGFSRVC.dll (from resources) File format: PE32 DLL File size: 76,288 bytes MD5s: 8b238931a7f64fddcad3057a96855f6c,  ce151285e8f0e7b2b90162ba171a4b90 Linker version: 11.0, Microsoft Visual Studio Linker timestamps:   2015.05.29 11:20:32 (GMT),  2006.11.25 04:39:15 (GMT) Exported functions: 10002500: NvMswt 10002860: NvReg 10002880: NvStart 10002A80: NvStop  This library is a newer version of the file collection module (md5: 0369620eb139c3875a62e36bb7abdae8) wrapped in a DLL file.  There are two known variants of this module; they only differ in timestamp values and version information in the resource section.  The DllMain function only decrypts the data structures and initializes Windows API pointers.  The function \u201c NvMswt \u201d is a wrapper for the API function MsgWaitForMultipleObjects.  The function \u201c NvReg \u201d is a wrapper for the API function RegisterClassW.  The function \u201c NvStart \u201d is similar to the main function of the older module; it creates a window and enters the message loop waiting for device arrival notifications. The only difference introduced is that an event named \u201c WerTyQ34C \u201d can be signalled by the function \u201c NvStop \u201d to terminate the message loop and stop processing.  Indicators of compromise:  AZZY 4.3 installer:  c3ae4a37094ecfe95c2badecf40bf5bb  New generation (4.3) AZZY implants:  ce8b99df8642c065b6af43fde1f786a3 f6f88caf49a3e32174387cacfa144a89  Dropped C&C helper DLL for AZZY 4.3:  8c4d896957c36ec4abeb07b2802268b9  File collectors \/ USB stealers:  0369620eb139c3875a62e36bb7abdae8 8b238931a7f64fddcad3057a96855f6c ce151285e8f0e7b2b90162ba171a4b90 f6f88caf49a3e32174387cacfa144a89  Stand-alone AZZY backdoors:  a96f4b8ac7aa9dbf4624424b7602d4f7 9d2f9e19db8c20dc0d20d50869c7a373  C&C hostnames:   drivres-update[.]info  intelnetservice[.]com  intelsupport[.]net  softupdates[.]info   Kaspersky Lab products detect the malware mentioned here with the following names:   Trojan.Win32.Sofacy.al  Trojan.Win32.Sofacy.be  Trojan.Win32.Sofacy.bf  Trojan.Win32.Sofacy.bg  Trojan.Win32.Sofacy.bi  Trojan.Win32.Sofacy.bj  Trojan.Win64.Sofacy.q  Trojan.Win64.Sofacy.s  HEUR:Trojan.Win32.Generic","url":"https:\/\/securelist.com\/sofacy-apt-hits-high-profile-targets-with-updated-toolset\/72924\/"},{"Unnamed: 0":8,"query":"APT28","text":"CozyDuke (aka CozyBear, CozyCar or \u201cOffice Monkeys\u201d) is a precise\u00a0attacker. Kaspersky Lab has observed signs of attacks against government organizations and commercial entities in the US, Germany, South Korea and Uzbekistan. In 2014, targets included the White House and the US Department of State, as believed.  The operation presents several interesting aspects   extremely sensitive high profile victims and targets  evolving crypto and anti-detection capabilities  strong malware functional and structural similarities mating this\u00a0toolset\u00a0to early MiniDuke second stage components, along with more recent CosmicDuke and OnionDuke components   The actor often spearphishes targets with e-mails containing a link to a hacked website. Sometimes it is a high profile, legitimate site such as \u201cdiplomacy.pl\u201d, hosting a ZIP archive. The ZIP archive contains a RAR SFX which installs the malware and shows an empty PDF decoy.   In other highly successful runs, this actor sends out phony flash videos directly as email attachments. A clever example is \u201cOffice Monkeys LOL Video.zip\u201d. The executable within not only plays a flash video, but drops and runs another CozyDuke executable. These videos are quickly passed around offices with delight while systems are infected in the background silently. Many of this APT\u2019s components are signed with phony Intel and AMD digital certificates.  Recent CozyDuke APT activity attracted significant attention in the news:  Sources: State Dept. hack the \u2018worst ever\u2019 , CNN News, March 2015  White House computer network \u2018hacked\u2019 , BBC News, October 2014  Three Months Later, State Department Hasn\u2019t Rooted Out Hackers , Wall Street Journal, February 2015  State Department shuts down its e-mail system amid concerns about hacking , Washington Post, November 2014   Let\u2019s examine a smattering of representative CozyDuke files and data. There is much to their toolset.  Office Monkeys dropper analysis  CozyDuke\u00a0droppers and spyware components often maintain fairly\u00a0common characteristics, but these files\u2019 functionality are modified in slight ways depending on the team\u2019s needs. This rapid development and deployment is interesting.  68271df868f462c06e24a896a9494225, Office Monkeys LOL Video.zip  Believe it or not, recipients in bulk run the file within:  95b3ec0a4e539efaa1faa3d4e25d51de, Office Monkeys (Short Flash Movie).exe  This file in turn drops two executables to %temp%:   2aabd78ef11926d7b562fd0d91e68ad3, Monkeys.exe  3d3363598f87c78826c859077606e514, player.exe   It first launches Monkeys.exe, playing a self-contained, very funny video of white-collar tie wearing chimpanzees working in a high rise office with a human colleague. It then launches player.exe, a CozyDuke dropper maintaining anti-detection techniques:  3d3363598f87c78826c859077606e514,player.exe,338kb,Trojan.Win32.CozyBear.v,CompiledOn:2014.07.02 21:13:33  Anti-detection and trojan functionality  The file collects system information, and then invokes a WMI instance in the rootsecuritycenter namespace to identify security products installed on the system, meaning that this code was built for x86 systems, wql here:  SELECT * FROM AntiVirusProduct SELECT * FROM FireWallProduct  The code hunts for several security products to evade:   CRYSTAL  KASPERSKY  SOPHOS  DrWeb  AVIRA  COMODO Dragon   In addition to the WMI\/wql use, it also hunts through the \u201cSOFTWAREMicrosoftWindowsCurrentVersionUninstall\u201d registry key looking for security products to avoid. Following these checks, it drops several more malware files signed with the pasted AMD digital signature to a directory it creates. These files are stored within an 217kb encrypted cab file in the dropper\u2019s resources under the name \u201cA\u201d. The cab file was encrypted and decrypted using a simple xor cipher with a rotating 16 byte key: x36x11xddx08xacx4bx72xf8x51x04x68x2ex3ex38x64x32.  The cab file is decompressed and its contents are created on disk. These dropped files bundle functionality for both 64bit and 32bit Windows systems and are all located within one directory: C:Documents and SettingsuserApplication DataATI_Subsystem  6761106f816313394a653db5172dc487,amdhcp32.dll,54kb \u00a0\u2190 32bit dll,CompiledOn:2014.07.02 21:13:24 d596827d48a3ff836545b3a999f2c3e3,aticaldd.dll,60kb \u00a0\u2190 64bit dll,CompiledOn:2014.07.02 21:13:26 bc626c8f11ed753f33ad1c0fe848d898,atiumdag.dll,285kb \u2190 32bit dll, Trojan.Win32.CozyDuke.a, CompiledOn:2014.07.02 21:13:26 4152e79e3dbde55dcf3fc2014700a022,6kb,racss.dat  The code copies rundll32.exe from windowssystem32 to its newly created %appdata%ATI_Subsystem subdirectory as \u201camdocl_as32.exe\u201d alongside the three dll\u2019s listed above. It runs atiumdag.dll with two parameter values, it\u2019s only export and an arbitrary pid, \u00a0i.e.: \u201cC:Documents and SettingsuserApplication DataATI_Subsystemamdocl_as32.exe\u201d \u201cC:Documents and SettingsuserApplication DataATI_Subsystematiumdag.dll\u201d\u201d, ADL2_ApplicationProfiles_System_Reload 1684\u2033  This dll is built with anti-AV protections as well. However, it looks for a different but overlapping set, and the random duplication suggests that this component was cobbled together with its dropper, partly regionally based on target selection.   K7  KASPERSKY  AVG   The code collects information about the system and xml formats this data prior to encryption for proper parsing:   Finally, this process beacons to www.sanjosemaristas.com, which appears to be a site that has been compromised and misused multiple times in the past couple of years. hxxp:\/\/www.sanjosemaristas[.]com\/app\/index.php?{A01BA0AD-9BB3-4F38-B76B-A00AD11CBAAA}, providing the current network adapter\u2019s service name GUID. It uses standard Win32 base cryptography functions to generate a CALG_RC4 session key to encrypt the collected data communications and POSTs it to the server.  Executable-Signing Certificates  Samples are usually signed with a fake certificate \u2013 we\u2019ve seen two instances, one AMD and one Intel:   Configuration files:  Some of the malware uses an encrypted configuration file which is stored on disk as \u201cracss.dat\u201d. This is encrypted by RC4, using the key {0xb5, 0x78, 0x62, 0x52, 0x98, 0x3e, 0x24, 0xd7, 0x3b, 0xc6, 0xee, 0x7c, 0xb9, 0xed, 0x91, 0x62}. Here\u2019s how it looks decrypted:   Second stage malware and communications:  The attackers send commands and new modules to be executed to the victims through the C&Cs. The C&C scripts store these temporarily until the victim next connects to retrieve\u00a0local files. We\u2019ve identified two such files:   settings.db  sdfg3d.db   Here\u2019s how such a database file appears:   These are BASE64 encoded and use the same RC4 encryption key as the malware configuration.  Decoding them resulted in the following payloads:  59704bc8bedef32709ab1128734aa846, ChromeUpdate.ex_ 5d8835982d8bfc8b047eb47322436c8a, cmd_task.dll e0b6f0d368c81a0fb197774d0072f759, screenshot_task.dll  Decoding them also resulted in a set of tasking files maintaining agent commands and parameter values:  conf.xml  And a set of \u201creporting\u201d files, maintaining stolen system \u201cinfo\u201d, error output, and \u201cAgentInfo\u201d output, from victim systems:  DCOM_amdocl_ld_API_.raw Util_amdave_System_.vol Last_amdpcom_Subsystem_.max Data_amdmiracast_API_.aaf 7.txt  screenshot_task.dll is a 32-bit dll used to take a screenshot of the full desktop window and save it as a bitmap in %temp%. The number of times the screenshot is repeated is configurable within the xml task file.  cmd_task.dll is a 32-bit dll that maintains several primitives. It is used to create new processes, perform as a command line shell, and several other tasks.  Each of these payloads is delivered together with a configuration file that explains how to run it, for instance:  In another tasking, we notice a tracked victim:   Attackers map a network drive use Microsoft OneDrive to run further tools:   They copy down a base64 encoded document from Microsoft OneDrive to the victim system and decode it there:   Not everything works as planned, so they maintain error reporting facility\u00a0for\u00a0the c2 communications:   Furthermore, ChromeUpdate is a 64-bit executable (which appears to be a WEXTRACT package) that oddly drops a 32-bit Dll. Cache.dll is simply stored as a cabinet file in the ChromeUpdate\u2019s resource section.  ChromeUpdate.exe starts the file with \u201crundll32 cache.dll,ADB_Setup\u201d  Cache.dll analysis   Cache.dll was written in C\/C++ and built with a Microsoft compiler.  Cache.dll code flow overview   RC4 decrypt hardcoded c2 and urls  resolve hidden function calls  collect identifying victim system data  encrypt collected data  send stolen data to c2 and retrieve commands   Cache.dll code details  Structurally, \u201cCache.dll\u201d is a fairly large backdoor at 425KB. It maintains both code and data in the raw, encrypted blobs of data to be decrypted and used at runtime, and hidden functionality that isn\u2019t exposed until runtime. No pdb\/debug strings are present in the code.  It maintains eight exports, including DllMain:   ADB_Add  ADB_Cleanup  ADB_Initnj  ADB_Load  ADB_Release  ADB_Remove  ADB_Setup   ADB_Setup is a entry point that simply spawns another thread and waits for completion.   Above, we see a new thread created with the start address of Cache.dll export \u00a0\u201cADB_Load\u201d by the initial thread.  This exported function is passed control while the initial thread runs a Windows message loop. It first grabs an encrypted blob stored away in a global variable and pulls out 381 bytes of this encrypted data:   The standard win32 api CryptDecrypt uses rc4 to decrypt this blob into a hardcoded c2, url path, and url parameters listed below with a simple 140-bit key \u201cx8BxFFx55x8BxECx83xECx50xA1x84x18x03x68x33xC9x66xF7x45x10xE8x1Fx89x45xFCx8Bx45x14x56\u201d.   The code then decodes this set of import symbols and resolves addresses for its networking and data stealing functionality:  InternetCloseHandle InternetReadFile HttpSendRequestA HttpOpenRequestA HttpQueryInfoA InternetConnectA InternetCrackUrlA InternetOpenA InternetSetOptionW GetAdaptersInfo  Much like the prior office monkey \u201catiumdag.dll\u201d component, this code collects identifying system information using standard win32 API calls:   Computer name \u2013 GetComputerNameW  User name \u2013 GetUserNameW  Adapter GUID, ip address, mac address \u2013 GetAdaptersInfo  Windows version \u2013 GetVersionExW   It then uses the runtime resolved networking API calls to send the collected data back to a hardcoded c2 and set of urls.  Cache.dll connectback urls:   209.200.83.43\/ajax\/links.php  209.200.83.43\/ajax\/api.php  209.200.83.43\/ajax\/index.php  209.200.83.43\/ajax\/error.php  209.200.83.43\/ajax\/profile.php  209.200.83.43\/ajax\/online.php  209.200.83.43\/ajax\/loader.php  209.200.83.43\/ajax\/search.php   Observed user-agent string on the wire, but it\u2019s dynamically generated based on the Windows system settings (retrieved using standard win32 api \u201cObtainUserAgentString\u201d): \u201cUser-Agent: Mozilla\/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727; .NET CLR 3.0.04506.648; .NET CLR 3.5.21022)\u201d  Communications with the CozyDuke C2 include key\/value pairs passed as URL parameters. Observed keys that remind us of the Cosmicduke communications\u00a0include:   status=  k=  mode=  ajax=  name=  subNodeId=  nodeId=  r=  t=  id=  item=  item_id=  js=  j=  v=  json=  i=  c=  x=  a=     Connections with MiniDuke\/CosmicDuke\/OnionDuke:  One of the second stage modules of CozyDuke\/Cozy Bear, Show.dll, is particularly interesting because it appears to have been built onto the same platform as OnionDuke. Below we compare Show.dll with the OnionDuke sample MD5: c8eb6040fd02d77660d19057a38ff769. Both have exactly the same export tables and appear to be called internally \u201cUserCache.dll\u201d:   This seems to indicate the authors of OnionDuke and CozyDuke \/ Cozy Bear are the same, or working together.  Another interesting comparison of two other files matches a recent second stage tool from the CozyDuke attacks with a second stage component from other Miniduke\/Onionduke attacks.  2e0361fd73f60c76c69806205307ccac, update.dll (MiniDuke), 425kb (internal name = \u201c UserCache.dll \u201c) 9e3f3b5e9ece79102d257e8cf982e09e, cache.dll (CozyDuke), 425kb (internal name = \u201c UserCache.dll \u201c)  The two share identical export function names in their export directories, and the naming appears to be randomly assigned at compile time. The table below presents the function matches based on size data, but the calls, jmps and code all match as well. The contents of only one of these exports in update.dll has no match whatsoever in cache.dll.   Unlike the atiumdag.dll file above, however, cache.dll and update.dll do not maintain anti-AV and anti-analysis functionality sets. Perhaps they plan to pair this stealer with another dropper that maintains the WMI anti-AV functionality. This rotating functionality seems representational for the set, along with other characteristics. Their custom backdoor components appear to slightly evolve over time, with modifications to anti-detection, cryptography, and trojan functionality changing per operation. This rapid development and deployment reminds us of the APT28\/Sofacy toolset, especially the coreshell and chopstick components.  We expect ongoing and further activity from this group in the near future and variations on the malware\u00a0used in previous duke-ish incidents.  For more information about MiniDuke, CosmicDuke and OnionDuke, please see References.  Related MD5s  62c4ce93050e48d623569c7dcc4d0278, 2537.ex_ a5d6ad8ad82c266fda96e076335a5080, drop1.ex_ 93176df76e351b3ea829e0e6c6832bdf, drop1.pd_ 7688be226b946e231e0cd36e6b708d20, 8.zip fd8e27f820bdbdf6cb80a46c67fd978a, doc853.ex_ 93176df76e351b3ea829e0e6c6832bdf, doc853.pdf 9ad55b83f2eec0c19873a770b0c86a2f, reader_sl.ex_ f16dff8ec8702518471f637eb5313ab2 1.ex_ 8670710bc9477431a01a576b6b5c1b2a 93176df76e351b3ea829e0e6c6832bdf, droppedhppscan854.pdf f58a4369b8176edbde4396dc977c9008, droppedreader_sl.ex_ 83f57f0116a3b3d69ef7b1dbe9943801 b5553645fe819a93aafe2894da13dae7 acffb2823fc655637657dcbd25f35af8 1a42acbdb285a7fba17f95068822ea4e d543904651b180fd5e4dc1584e639b5e d7af9a4010c75af6756a603fd6aef5a4 93176df76e351b3ea829e0e6c6832bdf, 3852.pdf f2b05e6b01be3b6cb14e9068e7a66fc1, droppedreader_sl.ex_ 57a1f0658712ee7b3a724b6d07e97259, dropped3852.ex_ 93176df76e351b3ea829e0e6c6832bdf, 5463.pdf eb22b99d44223866e24872d80a4ddefd, dropped5463reader_sl.ex_ 90bd910ee161b71c7a37ac642f910059, dropped5463.ex_ 1a262a7bfecd981d7874633f41ea5de8 98a6484533fa12a9ba6b1bd9df1899dc 7f6bca4f08c63e597bed969f5b729c56 08709ef0e3d467ce843af4deb77d74d5  Related CozyDuke C&Cs:      121.193.130.170:443\/wp-ajax.php\r\n183.78.169.5:443\/search.php\r\n200.119.128.45:443\/mobile.php\r\n200.125.133.28:443\/search.php\r\n200.125.142.11:443\/news.php\r\n201.76.51.10:443\/plugins\/json.php\r\n202.206.232.20:443\/rss.php\r\n202.76.237.216:443\/search.php\r\n203.156.161.49:443\/plugins\/twitter.php\r\n208.75.241.246:443\/msearch.php\r\n209.40.72.2:443\/plugins\/fsearch.php\r\n210.59.2.20:443\/search.php\r\n208.77.177.24:443\/fsearch.php\r\nwww.getiton.hants.org.uk:80\/themes\/front\/img\/ajax.php\r\nwww.seccionpolitica.com.ar:80\/galeria\/index.php\r\n209.200.83.43\/ajax\/links.php\r\n209.200.83.43\/ajax\/api.php\r\n209.200.83.43\/ajax\/index.php\r\n209.200.83.43\/ajax\/error.php\r\n209.200.83.43\/ajax\/profile.php\r\n209.200.83.43\/ajax\/online.php\r\n209.200.83.43\/ajax\/loader.php\r\n209.200.83.43\/ajax\/search.php      1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23   121.193.130.170 : 443 \/ wp - ajax . php 183.78.169.5 : 443 \/ search . php 200.119.128.45 : 443 \/ mobile . php 200.125.133.28 : 443 \/ search . php 200.125.142.11 : 443 \/ news . php 201.76.51.10 : 443 \/ plugins \/ json . php 202.206.232.20 : 443 \/ rss . php 202.76.237.216 : 443 \/ search . php 203.156.161.49 : 443 \/ plugins \/ twitter . php 208.75.241.246 : 443 \/ msearch . php 209.40.72.2 : 443 \/ plugins \/ fsearch . php 210.59.2.20 : 443 \/ search . php 208.77.177.24 : 443 \/ fsearch . php www . getiton . hants . org . uk : 80 \/ themes \/ front \/ img \/ ajax . php www . seccionpolitica . com . ar : 80 \/ galeria \/ index . php 209.200.83.43 \/ ajax \/ links . php 209.200.83.43 \/ ajax \/ api . php 209.200.83.43 \/ ajax \/ index . php 209.200.83.43 \/ ajax \/ error . php 209.200.83.43 \/ ajax \/ profile . php 209.200.83.43 \/ ajax \/ online . php 209.200.83.43 \/ ajax \/ loader . php 209.200.83.43 \/ ajax \/ search . php      Appendix: Parallel and Previous Research  The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor , Securelist, Feb 2013  Miniduke is back: Nemesis Gemina and the Botgen Studio , Securelist, July 2014  MiniDuke 2 (CosmicDuke) , CrySyS, July 2014  COSMICDUKE Cosmu with a twist of MiniDuke [pdf] , F-Secure, September 2014  THE CASE OF THE MODIFIED BINARIES , Leviathan Security, October 2014  A word on CosmicDuke , Blaze\u2019s Security Blog, September 2014  OnionDuke: APT Attacks Via the Tor Network , F-Secure, November 2014  The Connections Between MiniDuke, CosmicDuke and OnionDuke , F-Secure, January 2015  Kaspersky Lab products detect the malware used by the CozyDuke threat actor as: HEUR:Trojan.Win32.CozyDuke.gen Trojan.Win32.CozyBear.*","url":"https:\/\/securelist.com\/the-cozyduke-apt\/69731\/"},{"Unnamed: 0":0,"query":"APT28","text":"FireEye Links Russia to Cyber Espionage Campaign Dating Back to 2007\r\n\n\nSecurity firm FireEye has released a new report uncovering and detailing a large cyber-espionage campaign that the company believes is sponsored by the Russian government and dates back to 2007.\nThe group behind the campaign, which FireEye is calling APT28, is a skilled team of developers and operators collecting intelligence on defense and geopolitical issues that would clearly benefit Russia.\nUnlike many attacks often attributed to China and detailed in Mandiant\u2019s (now part of FireEye) APT1 report released in 2013, the APT28 attackers do not appear to be after intellectual property theft for economic gain. FireEye said the attackers have not been seen trying to steal and profit from financial account information.\n\"This threat group has ben tracked pretty heavily by the community over the last six months,\u201d Dan McWhorter, FireEye VP of Threat Intelligence, told SecurityWeek. Other researchers and firms have referred to the malware used in the attacks as \u201cSofacy,\u201d McWhorter said.\nLast week,\u00a0Trend Micro released a report on a cyber-espionage operation dubbed \"Operation Pawn Storm\"\u00a0which targeted military, government and media organizations around the world and utilized the Sofacy malware.\nBut according to\u00a0McWhorter, the direct link and attribution to Russia is what FireEye is highlighting in its APT28 report.\nAccording to FireEye, the threat actors behind APT28 are after insider information related to governments, militaries, and security organizations that would likely benefit the Russian government. Targets include the Caucasus (particularly the Georgian government), Eastern European governments and militaries, and specific security organizations.\n\"APT28 appeared to target individuals affiliated with European security organizations and global multilateral institutions. The Russian government has long cited European security organizations like NATO and the OSCE as existential threats, particularly during periods of increased tension in Europe,\" FireEye reported.\nFireEye\u2019s analysis also revealed that APT28 has been \u201csystematically updating their malware\u201d since 2007 and are supported by developers creating tools intended for long-term use and versatility.\nBased on the analysis of the pieces of malware used by the threat group, researchers determined that more than 96% of the samples have been compiled between Monday and Friday, with close to 90% of them built between 8AM and 6PM UTC+4, which corresponds to the cities of Moscow and St. Petersburg.\n\u201cWe feel we tied together enough evidence to make it conclusive that Russia was the government sponsoring the activity,\u201d McWhorter said.\nTools leveraged by the APT28 attackers include the SOURFACE downloader, a second stage backdoor called EVILTOSS, and a modular family of implants written in C++ that FireEye calls CHOPSTICK.\nFeatures of CHOPSTICK include the ability to collect detailed information from infected host machines including the Windows version, CPU architecture, Windows Firewall state, User Account Control configuration settings on Windows Vista and above and Internet Explorer settings. The malware also tests for the installation of specific security products and applications, FireEye said.\nInterestingly, the report (PDF) explained that that two separate CHOPSTICK backdoors could contain \u201cvastly different functionality\u201d, depending on which modules were included at compile time.\nSimilar to many other attacks, APT28 uses spearphishing emails to target its victims.\nThe attackers have attempted to obfuscate their code and utilize techniques to make analysis challenging, FireEye said, including counter-reverse engineering tactics via unused machine instructions and creating much \u201cunnecessary noise\u201d in the disassembly. Additionally, the malware leverages runtime checks, attempting to determine if they are executing in an analysis (virtual) environment, and if so, remain dormant and do not launch their payloads.\nAPT28 Targets\nAccording to FireEye, APT28 made at least two specific attempts to target the Georgian Ministry of Internal Affairs, the Ministry of Defense, and a U.S. defense contractor that was training the Georgian military.\nThe attackers also zoned in on a specific journalist covering issues in the Caucasus region, and had interest those involved in the Baltic Host, an annual logistics planning exercise hosted by either Estonia, Latvia, or Lithuania, all of which Border Russia.\u00a0\n\u201cSuch targets would potentially provide APT28 with sensitive tactical and strategic intelligence concerning regional military capabilities and relationships,\u201d FireEye said.\nSeveral of the domains APT28 registered imitated NATO domain names, including those of NATO Special Operations Headquarters and the NATO Future Forces Exhibition.\nThe threat actors also targeted attendees of European defense exhibitions, including the Farnborough Airshow 2014, EuroNaval 2014, EUROSATORY 2014, and the Counter Terror Expo.\nOther \u201cprobable\u201d targets identified by FireEye include:\n\u2022 Norwegian Army (Forsvaret)\n\u2022 Government of Mexico\n\u2022 Chilean Military\n\u2022 Pakistani Navy\n\u2022 U.S. Defense Contractors\n\u2022 European Embassy in Iraq\n\u2022 Special Operations Forces Exhibition (SOFEX) in Jordan\n\u2022 Defense Attaches in East Asia\n\u2022 Asia-Pacific Economic Cooperation (APEC)\n\u2022 Al-Wayi News Site\nAt the time of publishing the report, FireEye had identified 103 malware samples that says were attributed to APT28, but\u00a0McWhorter believes there is a great deal more.\nEarlier this month, iSight Partners revealed that a threat group allegedly linked with the Russian government had been leveraging a Microsoft Windows zero-day vulnerability to target NATO, the European Union, and various private energy and telecommunications organizations in Europe. The group has been dubbed the \"Sandworm Team\" and it has been using weaponized PowerPoint files in its recent attacks.\nAccording to researchers at Trend Micro, the Sandworm team may also have their eyes set on compromising SCADA-based systems.","url":"https:\/\/www.securityweek.com\/fireeye-links-russia-cyber-espionage-campaign-dating-back-2007"},{"Unnamed: 0":1,"query":"APT28","text":"Microsoft Disrupts Election-Related Domains Used by Russian Hackers\r\n\nMicrosoft on Monday announced that it took control of several domains associated with a notorious Russia-linked threat actor. The names of the domains suggest the hackers may have been using them in campaigns related to the upcoming midterm elections in the United States.\nThe tech giant\u2019s Digital Crimes Unit obtained a court order to take control of six domains created by a threat group tracked as APT28, Fancy Bear, Pawn Storm, Strontium, Sednit, Tsar Team and Sofacy.\nAPT28, which experts believe is sponsored by Russia\u2019s GRU intelligence agency, has been known to launch politics-focused campaigns, including ones aimed at the latest presidential elections in the United States and France. The group may now be targeting the upcoming midterm elections in the U.S.\nThe domains seized by Microsoft are my-iri.org, hudsonorg-my-sharepoint.com, senate.group, adfs-senate.services, adfs-senate.email and office365-onedrive.com.\nThe first domain appears to mimic the International Republican Institute, a non-profit that receives funding from the U.S. government to promote democracy around the world. The second domain appears to impersonate the Hudson Institute, a politically conservative non-profit think tank. The other domains mimic the website of the U.S. Senate and Microsoft\u2019s Office 365 service.\nWhile the domains may have been set up for election-related campaigns, Microsoft says it currently has no evidence that any of them were successfully used in attacks, and it\u2019s unclear exactly who the hackers intended on targeting using these domains.\nThe company revealed last month that it had spotted some Microsoft phishing domains that had apparently been set up as part of attacks aimed at the campaigns of three congressional candidates who are running in the upcoming midterm elections.\n\u201cMicrosoft has notified both nonprofit organizations. Both have responded quickly, and Microsoft will continue to work closely with them and other targeted organizations on countering cybersecurity threats to their systems. We\u2019ve also been monitoring and addressing domain activity with Senate IT staff the past several months, following prior attacks we detected on the staffs of two current senators,\u201d Brad Smith, Microsoft\u2019s president and chief legal officer, said in a blog post.\nThis is not the first time Microsoft has seized domains used by APT28. The company says it has used court orders a total of 12 times over the past two years to shut down 84 fake websites linked to the threat group.\nSean Sullivan, Security Advisor at F-Secure, cautioned that the domains targeted by Microsoft may not necessarily be related to elections.\n\u201cMicrosoft\u2019s announcement is generating a lot of attention and the focus is overwhelmingly centered on the 2018 mid-term elections. But it\u2019s important not to lose sight of the bigger issue,\u201d Sullivan told SecurityWeek. \u201cThe focus on think tanks holding pro-sanction views on Russia\u2019s current regime is about espionage. In short: spies are going to spy. That\u2019s true whether or not it\u2019s an election year. There seems to be a rush to conclude that these six domains are part of an \u201cattack\u201d on the elections that risks missing the complete threat model \u2013 and therefore the complete countermeasures that should be taken.\u201d\nMicrosoft took this opportunity to announce its new AccountGuard initiative, which provides free cybersecurity protection to candidates, campaigns and political institutions using Office 365.\nThe AccountGuard service, which is part of Microsoft\u2019s Defending Democracy Program, involves notifications about threats, security guidance and education, and the opportunity to test preview releases of new security features.\nAccountGuard is currently available only in the United States, but Microsoft plans on offering it in other countries as well in the coming months.","url":"https:\/\/www.securityweek.com\/microsoft-disrupts-election-related-domains-used-russian-hackers"},{"Unnamed: 0":2,"query":"APT28","text":"Russian Hackers Exploit Recently Patched Flash Vulnerability\r\n\nThe Russia-linked cyber espionage group known as APT28 has been using a recently patched Adobe Flash Player vulnerability in attacks aimed at government organizations and aerospace companies, security firm Proofpoint reported on Thursday.\nThe Flash Player flaw in question, CVE-2017-11292, was patched by Adobe on October 16. At the time when the patch was released, the vulnerability had a zero-day status, as it had been exploited in targeted attacks by a Middle Eastern threat actor named BlackOasis to deliver FinFisher spyware.\nAPT28, which is also known as Fancy Bear, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team, started launching attacks using CVE-2017-11292 on October 18, Proofpoint said. It\u2019s unclear if APT28 discovered the exploit on its own, purchased it, or reverse engineered the one used in the BlackOasis attack.\nNevertheless, Proofpoint pointed out that the cyberspies are likely trying to take advantage of the recently fixed vulnerability before Adobe\u2019s patch is widely deployed by users.\nThe attacks observed by the security firm were aimed at organizations in the United States, Europe and other countries. The targets included foreign government organizations with responsibilities similar to the U.S. State Department, and private-sector aerospace companies.\nThe messages delivering the exploits were highly targeted and they were sent out using free email services, Proofpoint said. The attackers leveraged malicious documents and their previously known Flash Player exploit platform named DealersChoice to deliver the first-stage implant, specifically a reconnaissance tool.\nWhile CVE-2017-11292 affects Windows, Mac and Linux systems, APT28 apparently only launched attacks against Windows users. Tests conducted by researchers showed that the exploit works on systems with Windows 7 or Windows 10 with Microsoft Office 2013. The exploit, however, fails to execute on 64-bit systems running Windows 10 Fall Creators Update (RS3) and Office 2016.\n\u201cAPT28 is a sophisticated state-sponsored group that is using the vulnerability to attack potentially high-value targets but it is likely that other threat actors will follow suit and attempt to exploit this vulnerability more widely, whether in exploit kits or via other attack vectors,\u201d Proofpoint researchers explained.\nThe security firm has been working on taking down the command and control (C&C) domains used in these attacks.\nRelated: Russian Hackers Target Montenegro as Country Joins NATO\nRelated: Russian Cyberspies Target Hotels in Europe\nRelated: Tech Firms Target Domains Used by Russia-linked Threat Group","url":"https:\/\/www.securityweek.com\/russian-hackers-exploit-recently-patched-flash-vulnerability"},{"Unnamed: 0":3,"query":"APT28","text":"Russian Hackers Used Two Zero-Days in Recent Targeted Attack: FireEye\r\n\n\nFireEye said on Saturday that it recently detected a highly targeted attack exploiting two zero-day vulnerabilities in an effort to compromise an \u201cinternational government entity\u201d in an industry vertical that aligns with known targets hit by a threat actor group which FireEye calls APT28.\nFireEye has described APT28 as a skilled team of developers and operators collecting intelligence on defense and geopolitical issues that would clearly benefit Russia. The security firm\u00a0previously traced\u00a0cyber-espionage campaigns by the group that date back to 2007.\nFireEye said that it first detected the attacks on April 13th, 2015, when the attackers attempted to exploit two zero-day vulnerabilities, including a recently patched flaw in Adobe Flash (CVE-2015-3043) and a brand new one in Microsoft Windows (CVE-2015-1701).\nThrough its analysis and technical indicators and command and control infrastructure, FireEye believes that the APT28 attackers are responsible for the campaign, which it is calling \"Operation RussianDoll\".\nDespite use of the two zero-days, the attackers were said to be unsuccessful in breaching their target. A FireEye spokesperson told SecurityWeek that it detected the exploits as they were delivered which prevented an intrusion.\nAccording to FireEye, the exploit process takes place like this:\n1.\tUser clicks link to attacker controlled website\n2.\tHTML\/JS launcher page serves Flash exploit\n3.\tFlash exploit triggers CVE-2015-3043, executes shellcode\n4.\tShellcode downloads and runs executable payload\n5.\tExecutable payload exploits local privilege escalation (CVE-2015-1701) to steal System token\nThe CVE-2015-3043 exploit delivers a malware variant that shares characteristics with the APT28 backdoors CHOPSTICK and CORESHELL malware families, both described in FireEye\u2019s initial report on APT28.\n\u201cOne of the C2 locations for the new payload, 87.236.215[.]246, also hosts a suspected APT28 domain ssl-icloud[.]com,\u201d FireEye said.\nThe payload contains an exploit for the unpatched local privilege escalation vulnerability CVE-2015-1701 in Microsoft Windows. The exploit\u00a0does not affect Windows 8 and later.\n\u201cWhile there is not yet a patch available for the Windows vulnerability, updating Adobe Flash to the latest version will render this in-the-wild exploit innocuous,\u201d FireEye noted in a blog post. \u201cWe have only seen CVE-2015-1701 in use in conjunction with the Adobe Flash exploit for CVE-2015-3043. We are working with the Microsoft Security Team on CVE-2015-1701.\u201d\n\u201cBecause CVE-2015-3043 is already patched, this remote exploit will not succeed on a fully patched system,\u201d FireEye said. \u201cIf an attacker wanted to exploit CVE-2015-1701, they would first have to be executing code on the victim\u2019s machine. Baring authorized access to the victim\u2019s machine, the attacker would have to find some other means, such as crafting a new Flash exploit, to deliver a CVE-2015-1701 payload.\u201d\nEarlier this week, Trend Micro reported new activity on \u201cOperation Pawn Storm\u201d which is assumed to be the same threat actors tracked by FireEye as APT28. According to the most recent report from Trend Micro, the APT group has introduced new infrastructure and is \"zeroing in\" on targets including the White House and NATO members.\nTrend Micro also eluded to possible connections with the Russian government. \u201cWe determined that the group also aimed its attacks on Russian dissidents and those opposing the Kremlin, as well as Ukrainian activists and military, which has led some to speculate that there might be a connection with the Russian government,\u201d Feike Hacquebord, a Senior Threat Researcher at Trend Micro, noted in a blog post on Thursday.\nLast year FireEye was able to trace at least two specific attempts by APT28 to target the Georgian Ministry of Internal Affairs, the Ministry of Defense, and a U.S. defense contractor that was training the Georgian military.\n*Updated to include name of campaign and modified headline","url":"https:\/\/www.securityweek.com\/russia-linked-hackers-used-two-zero-days-recent-targeted-attack-fireeye"},{"Unnamed: 0":4,"query":"APT28","text":"Russian Hackers Used Two Zero-Days in Recent Targeted Attack: FireEye\r\n\n\nFireEye said on Saturday that it recently detected a highly targeted attack exploiting two zero-day vulnerabilities in an effort to compromise an \u201cinternational government entity\u201d in an industry vertical that aligns with known targets hit by a threat actor group which FireEye calls APT28.\nFireEye has described APT28 as a skilled team of developers and operators collecting intelligence on defense and geopolitical issues that would clearly benefit Russia. The security firm\u00a0previously traced\u00a0cyber-espionage campaigns by the group that date back to 2007.\nFireEye said that it first detected the attacks on April 13th, 2015, when the attackers attempted to exploit two zero-day vulnerabilities, including a recently patched flaw in Adobe Flash (CVE-2015-3043) and a brand new one in Microsoft Windows (CVE-2015-1701).\nThrough its analysis and technical indicators and command and control infrastructure, FireEye believes that the APT28 attackers are responsible for the campaign, which it is calling \"Operation RussianDoll\".\nDespite use of the two zero-days, the attackers were said to be unsuccessful in breaching their target. A FireEye spokesperson told SecurityWeek that it detected the exploits as they were delivered which prevented an intrusion.\nAccording to FireEye, the exploit process takes place like this:\n1.\tUser clicks link to attacker controlled website\n2.\tHTML\/JS launcher page serves Flash exploit\n3.\tFlash exploit triggers CVE-2015-3043, executes shellcode\n4.\tShellcode downloads and runs executable payload\n5.\tExecutable payload exploits local privilege escalation (CVE-2015-1701) to steal System token\nThe CVE-2015-3043 exploit delivers a malware variant that shares characteristics with the APT28 backdoors CHOPSTICK and CORESHELL malware families, both described in FireEye\u2019s initial report on APT28.\n\u201cOne of the C2 locations for the new payload, 87.236.215[.]246, also hosts a suspected APT28 domain ssl-icloud[.]com,\u201d FireEye said.\nThe payload contains an exploit for the unpatched local privilege escalation vulnerability CVE-2015-1701 in Microsoft Windows. The exploit\u00a0does not affect Windows 8 and later.\n\u201cWhile there is not yet a patch available for the Windows vulnerability, updating Adobe Flash to the latest version will render this in-the-wild exploit innocuous,\u201d FireEye noted in a blog post. \u201cWe have only seen CVE-2015-1701 in use in conjunction with the Adobe Flash exploit for CVE-2015-3043. We are working with the Microsoft Security Team on CVE-2015-1701.\u201d\n\u201cBecause CVE-2015-3043 is already patched, this remote exploit will not succeed on a fully patched system,\u201d FireEye said. \u201cIf an attacker wanted to exploit CVE-2015-1701, they would first have to be executing code on the victim\u2019s machine. Baring authorized access to the victim\u2019s machine, the attacker would have to find some other means, such as crafting a new Flash exploit, to deliver a CVE-2015-1701 payload.\u201d\nEarlier this week, Trend Micro reported new activity on \u201cOperation Pawn Storm\u201d which is assumed to be the same threat actors tracked by FireEye as APT28. According to the most recent report from Trend Micro, the APT group has introduced new infrastructure and is \"zeroing in\" on targets including the White House and NATO members.\nTrend Micro also eluded to possible connections with the Russian government. \u201cWe determined that the group also aimed its attacks on Russian dissidents and those opposing the Kremlin, as well as Ukrainian activists and military, which has led some to speculate that there might be a connection with the Russian government,\u201d Feike Hacquebord, a Senior Threat Researcher at Trend Micro, noted in a blog post on Thursday.\nLast year FireEye was able to trace at least two specific attempts by APT28 to target the Georgian Ministry of Internal Affairs, the Ministry of Defense, and a U.S. defense contractor that was training the Georgian military.\n*Updated to include name of campaign and modified headline","url":"https:\/\/www.securityweek.com\/russia-linked-hackers-used-two-zero-days-recent-targeted-attack-fireeye"},{"Unnamed: 0":5,"query":"APT28","text":"Who Hacked French President-elect Emmanuel Macron's Campaign?\r\n\nOne thing is clear. The campaign of\u00a0French President-elect Emmanuel Macron\u00a0was hacked prior to the French presidential election this last Sunday -- and the finger was immediately pointed at Russia's APT28 (Fancy Bear). Russia has been caught meddling in western politics once again.\nEvidence of APT28 involvement seems to come from three sources: the U.S. National Security Agency (NSA), security researchers, and circumstantial. The NSA was quick to blame Russia via a Senate Armed Services Committee hearing on Tuesday this week. The head of the NSA, Admiral Mike Rogers, told the committee that the NSA had warned its French counterparts at the time of the hack: \"Look, we're watching the Russians, we're seeing them penetrate some of your infrastructure.\" The Russians are here.\nEvidence from security researchers focuses on two areas: phishing sites and leaked document metadata. One phishing site, apparently created by APT28 on March 25, 2017 and clearly designed for the Macron campaign, 'onedrive-en-marche-dot-fr', was reported by Trend Micro in April. Other sites apparently tied to the APT28 infrastructures include portal-office-dot-fr, accounts-office-dot-fr and mail-en-marche-dot-fr -- and another with the surprising name of totally-legit-cloud-dot-email.\nThe document evidence includes the discovery of Cyrillic characters within some documents apparently leaked by the hackers. WikiLeaks tweeted on Saturday (the day before the French presidential vote), \"#MacronLeaks assessment update: several Office files have Cyrillic meta data...\" The obvious assumption is that Russian APT hackers altered the files before leaking them.\nBut while clearly suggesting possible APT28 involvement in the hack, French security researcher x0rz has demonstrated that neither of these can be taken as actual proof. In a blog post on Tuesday, he demonstrated the ease with which anybody could edit metadata and pretend to be anyone. He went further to explain how \"I setup my own domain mimicking some APT28 artefacts: totally-legit-cloud-dot-email that has been registered using the same information as another APT28 phishing domain used during the attack on EM staff... This domain (that I own) is now linked with actual APT28 infrastructure according to some threat intelligence OSINT tools\" (eg, threatcrowd.org).\nIn other words, anyone could have established the APT28-related phishing domains, and anyone could have planted Cyrillic characters in the metadata. x0rz believes that all this proves is that it might have been APT28, but it might not have been APT28.\nThe circumstantial evidence is that the hack follows the basic pattern used by (what everybody believes to have been) APT28 in the US election hacks: phish for the emails of the candidate you want to lose, and then leak them. This evidence claims that since this is what APT28 does, and this is what Russia would want, then therefore this was done by Russia.\nBut the parallel is not perfect. The Macron hack occurred far later in the election campaign than the DNC hack; the phishing emails appear to be far clumsier; and the email leak occurred too late to have any effect on the election outcome.\nThe Macron campaign's answer to this is that they were expecting hackers, that they knew they would not be able to prevent a hack, and they prepared for it with what amounts to the 'deception defense'. The New York Times reported, \"'We created false accounts, with false content, as traps. We did this massively, to create the obligation for them to verify, to determine whether it was a real account,' Mr. Mahjoubi [the campaign's digital director] said. 'I don't think we prevented them. We just slowed them down,' he said. 'Even if it made them lose one minute, we're happy'.\"\nSecurityWeek talked to Kevin Eley, VP EMEA at TrapX, about the deception defense. In full, it amounts to the installation of a honeypot-like platform within the customer's infrastructure. Attackers are diverted towards the false shares, false databases, false structure -- and as soon as anything attempts to access them, the existence of an intruder is confirmed. The intrusion can then be tracked back to its source and the vulnerability closed. And if the intruder does manage to exfiltrate any data, it is false data.\n\"In the Macron hack,\" he told SecurityWeek, \"the deception seems to be at the data level only.\" He confirmed that although this could not have been achieved by the campaign on the fly, it could have been done well in advance anticipating a hack. In other words, it can explain but does not prove why the leak occurred so late -- the attackers simply didn't know what to leak.\nJust to confuse the issue further, Tyler Durden, discussing the Shadow Brokers' most recent leaks, writes today on zerohedge, \"Inside the NSA dump among many other findings, we find hundreds of NSA attacks on China, as well as penetration attempts in which the NSA 'pretends' to be China so one wonders how difficult it would be for the NSA to pretend they are, oh, say Russia?\"\nSo, who did hack Macron? The obvious conclusion is Russia; because Russia would benefit most from a Le Pen victory. But the timing of the document leaks was far too late to benefit Le Pen, and would more likely benefit Macron. The Occupy Movement could alternatively say that the 1% would benefit from an ex-Rothschild banker (Macron); just as they would benefit from a Republican president and a City of London not controlled by Brussels. It is not just Russia that has an incentive in meddling.\n\"As far as attribution related to the hacks Macron's campaign suffered, or the origins of the stolen documents,\" F-Secure researcher Andy Patel told SecurityWeek, \"fingers are being pointed based on 'who would\/wouldn't do something like this?' by people who don't have access to enough evidence to be 100% certain of anything.\"\nThe bottom line is that we do not know who hacked Macron, nor why. It might have had nothing to with discrediting Macron per se, but merely to add to the current confusion over real and fake news on the internet. \"If it's information warfare -- rather than cyber warfare,\" suggests F-Secure security advisor Sean Sullivan, \"then the point is not stealth. It's to make the point that your systems are under attack, your options are limited, and you always need to be on your guard. And there's nothing you or your leaders can do to stop us!\n\"Nothing is certain. But that's probably also exactly the goal of the information warfare, to get you to believe in nothing.\"","url":"https:\/\/www.securityweek.com\/who-hacked-french-president-elect-emmanuel-macrons-campaign"},{"Unnamed: 0":6,"query":"APT28","text":"Cyberattack 'Ongoing' Against German Government Network\r\n\nThe German government's IT network is under an \"ongoing\" cyberattack\", the parliamentary committee on intelligence affairs said Thursday, without confirming a media report that Russian hackers were behind the assault.\n\"It is a real cyberattack on parts of the government system. It's an ongoing process, an ongoing attack,\" said Armin Schuster, chairman of the committee, adding that no further details could be given to avoid passing crucial information on to the attackers.\nInterior Minister Thomas de Maiziere said the hacking was \"a technically sophisticated attack that had been planned for some time\", adding that it had been brought under control.\nThe highly professional assault had been monitored by the security agencies in order to gain insights into the mode of attack and its targets, said de Maiziere.\nGerman news agency DPA, which first reported the attack the previous day, said Thursday, citing unnamed security sources, that the likely authors were the Russian cyber espionage group \"Snake\".\nDPA had earlier pointed at the Russian hacker group APT28, which has been accused of attacks on Hillary Clinton's 2016 presidential campaign as well as on Germany's parliamentary IT system in 2015.\nGerman security authorities had only detected the online spying in December, DPA has reported, adding that it had infiltrated the systems of the foreign and interior ministries. Konstantin von Notz, deputy of the committee, complained it was \"completely unacceptable\" that members of the oversight body only learnt of the attack through the media.\n- Russian hackers -\nTop security officials had repeatedly warned during Germany's 2017 general election campaign that Russian hackers may seek to influence or disrupt the polls.\nWhile authorities did not have concrete proof, they have blamed the malware attack that crippled the Bundestag parliamentary network in 2015 for days on the APT28, also known as \"Fancy Bear\" or \"Sofacy\".\nThe attack netted 17 gigabytes of data which, officials feared, could be used to blackmail MPs or discredit them.\nIn a separate assault, several German political parties were in September 2016 sent fake emails purporting to be from NATO headquarters which contained a link that installed spying software on victims' computers.\nThe emails affected party operations such as a regional network of Chancellor Angela Merkel's Christian Democratic Union and the federal offices of the far-left Die Linke party.\nAmid the rising frequency of attacks, Germany's defence ministry in 2016 set up a cyber department to coordinate the response to online intrusions.\nMerkel, seeking to prepare the German public for more online attacks, has said people should \"not allow themselves to be irritated\" by such rogue operations.\nRelated:\u00a0Russia-linked Hackers Directly Targeting Diplomats: Report","url":"https:\/\/www.securityweek.com\/cyberattack-ongoing-against-german-government-network"},{"Unnamed: 0":7,"query":"APT28","text":"Russian Spies Lure Targets With NATO Cybersecurity Conference\r\n\nA cyber espionage group linked to Russia has been trying to deliver malware to targeted individuals using documents referencing a NATO cybersecurity conference, Cisco\u2019s Talos research team reported on Monday.\nThe attack has been linked to the notorious threat actor known as APT28, Pawn Storm, Fancy Bear, Sofacy, Group 74, Sednit, Tsar Team and Strontium.\nThe campaign was apparently aimed at individuals interested in the CyCon U.S. conference organized by the NATO Cooperative Cyber Defence Centre of Excellence (CCDCOE) in collaboration with the Army Cyber Institute at West Point on November 7-8 in Washington, D.C. The hackers created malicious documents with information that was copied from the official CyCon U.S. website.\nThe topic used as bait in this attack suggests that the threat actor targeted individuals with an interest in cyber security.\nAPT28 has been known to use zero-day exploits in its operations and, earlier this month, researchers noticed that the hackers had started leveraging a Flash Player vulnerability that Adobe had patched just two days prior. However, in the campaign analyzed by Cisco Talos, the attackers did not use any zero-days.\nInstead, they relied on Office documents containing a VBA script. The goal was to deliver Seduploader, a piece of malware which has been used by the threat actor in other NATO-related attacks as well.\n\u201cIn the previous campaign where adversaries used Office document exploits as an infection vector, the payload was executed in the Office word process. In this campaign, adversaries did not use any exploit. Instead, the payload is executed in standalone mode by rundll32.exe,\u201d researchers explained.\nSeduploader is a reconnaissance malware capable of capturing screenshots, collecting and exfiltrating information about the system, executing code, and downloading files. The variant used in these attacks is slightly different compared to previously known samples, which is likely an attempt to evade detection.\nThe CCDCOE published an alert on its website on Monday to warn people interested in the CyCon conference about the attack.\n\u201cThis is clearly an attempt to exploit the credibility of Army Cyber Institute and NATO CCDCOE in order to target high-ranking officials and experts of cyber security,\u201d the organization said.\nAPT28 is not the only threat actor to use cyber security conferences as a lure in their operations. Last year, Palo Alto Networks reported that a China-linked espionage group known as Lotus Blossom, Elise and Esile had used fake invitations to the company\u2019s Cybersecurity Summit to trick users into installing malware.\nRelated: Attribution Hell - Cyberspies Hacking Other Cyberspies\nRelated: Russian Cyberspies Target Hotels in Europe\nRelated: Tech Firms Target Domains Used by Russia-linked Threat Group","url":"https:\/\/www.securityweek.com\/russian-spies-lure-targets-nato-cybersecurity-conference"},{"Unnamed: 0":8,"query":"APT28","text":"Russian Hackers Target Montenegro as Country Joins NATO\r\n\nHackers linked to Russia launched cyberattacks on the Montenegro government just months before the country joined the North Atlantic Treaty Organization (NATO) and experts believe these attacks will likely continue.\nDespite strong opposition from Russia, Montenegro officially joined NATO on June 5. Russia has threatened to retaliate but it may have already taken action against Montenegro in cyberspace.\nAttacks aimed at the Montenegro government spotted earlier this year by security firm FireEye leveraged malware and exploits associated with the Russia-linked threat group known as APT28, Fancy Bear, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team.\nAPT28 has been known to target Montenegro. In the latest attacks observed by researchers, the hackers used spear-phishing emails to deliver malicious documents pertaining to a NATO secretary meeting and a visit by a European army unit to Montenegro. Experts believe the latter document may have been stolen and weaponized by the attackers.\nThe malware delivered in these attacks is tracked by FireEye as GAMEFISH and it has been exclusively used by APT28. GAMEFISH is a backdoor that is tracked by other security firms as Sednit, Seduploader, JHUHUGIT and Sofacy.\nThe malicious documents delivered the malware via a Flash exploit framework. FireEye has privately informed its customers about this framework, but it has not detailed it in any public reports. However, the company told SecurityWeek that this framework is also known as DealersChoice, which Palo Alto Networks analyzed in October 2016.\nFireEye analyst Ben Read told SecurityWeek that the malicious documents first profile the targeted system in an effort to determine which version of Flash Player is present. A command and control (C&C) server is then contacted and the appropriate Flash exploit is downloaded. The exploits, which can include CVE-2015-7645 and CVE-2016-7855, are used to deliver GAMEFISH.\nRead said it was unclear if APT28\u2019s attacks against the Montenegro government were successful.\n\u201cIt\u2019s likely that this activity is a part of APT28\u2019s continued focus on targeting various NATO member states, as well as the organization itself,\u201d said Tony Cole, VP and CTO for Global Government at FireEye.\n\u201cRussia has strongly opposed Montenegro's NATO accession process and is likely to continue using cyber capabilities to undermine Montenegro's smooth integration into the alliance,\u201d Cole added. \u201cMontenegro's accession could increase cyber threat activity directed toward NATO, and provide additional avenues for adversaries like Russia to illicitly access NATO information.\u201d\nAPT28 has been known to target NATO member countries, including by leveraging zero-day vulnerabilities. The group has also been involved in the recent U.S. election attacks.\nWhile the threat actor is widely believed to be sponsored by the Russian government, Moscow has repeatedly denied the accusations. The country\u2019s president, Vladimir Putin, recently claimed that patriotic hackers from Russia could be behind these attacks, but denied that the government is involved in hacking activities.\nRelated: Russian Outsourcing Provides Plausible Deniability for State-Sponsored Hacking\nRelated: NSA Contractor Charged With Leaking Russia Hacking Report\nRelated: Kremlin 'Resolutely' Denies Russia Hacked US Vote","url":"https:\/\/www.securityweek.com\/russian-hackers-target-montenegro-country-joins-nato"},{"Unnamed: 0":9,"query":"APT28","text":"Russia-Linked Spies Deliver Malware via DDE Attack\r\n\nThe Russia-linked cyber espionage group tracked as APT28 and Fancy Bear has started delivering malware to targeted users by leveraging a recently disclosed technique involving Microsoft Office documents and a Windows feature called Dynamic Data Exchange (DDE).\nResearchers at McAfee noticed the use of the DDE technique while analyzing a campaign that involved blank documents whose name referenced the recent terrorist attack in New York City.\nResearchers warned recently that DDE, a protocol designed for data exchanges between Windows applications, could be used by hackers as a substitute for macros in attacks involving malicious documents. Shortly after, security firms reported seeing attacks leveraging DDE to deliver malware, including Locky ransomware.\nMicrosoft pointed out that DDE, which has been replaced with Object Linking and Embedding (OLE), is a legitimate feature. The company has yet to make any changes that would prevent attacks, but mitigations included in Windows do provide protection, and users are shown two warnings before the malicious content is executed.\nIn the APT28 attacks spotted by McAfee, cyberspies used the document referencing the New York City attack to deliver a first-stage malware tracked as Seduploader. The malware, typically used by the threat actor as a reconnaissance tool, is downloaded from a remote server using PowerShell commands.\nBased on the analysis of the malware and command and control (C&C) domains used in the attack, researchers determined that the campaign involving DDE started on October 25.\nThe attack using the New York City incident as lure appears to be part of a campaign that also involved documents referencing Saber Guardian, a multinational military exercise conducted by the U.S. Army in Eastern Europe in an effort to deter an invasion (by Russia) into NATO territory.\nAnother recent APT28 attack leveraged a document describing CyCon U.S., a conference organized by the NATO Cooperative Cyber Defence Centre of Excellence (CCDCOE) in collaboration with the Army Cyber Institute at West Point. However, the CyCon attack relied on a malicious VBA script and it did not involve DDE.\n\u201cGiven the publicity the Cy Con U.S campaign received in the press, it is possible APT28 actors moved away from using the VBA script employed in past actions and chose to incorporate the DDE technique to bypass network defenses,\u201d McAfee researchers said in a blog post.\n\u201c[The] use of recent domestic events and a prominent US military exercise focused on deterring Russian aggression highlight APT28\u2019s ability and interest in exploiting geopolitical events for their operations,\u201d they added.\nRelated: Tech Firms Target Domains Used by Russia-linked Threat Group\nRelated: Attribution Hell - Cyberspies Hacking Other Cyberspies","url":"https:\/\/www.securityweek.com\/russia-linked-spies-deliver-malware-dde-attack"},{"Unnamed: 0":10,"query":"APT28","text":"Pawn Storm Cyberspies Target German Ruling Party\r\n\nThe Russia-linked cyber espionage group Pawn Storm has been observed targeting the Christian Democratic Union of Germany, the political party of Chancellor Angela Merkel.\nLast year, researchers reported that servers in the German Parliament (Bundestag) were infected with malware by Pawn Storm, which is also known as APT28, Sednit, Sofacy, Fancy Bear and Tsar Team.\nTrend Micro discovered in April that the threat actor was launching credential phishing attacks against the Christian Democratic Union (CDU) and high-profile users of German freemail providers GMX and WEB.DE.\nThe attackers set up a fake CDU webmail server in Latvia, and three phishing domains for web.de and gmx.de using a VPS provider registered in the United Arab Emirates. Trend Micro previously reported that this provider, which has servers in the Netherlands and Romania, was used by Pawn Storm in at least 80 high profile attacks aimed at governments around the world.\n\u201cPawn Storm attackers often conduct sophisticated, simultaneous attacks against targets\u2019 corporate and personal email accounts. The attackers build a fake version of the corporate webmail server of the targeted organization and at the same attack key members of the organization on their private free webmail accounts,\u201d said Feike Hacquebord, senior threat researcher at Trend Micro. \u201cCredential phishing is an important espionage tool: we have witnessed Pawn Storm downloading complete online e-mail boxes and securing future access by e.g. setting up a forwarding e-mail addresses secretly.\u201d\n\u201cIt is a recurring theme in recent Pawn Storm attacks; organizations get hit from different angles simultaneously. We have seen that happening time and time again against various governments, armed forces, defense companies and media,\u201d Hacquebord added.\nPawn Storm has been around for many years and continues to be highly active. Trend Micro reported seeing more than a dozen active command and control (C&C) servers for a piece of malware it calls \u201cX-Agent.\u201d This second-stage malware is used by the threat actor only against high-value targets.\nIn March, Trend Micro said it had seen Pawn Storm attacks aimed at Turkey, including the government\u2019s Directorate General of Press and Information, the Grand National Assembly, the newspaper H\u00fcrriyet, and the Prime Minister\u2019s Office.\nRelated: Fysbis Backdoor Preferred by Pawn Storm Group to Target Linux","url":"https:\/\/www.securityweek.com\/pawn-storm-cyberspies-target-german-ruling-party"},{"Unnamed: 0":11,"query":"APT28","text":"Researchers Dissect Tool Used by Infamous Russian Hacker Group\r\n\nSofacy\u2019s First-Stage Malware Zebrocy Analyzed\nESET security researchers have taken a deep dive into one of the tools heavily used by the Russian threat actor Sofacy over the past couple of years.\nDubbed Zebrocy, the tool serves as a first-stage malware in attacks and is comprised of a Delphi downloader, an AutoIt downloader and a Delphi backdoor. Used in multiple attacks, the malicious program often acts as a downloader for the actor\u2019s main backdoor, Xagent.\nAlso referred to as APT28, Fancy Bear, Pawn Storm, Sednit, and Strontium, and active since around 2007, the group is focused on cyber espionage and has hit government, military, and defense organizations worldwide.\nSupposedly the actor behind attacks targeting the 2016 presidential election in the United States, Sofacy has been known to target Ukraine and NATO countries, and has recently switched focus to targets in Asia.\nCoexisting with another Sofacy first-stage tool, Seduploader, the Zebrocy malware has been used in attacks against victims in Azerbaijan, Bosnia and Herzegovina, Egypt, Georgia, Iran, Kazakhstan, Korea, Kyrgyzstan, Russia, Saudi Arabia, Serbia, Switzerland, Tajikistan, Turkey, Turkmenistan, Ukraine, Uruguay and Zimbabwe, ESET reveals.\nZebrocy is usually delivered via emails carrying malicious attachments and users are lured into opening them. These are either Microsoft Office documents that deliver the payload via VBA macros, exploits, or Dynamic Data Exchange (DDE), or archives containing executables with an icon and a document-like filename.\nOnce the malicious attachment is executed, the first stage of the Zebrocy family is delivered: a Delphi downloader (in some attacks the AutoIt stage was used directly). The downloader is usually masked using document or Windows library icons and some samples are packed with UPX.\nWhen launched, the malware displays a splash window with a bogus error message to distract the user. In the background, however, the malware drops a file under %TEMP% and adds a Windows registry to achieve persistence. It also gathers information on the compromised system and sends it to the command and control (C&C) server via a HTTP POST request.\nIf the target is considered of interest, the C&C responds with the next stage, the AutoIt downloader, which acts as another layer of the reconnaissance phase. Packing all of the functionality of the Delphi downloader and even more, the AutoIt downloader is sometimes used as the first stage instead.\nThe tool can detect sandbox and virtual environments and retrieve system information such as: a list of installed software, Windows version (32-bit or 64-bit), process list, hard drive information, and screenshots, along with various details about the computer, gathered using Windows Management Instrumentation (WMI) objects.\nThe Delphi backdoor, which is the last stage of the Zebrocy chain of components, has an internal versioning number, unrelated to the campaign it is used in. It embeds configuration data such as: AES keys for C&C communication, URLs, malware version, persistence windows registry key\/value, path to store temporary files, and the names of hidden directories to be created to store temporary files.\nOnce set up, the malware executes callback functions via the Windows API function SetTimer, allowing the attackers to handle features and commands: take a screenshot of the desktop, capture keystrokes, list drives\/network resources, read\/write into Windows registry, copy\/move\/delete a file system object, and execute files or create scheduled tasks.\nThe backdoor supports around 30 commands, which differ from one version to another. For communication purposes, the malware stores the report of these functions on a temp file, then reds the file content and sends it to the C&C.\nZebrocy might be the successor of another malware components written in Delphi that Sofacy is known have used, namely Downdelph. The tool was last seen in September 2015, two months before Zebrocy emerged and both malware families also use a similar deployment method, the researchers note.\n\u201cWe have seen Zebrocy being heavily used by the Sednit group over the last two years. Our analysis of the many new variants that appeared on a regular basis since 2017 clearly indicates that Zebrocy is being actively maintained and improved by its author(s). We can consider it as one of the stable, mature tools in Sednit\u2019s arsenal, a tool that deserves to be monitored closely,\u201d ESET concludes.\nRelated: Sofacy Attacks Overlap With Other State-Sponsored Operations\n\u00a0\nRelated: Russian Cyberspies Shift Focus From NATO Countries to Asia","url":"https:\/\/www.securityweek.com\/researchers-dissect-tool-used-infamous-russian-hacker-group"},{"Unnamed: 0":12,"query":"APT28","text":"Russian Cyberspies Shift Focus From NATO Countries to Asia\r\n\nThe Russia-linked cyber espionage group known as Sofacy, APT28, Fancy Bear, Pawn Storm, Sednit and Strontium has shifted its focus from NATO member countries and Ukraine to Central Asia and even further east, Kaspersky Lab reported on Tuesday.\nSofacy, which is believed to be behind attacks targeting the 2016 presidential election in the United States, has been known to target Ukraine and NATO countries. NATO was heavily targeted in early 2017, including with zero-day exploits, but Kaspersky said the group later started to shift its focus towards the Middle East and Central Asia, which had been less targeted in the first half of the year.\nAccording to the security firm, by mid-2017, detections of a Sofacy backdoor tracked as SPLM, CHOPSTICK and X-Agent showed that the hackers had been increasingly targeting former Soviet countries in Central Asia, including telecoms firms and defense-related organizations. The attacks were aimed at countries such as Turkey, Kazakhstan, Armenia, Kyrgyzstan, Jordan and Uzbekistan.\nAttacks involving SPLM and a tool tracked as Zebrocy were increasingly spotted between the second and fourth quarters of 2017 further east. The list of countries where these pieces of malware were detected by Kaspersky includes China, Mongolia, South Korea and Malaysia.\nZebrocy, which allows attackers to collect data from victims, has been used to target various types of organizations, including accounting firms, science and engineering centers, industrial organizations, ministries, embassies and consulates, national security and intelligence agencies, press and translation services, and NGOs.\nAs for the infrastructure used in these attacks, researchers pointed out that Sofacy has been fairly consistent throughout the years and many of its techniques and patterns have been publicly disclosed. As a result, Kaspersky expects to see some changes this year.\n\u201cSofacy is one of the most active threat actors we monitor, and it continues to spear-phish its way into targets, often on a remarkable global scale,\u201d explained Kurt Baumgartner, principal security researcher at Kaspersky Lab. \u201cOur data and detections show that in 2017, the threat actor further developed its toolset as it moved from high volume NATO spear-phish targeting towards the Middle East and Central Asia, before finally shifting its focus further East. Mass campaigns appear to have given way to subsets of activity and malware involving such tools as Zebrocy and SPLM.\u201d\nRelated: Russia-Linked Spies Deliver Malware via DDE Attack\nRelated: Russian 'Fancy Bear' Hackers Abuse Blogspot for Phishing\nRelated: Kaspersky Details APT Trends for Q2 2017","url":"https:\/\/www.securityweek.com\/russian-cyberspies-shift-focus-nato-countries-asia"},{"Unnamed: 0":13,"query":"APT28","text":"Germany Accuses Russia of Hybrid Warfare\r\n\nRussia has been accused of waging its own brand of cyber hybrid warfare against Germany, with specific focus on next year's elections. In particular, the APT28 (Fancy Bear) hacking group -- thought to be linked to the Russian government -- is accused of spreading propaganda and disinformation under the guise of 'hacktivists'.\nThe recent attack on Deutsche Telekom routers is thought by some experts to have emanated from Russia, but there is no proof. Last year's attack against the German parliament, and attacks against German politicians in August, are also blamed on Russia. Speaking earlier this week, Chancellor Angela Merkel commented, \"Such cyber-attacks, or hybrid conflicts as they are known in Russian doctrine, are now part of daily life and we must learn to cope with them.\"\nNow both the heads of the German foreign intelligence agency (BND), Bruno Kahl, and the domestic intelligence agency (BfV), Hans-Georg Maassen, have warned about increasing Russian cyber activity in Germany.\u00a0\nLast week Kahl told the S\u00fcddeutsche Zeitung, \"There are findings that cyber-attacks take place which have no other meaning than to create political uncertainty. There is a kind of pressure on public discourse and on democracy, which is unacceptable.\" He added that there are indications of Russian involvement. \"Attribution to a state actor is technically difficult, but there is some evidence that it is at least tolerated or desired by the state.\"\nYesterday, however, a statement issued by the BfV was more forthright. \"Since the start of the Ukraine crisis,\" it started, \"we have seen a significant increase in Russian propaganda and disinformation campaigns in Germany.\" It warns of a broad spectrum of instruments and \"an enormous use of financial resources on Russia's part\" designed to strengthen extremist groups in order to shape political discourse in Germany.\nThe statement names APT28 as using a campaign that is often executed as 'false flags'. \"This approach represents a previously unseen methodology in campaigns that are controlled by Russia.\" Note however, that many experts believe that the attack against French television company TV5 \u00a0was also a 'false flag': in reality APT28 pretending to be ISIS.\nThe statement goes on to say, \"Spear-phishing against political parties and parliamentary groups have increased dramatically. They are attributed to the APT28 campaign, which was also responsible for the DNC hack. APT28 successfully exfiltrated data from the German Bundestag in 2015.\"\nMaassen describes the method and motivation behind the APT28 campaign. \"Propaganda, disinformation, cyber-attacks, cyber espionage and cyber sabotage are part of hybrid threats against western democracies.\" He points to social networks as the new way for people to share and consume information, adding that it provides the perfect entry point for disinformation and campaigns designed to reshape public opinion.\nHe also warns of an \"increase in cyber espionage within the political arena\". Government officials, members of the Bundestag, and party workers all face a potential threat. \"Stolen information could be used in the election campaign to discredit German politicians.\"\nThe political theory is that Russia will benefit from a weakened European Union -- already wounded by Brexit. By playing to European concerns over uncontrolled immigration and refugee support, and by fostering nationalism within individual member states -- in this instance Germany -- Russia will be able to weaken the existing European sanctions.\nRussia denies involvement in hacking.","url":"https:\/\/www.securityweek.com\/germany-accuses-russia-hybrid-warfare"},{"Unnamed: 0":14,"query":"APT28","text":"Russian Cyberspies Target Hotels in Europe\r\n\nA notorious Russia-linked hacker group specializing in cyber espionage is believed to be behind an ongoing campaign targeting hotels in several European countries.\nFireEye has linked the attacks with moderate confidence to APT28, a threat actor also known as Pawn Storm, Fancy Bear, Sofacy, Sednit and Strontium. The group is believed to have launched numerous high-profile attacks, including a campaign targeting last year\u2019s presidential election in the United States.\nWhile the recent attacks have targeted the networks of hotels, the security firm says there is some indication that the hackers may actually be looking to access the devices of government and business travelers via the guest Wi-Fi provided by these hotels.\nFireEye has seen attacks targeting several companies in the hospitality sector, including hotels in seven European countries and one Middle Eastern country.\nThe attacks start with a spear phishing email sent to a hotel employee. The emails carry a document named \u201cHotel_Reservation_Form.doc,\u201d which uses macros to decode a dropper that deploys GameFish, a piece of malware known to be used by APT28. This backdoor was used recently in a campaign launched by the threat group against Montenegro just as the country had been preparing to join NATO.\nOnce they gained access to the targeted hotel\u2019s network, the hackers used the NSA-linked EternalBlue SMB exploit, which was also involved in the recent WannaCry and NotPetya outbreaks, to move laterally within the network. Researchers said this was the first time the group had used this exploit.\nThe cyberspies also used Responder, an open source penetration testing tool developed by Laurent Gaffie of SpiderLabs. They leveraged Responder for NetBIOS Name Service (NBT-NS) poisoning.\n\u201cThis technique listens for NBT-NS (UDP\/137) broadcasts from victim computers attempting to connect to network resources. Once received, Responder masquerades as the sought-out resource and causes the victim computer to send the username and hashed password to the attacker-controlled machine. APT28 used this technique to steal usernames and hashed passwords that allowed escalation of privileges in the victim network,\u201d FireEye researchers explained.\nIn one incident that occurred in 2016, a user connected to a hotel\u2019s Wi-Fi and 12 hours later their device was accessed by APT28 using stolen credentials. The attackers started moving through the victim\u2019s network and accessed their Outlook Web Access (OWA) account.\nWhile these attacks can be carried out remotely, in this case the attacker appeared to be on the same network and physically close to the victim.\nKaspersky reported recently that APT28 has been using two zero-day vulnerabilities in targeted attacks, and it has started experimenting with new macro techniques.\nThese are not the only attacks apparently aimed at travelers. Other campaigns include DarkHotel, which some have linked to South Korea, Duqu 2.0, targeting the networks of European hotels hosting participants in Iranian nuclear negotiations, and according to some reports, high-profile people visiting Russia and China may have their devices accessed.\n\u201cCyber espionage activity against the hospitality industry is typically focused on collecting information on or from hotel guests of interest rather than on the hotel industry itself, though actors may also collect information on the hotel as a means of facilitating operations,\u201d FireEye said. \u201cBusiness and government personnel who are traveling, especially in a foreign country, must often rely on less secure systems to conduct business than at their home office, or may be unfamiliar with the additional threats posed while abroad.\u201d","url":"https:\/\/www.securityweek.com\/russian-cyberspies-target-hotels-europe"},{"Unnamed: 0":15,"query":"APT28","text":"Russia-linked Pawn Storm Attackers Exploiting New Adobe Flash Zero-Day\r\n\n\nWhile Adobe released security updates on Tuesday to address multiple security vulnerabilities in Flash Player, Reader and Acrobat, a prominent Russian threat actor group is actively exploiting an unpatched Flash Zero-Day vulnerability in attacks.\nAccording to Trend Micro, the threat group behind Operation Pawn Storm (also known as APT28, Sednit, Fancy Bear, Sofacy and Tsar Team) is using Adobe Flash zero-day exploit code in attacks targeting several Ministries of Foreign Affairs. The attackers, which are believed to be linked to the Russian government, have previously targeted military, defense industry, government and media organizations from across the world.\nDespite recent patches issued by Adobe on Oct. 13, this vulnerability is still unpatched, leaving Flash users vulnerable to attacks. The Flash zero-day affects at least Adobe Flash Player versions 19.0.0.185 and 19.0.0.207, the security firm said.\nTrend Micro found in its analysis that several Ministries of Foreign Affairs were targeted with spear phishing e-mails containing links to malicious Web sites that hosted the exploit. Subject lines used to entice users to click included many \u201cinteresting\u201d events such as:\n\u201cSuicide car bomb targets NATO troop convoy Kabul\u201d\n\u201cSyrian troops make gains as Putin defends air strikes\u201d\n\u201cIsrael launches airstrikes on targets in Gaza\u201d\n\u201cRussia warns of response to reported US nuke buildup in Turkey, Europe\u201d\n\u201cUS military reports 75 US-trained rebels return Syria\u201d\nTrend Micro researchers Brooks Li, Feike Hacquebord, and Peter Pi explained in a blog post that recent URLs hosting the new Flash zero-day exploits are similar previously used in attacks that targeted NATO members and the White House in April of this year.\n\u201cMinistries of Foreign Affairs have become a particular focus of interest for Pawn Storm recently,\u201d the researchers wrote. \u201cAside from malware attacks, fake Outlook Web Access (OWA) servers were also set up for various ministries. These are used for simple, but extremely effective, credential phishing attacks. One Ministry of Foreign Affairs got its DNS settings for incoming mail compromised. This means that Pawn Storm has been intercepting incoming e-mail to this organization for an extended period of time in 2015.\u201d\u00a0\nThe campaign has also targeted the spouses of senior U.S. officials, Tom Kellermann, Chief Cybersecurity Officer at Trend Micro, told SecurityWeek.\nIn April, FireEye reported that the threat group had used Flash Player and Windows zero-days in a highly targeted attack aimed at an international government entity. Operation Pawn Storm is assumed to be the same threat actors tracked by FireEye as APT28.\nEarly this year, Trend Micro found the attackers using malware targeting iOS devices to infect users and steal sensitive information. \u00a0\n\u201cPawn Storm has used six zero days in the last year and illustrates organized activity of cyber militias in the former Soviet Bloc,\u201d Kellermann said.\nWhile attribution is always difficult, the Pawn Storm attackers are\u00a0a skilled team of developers and operators collecting intelligence on defense and geopolitical issues that would clearly benefit Russia.\u00a0Other organizations targeted by the group in the past include the Caucasus (particularly the Georgian government), Eastern European governments and militaries, and specific security organizations.\u00a0The threat actors have\u00a0also targeted attendees of European defense exhibitions, including the Farnborough Airshow 2014, EuroNaval 2014, EUROSATORY 2014, and the Counter Terror Expo.\nRelated:\u00a0'Operation Pawn Storm' Continues to Step Up Attack Activity\nRelated: 'Operation Pawn Storm' Cyber-Espionage Campaign Hits Organizations\nRelated: Cyber Espionage Group Adds iOS Spyware to Its Arsenal","url":"https:\/\/www.securityweek.com\/russia-linked-pawn-storm-attackers-exploiting-new-adobe-flash-zero-day"},{"Unnamed: 0":16,"query":"APT28","text":"Russian Cyber Espionage Group Planning to Hit Banks: Report\r\n\nAPT28, the notorious cyber espionage group that is believed to be sponsored by the Russian government, is planning to attack various financial institutions from across the world, according to a report published on Tuesday by cybersecurity services and training provider root9B.\nAPT28 has been around since at least 2007. The threat actor, analyzed by several security firms over the past months, is known under various names, including Pawn Storm, Sednit, Fancy Bear, Tsar Team, and Sofacy. A report published by FireEye in October 2014 showed a direct link between the advanced persistent threat (APT) group and Russia.\nFireEye noted in that report that APT28 had not been seen trying to steal and profit from financial account information. However, root9B says it has uncovered plans by the threat group to target international financial institutions.\nThe list of organizations that appear to be targeted by the attackers includes Bank of America, TD Canada Trust, Regions Bank, the United Nations Children\u2019s Fund, United Bank for Africa, Commercial Bank International (CBI) in the United Arab Emirates, and possibly Germany-based Commerzbank.\nThe security firm says it has notified authorities in the United States and the UAE, and the security teams of the targeted financial institutions of APT28\u2019s plans.\n\u201cWhile none of the targeted organizations are clients of root9B, we felt it imperative to disclose the findings to them, and as broadly as possible to the security community,\u201d said Eric Hipkins, CEO of root9B.\nThe security firm said it discovered the threat group\u2019s plans at the end of April during routine security analysis. Researchers stumbled upon a spear-phishing domain aimed at the UAE-based financial organization. The domain attracted the attention of experts because it was hosted on a server known to be associated with state-sponsored operations. They also discovered several pieces of new malware with signatures specific to APT28.\nThe attackers registered several CBI phishing domains using fictitious information. The phishing domains for the other targeted banks were discovered by researchers because they had been registered using similar fake registration details.\nResearchers determined that the malicious actors started preparations for this campaign back in June 2014.\n\u201cWhile the continued vector of the attack remains unclear, root9B assesses that it will most likely be a spear-phishing campaign. This attack vector will likely use a well-crafted email containing either a malicious file or web hyperlink to what recipients believe is the actual website; but is instead a fake landing page,\u201d the security firm wrote in its report.\nExperts noted that while such phishing websites are usually utilized to trick users into handing over personal and financial information, it\u2019s possible that the threat group could try to use the servers hosting the phishing pages to deliver malware that gives them access to victims\u2019 networks.","url":"https:\/\/www.securityweek.com\/russian-cyber-espionage-group-planning-hit-banks-report"},{"Unnamed: 0":17,"query":"APT28","text":"Microsoft Patches Zero-Days Exploited by Russia-Linked Hackers\r\n\nMicrosoft\u2019s Patch Tuesday updates for May 2017 address tens of vulnerabilities, including several zero-day flaws exploited by profit-driven cybercriminals and two notorious Russia-linked cyber espionage groups.\nThe company has resolved more than 50 security holes affecting Windows, Internet Explorer, Edge, Office, the .NET framework, and Flash Player, for which Adobe released an update on Tuesday.\nA blog post published by Microsoft revealed that the company had worked with ESET and FireEye to protect customers against attacks leveraging vulnerabilities in the Encapsulated PostScript (EPS) filter in Office. Both ESET and FireEye have released reports on the attacks they have observed.\nFireEye has spotted attacks launched by a couple of cyber espionage groups believed to be connected to the Russian government and an unknown financially-motivated threat actor.\nAccording to the security firm, the group known as Turla, Waterbug, KRYPTON and Venomous Bear has been exploiting an Office remote code execution (RCE) vulnerability tracked as CVE-2017-0261 to deliver a custom JavaScript implant dubbed by FireEye \u201cSHIRIME.\u201d The same vulnerability has also been exploited by profit-driven cybercriminals to deliver a new variant of the NETWIRE malware, a threat used by multiple actors over the past years.\nThe Turla group\u2019s attacks also leveraged CVE-2017-0001 for privilege escalation, while the cybercriminals used CVE-2016-7255 for privilege escalation.\nBoth FireEye and ESET have observed attacks involving zero-day vulnerabilities launched by the group known as APT28, Pawn Storm, Fancy Bear, Sofacy, Sednit and Strontium. This Russia-linked group, which some believe could be behind the recent election cyberattacks in France, has leveraged an Office RCE flaw (CVE-2017-0262) and a Windows privilege escalation (CVE-2017-0263). The malware delivered in these attacks is tracked by the security firms as Seduploader and GAMEFISH.\nMicrosoft pointed out that the Turla attacks were first spotted in March, and customers who had up-to-date systems had already been protected as CVE-2017-0001 was patched earlier that month. In April, the company also rolled out a defense-in-depth protection designed to prevent EPS attacks by disabling the EPS filter by default.\nThe updates released by the company this month patch the EPS-related vulnerabilities in Office (CVE-2017-0261 and CVE-2017-0262) to ensure that customers who need to use EPS filters are still protected.\nAnother zero-day patched by Microsoft on Tuesday is CVE-2017-0222, a memory corruption in Internet Explorer that can be exploited for remote code execution. No information has been shared on the attacks leveraging this security hole.\nThe tech giant has also addressed four vulnerabilities that have been publicly disclosed. The list includes an RCE flaw in the JavaScript engines used by web browsers (CVE-2017-0229), a SmartScreen filter-related browser spoofing vulnerability (CVE-2017-0231), a privilege escalation in Edge (CVE-2017-0241), and a Mixed Content warnings bypass in Internet Explorer (CVE-2017-0064).\nRelated: Turla Cyberspies Developing Mac OS X Malware\nRelated: Microsoft Patches Many Exploited, Disclosed Flaws\nRelated: Microsoft Patches Office, IE Flaws Exploited in Attacks","url":"https:\/\/www.securityweek.com\/microsoft-patches-zero-days-exploited-russia-linked-hackers"},{"Unnamed: 0":18,"query":"APT28","text":"Russia-linked Hackers Exploit Lojack Recovery Tool in Attacks\r\n\nRecently discovered \u201cLojack\u201d agents containing malicious command and control (C&C) servers point to the Russian cyber-espionage group Sofacy, according to NETSCOUT Arbor.\nPreviously known as Computrace, Lojack is a legitimate laptop recovery solution used by companies looking to protect assets should they be lost or stolen. It can be used to locate and lock devices remotely, as well as to delete files.\nLojack represents a great double-agent because it is usually considered legitimate software but also allows for remote code execution, NETSCOUT Arbor's Security Engineering and Research Team (ASERT) points out. Moreover, the tool can survive hard drive replacements and operating system re-imaging.\nMany of the anti-virus vendors in VirusTotal don\u2019t flag the Lojack executable as malicious, but rather consider it as \u201cnot-a-virus\u201d or \u201cRisk Tool.\u201d Additionally, with binary modification of the \u201csmall agent\u201d considered trivial, it\u2019s clear that attackers would consider the tool a viable target.\n\u201cWith low AV detection, the attacker now has an executable hiding in plain sight, a double-agent. The attacker simply needs to stand up a rogue C&C server that simulates the Lojack communication protocols. Finally, Lojack\u2019s \u2018small agent\u2019 allows for memory reads and writes which grant it remote backdoor functionality when coupled with a rogue C&C server,\u201d ASERT notes.\nThe ASERT security researchers observed five Lojack agents that were pointing to four different suspected domains, three of which have been tied to Sofacy.\nAlso known as APT28, Fancy Bear, Pawn Storm, Sednit and Strontium, the threat actor is believed to have targeted the 2016 U.S. presidential election, as well as Ukraine and NATO countries. In fact, the group heavily targeted NATO in early 2017, including with zero-day exploits. The group was also observed shifting focus towards the Middle East and Central Asia last year.\nIn March 2018, a security researcher revealed that Sofacy attacks overlap with other state-sponsored operations, after the group\u2019s Zerbrocy malware was found on machines compromised by Mosquito, a backdoor associated with the Turla threat actor.\n\u201cASERT assesses with moderate confidence that the rogue Lojack agents are attributed to Fancy Bear based on shared infrastructure with previous operations,\u201d the security researchers say.\nOnly the presence of a rogue C&C makes the samples malicious, as attackers are merely hijacking the communication used by Lojack, the researchers say. Several of the domains extracted from the rogue agents trace back to Sofacy operations: elaxo[.]org, ikmtrust[.]com, and lxwo[.]org (tied to the group last year), and sysanalyticweb[.]com (spotted only recently).\nAlthough the hijack of the software for malicious purposes is a publicly known tactic, similarities in the binary comparisons and infrastructure analysis increase the possibility that the same actor was behind them.\nThe domains are associated with the same Lojack agent utilizing the same compile time, contain nonsensical Registrant information (the same information found in multiple fields), a similar nonsensical word used in the Registrant Name field is also used for the Registrant Organization (the field is often skipped, but this actor regularly utilizes both fields).\n\u201cHijacking legitimate software is a common enough tactic for malicious actors. What makes this activity so devious is the binaries hijacked being labeled as legitimate or simple \u2018Risk Tool\u2019, rather than malware. As a result, rogue Lojack samples fly under the radar and give attackers a stealthy backdoor into victim systems,\u201d ASERT concludes.\nRelated: Researchers Dissect Tool Used by Infamous Russian Hacker Group\nRelated: Sofacy Attacks Overlap With Other State-Sponsored Operations","url":"https:\/\/www.securityweek.com\/russia-linked-hackers-exploit-lojack-recovery-tool-attacks"},{"Unnamed: 0":19,"query":"APT28","text":"Attackers Using USB Malware to Steal Data From Air-Gapped Networks\r\n\nCyber Espionage Group Uses USB Malware to Steal Data From Closed Networks\nResearchers from security firm ESET have analyzed a malicious tool used by a notorious cyber espionage group to steal valuable information from air-gapped networks.\nIsolating a sensitive computer network from the Internet can be an efficient security measure, but threat actors have found ways to get around it. A group believed to be linked to the Russian government, know as \"Sednit,\" \"APT28\" and \"Sofacy,\" appears to have developed the tools necessary to achieve this task.\nIn a recent report on the attacks launched by APT28 against European governments, militaries and security organizations, FireEye revealed that one of the tools used by the group is a modular family of implants called CHOPSTICK. Researchers identified one variant of CHOPSTICK that defeats closed networks by routing messages between local directories, the registry and USB drives.\nOne such tool used by the threat group was analyzed by ESET. Dubbed Win32\/USBStealer, the malware has been used since at least 2005 in campaigns against government organizations in Eastern Europe, researchers said. There are several variants of this threat, but the security firm has focused on analyzing the most sophisticated one.\nAccording to ESET, the USBStealer dropper initially infects a computer within the targeted organization that's connected to the Internet (Computer A). The dropper is disguised as a legitimate Russian application called USB Disk Security.\nThe dropper monitors the infected device for removable drives. When a removable drive is detected, the malware is copied onto it, and its Autorun file is modified so that USBStealer is executed when the drive is inserted on a different computer. In this phase, the malware also marks the USB drive as having been used on a machine with an Internet connection.\nOnce the infected drive is connected to an air-gapped computer (Computer B), the malware is transferred onto it. The machine's name is registered on the removable drive, a process which enables the attackers to map the devices they can reach.\nThe attack only works if Autorun is enabled on the targeted computer. The feature was deactivated by Microsoft in 2009 with the release of a Windows update, but experts say the method could still work considering that air-gapped devices are in many cases out of date due to the lack of an Internet connection.\nWhen the USB drive is once again connected to Computer A, the malware operator drops a series of data exfiltration commands onto it. These commands will be executed as soon as the drive is connected again to Computer B.\nThe malware is interested in files used by cryptographic applications, and files that appear to be associated with private software. The threat searches for files of interest everywhere on the infected machine, but it avoids folders created by various antiviruses.\nOnce the stolen files are transferred back to Computer A, the attackers need to use a different piece of malware to copy the data to their own servers because USBStealer doesn't have such capabilities, ESET noted.\nResearchers say it's uncertain how the initial infection occurs, but a likely attack vector is spear phishing. FireEye has identified a spear phishing campaign that uses the USB Disk Security application as a lure.\nRelated:\u00a0\"AirHopper\" Malware Uses Radio Signals to Steal Data from Isolated Computers","url":"https:\/\/www.securityweek.com\/attackers-using-usb-malware-steal-data-air-gapped-networks"},{"Unnamed: 0":20,"query":"APT28","text":"Sofacy Attacks Overlap With Other State-Sponsored Operations\r\n\n\nCANCUN - KASPERSKY SECURITY ANALYST SUMMIT - Attacks carried out by a Russian threat group appear to overlap with campaigns conducted by other cyberspies, including ones linked by researchers to China and the United States.\nKaspersky Lab revealed last month that the Russian threat actor known as Sofacy, APT28, Fancy Bear, Pawn Storm, Sednit and Strontium had shifted its focus from NATO member countries and Ukraine to Central Asia and further east, including China.\nOn Friday, at Kaspersky\u2019s Security Analyst Summit (SAS), researcher Kurt Baumgartner revealed that the group appears to be particularly interested in military, defense and diplomatic entities in the far east.\nBaumgartner also revealed that the attacks launched by Sofacy sometimes overlap with the operations of other state-sponsored cyberspies in terms of victims.\nFor instance, researchers discovered Sofacy\u2019s Zerbrocy malware on machines that had also been compromised by Mosquito, a backdoor associated with Turla, a different threat actor linked to Russia. Shared victims include diplomatic and commercial organizations in Europe and Asia.\nSofacy\u2019s SPLM malware (aka CHOPSTICK and X-Agent) was found on devices that had also been infected with other Turla malware, which often precedes SPLM.\nSPLM has also been spotted on the same systems as malware known to have been used by a China-linked actor known as Danti.\nAccording to Kaspersky, overlaps were generally found on systems belonging to government, technology, science, and military organizations in or based in Central Asia.\nAnother interesting overlap was between Sofacy and the English-speaking Lamberts group, which is also known as Longhorn. Security firms revealed last year that this cyber espionage group had been using some of the Vault 7 tools leaked by WikiLeaks. These tools are believed to have been developed and used by the U.S. Central Intelligence Agency (CIA).\nKaspersky said it had identified Sofacy backdoors and malware associated with the Lamberts, specifically Grey Lambert, on a server belonging to a military and aerospace conglomerate in China.\nResearchers admit, however, that the presence of both Lamberts and Sofacy malware on the server could simply mean that the former planted a false flag, considering that the original delivery vector for the Sofacy tool remains unknown. It\u2019s also possible that the Russian group exploited a previously unknown vulnerability, or that it somehow harnessed the Grey Lambert malware to download its own tools. The most likely scenario, according to experts, is that the Sofacy malware was delivered using an unknown PowerShell script or a legitimate app in which the attackers discovered a flaw.\n\u201cSofacy is sometimes portrayed as wild and reckless, but as seen under our visibility, the group can be pragmatic, measured and agile. Their activity in the East has been largely under-reported, but they are clearly not the only threat actor interested in this region, or even in the same targets,\u201d Baumgartner said. \u201cAs the threat landscape grows ever more crowded and complex, we may encounter more examples of target overlap and it could explain why many threat actors check victim systems for the presence of other intruders before fully launching their attacks.\u201d\nKaspersky recently spotted the SPLM malware being used in an attack aimed at major air defense organization in China, while the Zebrocy tool has been used in high volume campaigns targeting entities in Armenia, Turkey, Tajikistan, Kazakhstan, Afghanistan, Mongolia, Japan and China.\nRelated: Russia-Linked Spies Deliver Malware via DDE Attack\nRelated: Russian 'Fancy Bear' Hackers Abuse Blogspot for Phishing","url":"https:\/\/www.securityweek.com\/sofacy-attacks-overlap-other-state-sponsored-operations"},{"Unnamed: 0":21,"query":"APT28","text":"Tech Firms Target Domains Used by Russia-linked Threat Group\r\n\nTech companies ThreatConnect and Microsoft are moving toward exposing and taking down domains associated with Russia-linked threat group known as Fancy Bear.\nAlso tracked as APT28, Pawn Storm, Sofacy, Tsar Team, Strontium and Sednit, the threat group has been associated with a variety of high-profile cyber-attacks aimed at government and other types of organizations worldwide.\nLast year, the threat group was said to have orchestrated election-related hacker attacks in the United States. The actor allegedly developed the so called XTunnel malware specifically to compromise the Democrat National Committee (DNC) network last year, and was said in February 2017 to be using brand new Mac malware to steal data.\nThreatConnect says their team was able to identify \u201cdozens of recently registered domains and IPs that have varying levels of association to the Russian APT.\u201d Moreover, the security firm discovered three name servers the group most likely used for domains, which allows defenders to \u201cproactively identify new domains that may be associated with Fancy Bear activity\u201d.\nOne of the domains, the security company reveals, is unisecproper[.]org, which was registered using the email address [email\u00a0protected][.]com and is hosted on a dedicated server at the IP 92.114.92.134. The certificate used by this domain has been already associated (PDF) with Fancy Bear in operations targeting the DNC and German Parliament, which clearly indicates that the domain is associated with the group.\nUsing the SSL certificate, ThreatConnect discovered recent IPs associated with Fancy Bear, along with numerous domains hosted on these IPs, also supposedly associated with the threat group. Some of these domains were discovered in previous investigations as well.\nThe researchers also managed to find name servers used by Fancy Bear, including nemohosts[.]com, bacloud[.]com, and laisvas[.]lt. The investigation eventually led to the discovery of hundreds of domains associated with these name servers, tens of which were hosted on dedicated servers.\nThe researchers note these are suspicious domains but note that \u201cconsistencies in registration and hosting tactics do not definitively associate many of these suspicious domains with previous malicious, Fancy Bear activity.\u201d\n\u201cIt's important to caveat our confidence in these indicators' association to FANCY BEAR activity. For many of those indicators that we've included here, we don't know whether they have actually been used maliciously. But if known bad is all that you are worried about or interested in, then you'll always be at least one step behind the attacker. Only by leveraging intelligence to identify and exploit our adversaries' tactics can we move from a reactive, whack-a-mole state to a proactive, informed defense,\u201d ThreatConnect says.\nMicrosoft, in the meantime, is taking legal action against Fancy Bear: the tech company filed a civil lawsuit in August 2016, seeking to seize command-and-control (C&C) domains used by the group. According to court documentation Microsoft made public, there are hundreds of domains containing Microsoft trademarks that it is looking to take control of.\nThe actors failed to appear in a federal court in Virginia to defend themselves, and Microsoft is pushing for a default judgment in its favor. By seizing the domains, Microsoft would be able to cut the group off from communicating with infected systems.\n\u201cMicrosoft seeks a preliminary injunction directing the registries associated with these Internet domains to take all steps necessary to disable access to and operation of these Internet domains to ensure that changes or access to the Internet domains cannot be made absent a court order and that all content and material associated with these Internet domains are to be isolated and preserved pending resolution of the dispute. Microsoft seeks a permanent injunction, other equitable relief and damages,\u201d Microsoft notes.\nPreviously, Microsoft used legal action to take down botnets. In 2012, as part of Operation b71, the company seized C&C servers associated with the notorious Zeus family of malware. In 2014, in an attempt to take down the Bladabindi (njRAT) and Jenxcus (NJw0rm) malware families, the company seized 23 No-IP domains to route bad traffic to a sinkhole.\nRelated: DHS Uses Cyber Kill Chain to Analyze Russia-Linked Election Hacks\nRelated: Russian Cyberspies Use New Mac Malware to Steal Data","url":"https:\/\/www.securityweek.com\/tech-firms-target-domains-used-russia-linked-threat-group"},{"Unnamed: 0":22,"query":"APT28","text":"Russian Cyberspies Change Tactics in Recent Campaign\r\n\nRecently observed attacks orchestrated by the Russian threat group Sofacy have revealed a change in tactics and new iterations of previously known tools, according to Palo Alto Networks researchers.\nAlso tracked as APT28, Fancy Bear, Pawn Storm, Sednit and Strontium, the cyber-espionage group has been associated with numerous attacks worldwide, including those targeting the 2016 presidential election in the United States, assaults on Ukraine and NATO countries, and attacks on targets in Asia.\nEarlier this year, security researchers revealed that Sofacy\u2019s campaigns overlap with other state-sponsored operations, and also dissected a new backdoor employed by the group. Dubbed Zebrocy, the new malware consists of a Delphi downloader and an AutoIT stage, ESET reported in April.\nNow, Palo Alto reveals that a C++ version of Zebrocy has also been seen in attacks. Furthermore, the security researchers discovered Sofacy attacks that leveraged the Dynamic Data Exchange (DDE) exploit technique to deliver different payloads than before.\nThe campaign, Palo Alto says, breaks out of the previously observed patterns in that it no longer targets only a handful of employees within a single organization. Instead, the attackers sent phishing emails to \u201can exponentially larger number of individuals\u201d within the target company.\n\u201cThe targeted individuals did not follow any significant pattern, and the email addresses were found easily using web search engines. This is a stark contrast with other attacks commonly associated with the Sofacy group,\u201d the security researchers explain.\nNot only did the group launch a large number of Zebrocy attacks, but it also started using DDE to deliver payloads such as the Zebrocy backdoor and the open-source penetration testing toolkit Koadic (this is the first time it leverages this tool). Previously, the group used the DDE technique for the distribution of Seduploader.\nAs detailed in a February report, Palo Alto also discovered that the group was hiding infrastructure using random registrant and service provider information for each attack and that they deployed a webpage on each of the domains.\nThe artifact led to the discovery of an attack campaign using the DealersChoice exploit kit, as well as another domain serving the Zebrocy AutoIT downloader.\nEventually, this led to the discovery of the C++ variant of the Zebrocy downloader tool, as well as to \u201cevidence of a completely different payload in Koadic being delivered as well.\u201d The Delphi backdoor delivered as the final payload in Zebrocy attacks was found hosted at IP address 185.25.50[.]93, the researchers say.\nFrom this command and control (C&C) IP, the researchers discovered another hard-coded user agent being used by Zebrocy. Several samples of the backdoor employing the user agent were observed targeting the foreign affairs ministry of a large Central Asian nation.\nOne other sample used a different user agent, which the researchers determined was from a secondary payload retrieved by the malware. The researchers eventually discovered over forty additional Zebrocy samples, several of which were targeting the same Central Asian nation.\nTwo weaponized Office documents leveraging DDE were used to target a North American government organization dealing with foreign affairs with the Zebrocy AutoIT downloader, and the previously mentioned large Central Asian nation, but with a non-Zebrocy payload this time, namely Koadic.\n\u201cSofacy is carrying out parallel campaigns to attack similar targets around the world but with different toolsets. The Zebrocy tool associated with this current strain of attacks is constructed in several different forms based on the programming language the developer chose to create the tool. We have observed Delphi, AutoIt, and C++ variants of Zebrocy, all of which are related not only in their functionality, but also at times by chaining the variants together in a single attack,\u201d Palo Alto concludes.\nRelated: Researchers Dissect Tool Used by Infamous Russian Hacker Group\nRelated: Sofacy Attacks Overlap With Other State-Sponsored Operations","url":"https:\/\/www.securityweek.com\/russian-cyberspies-change-tactics-recent-campaign"},{"Unnamed: 0":23,"query":"APT28","text":"DHS Uses Cyber Kill Chain to Analyze Russia-Linked Election Hacks\r\n\nDHS Publishes Enhanced Analysis Report on GRIZZLY STEPPE Activity\nThe Department of Homeland Security (DHS) National Cybersecurity and Communications Integration Center (NCCIC) on Friday published a new report providing additional indicators of compromise (IOC) and analysis using the cyber kill chain to detect and mitigate threats from the Russia-linked \"GRIZZLY STEPPE\" hackers.\nOn Dec. 29, 2016, the DHS and FBI published an initial Joint Analysis Report (JAR) detailing the tools and infrastructure used by Russian hackers designated by DHS as\u00a0\u201cGRIZZLY STEPPE\u201d in attacks against the United States election.\u00a0The previous report, however, didn\u2019t deliver on its promise, security experts argued.\nWhile the original report included a series of IOCs, some said that they were of low quality, had limited utility to defenders, and were published as a political tool attempting to connect the attacks to Russia.\nThe new report is described by DHS as an Analytical Report (AR) providing a \u201cthorough analysis of the methods threat actors use to infiltrate systems\u201d in relation to the\u00a0GRIZZLY STEPPE hackers. The report provides additional details on IOCs, along with analysis along phases of the cyber kill chain, and suggests specific mitigation techniques that could be used to counter GRIZZLY STEPPE attackers.\nUtilizing the Cyber Kill Chain to Analyze GRIZZLY STEPPE\nDHS analysts leveraged the Cyber Kill Chain framework created by Lockheed Martin that describes the phases of an attack. The report summarizes the activity of the campaign using each\u00a0phase of the Cyber Kill Chain, which are Reconnaissance, Weaponization, Delivery, Exploitation, Installation, Command and Control, and Actions on the Objective.\n\nThe report also provides detailed host and network signatures to help defenders detect and mitigate GRIZZLY STEPPE related activity, including additional YARA rules and IOCs associated with the attacks.\nThe DHS has previously said that two different actors participated in the political attacks, one in the summer of 2015, namely APT29, and the other in spring 2016, namely APT28. The former is also known as\u00a0Cozy Bear, or\u00a0CozyDuke, while the latter is referred to as\u00a0Fancy Bear,\u00a0Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team.\nDHS recommends that security teams read multiple bodies of work from various sources concerning GRIZZLY STEPPE.\n\u201cWhile DHS does not endorse any particular company or their findings, we believe the breadth of literature created by multiple sources enhances the overall understanding of the threat. DHS encourages analysts to review these resources to determine the level of threat posed to their local network environments,\u201d the agency said.","url":"https:\/\/www.securityweek.com\/dhs-uses-cyber-kill-chain-analyze-russia-linked-election-hacks"},{"Unnamed: 0":24,"query":"APT28","text":"Russia-linked Hackers Directly Targeting Diplomats: Report\r\n\nThe Russia-linked cyber espionage group Sofacy has been targeting foreign affairs agencies and ministries worldwide in a recently discovered campaign, Palo Alto Networks warns.\nThe hacking group, also known as APT28, Fancy Bear, Pawn Storm, Sednit, Tsar Team, and Strontium, has been highly active recently, and new evidence shows activity directly targeting diplomats in North America and Europe, including those at a European embassy in Moscow.\nSofacy was supposedly behind the attacks on the 2016 United States presidential election, but also hit Ukraine and NATO countries. In fact, the group heavily targeted NATO in early 2017, when it even used zero-day exploits, but then started to shift its focus towards the Middle East and Central Asia.\nPalo Alto Networks has now\u00a0uncovered two parallel efforts within a new Sofacy campaign, each using its own set of tools for attacks. One of the efforts was observed in the beginning of February 2018 to use phishing emails as the attack vector, to target an organization in Europe and another in North America.\nThe message spoofed the sender address of Jane\u2019s by IHSMarkit, a well-known supplier of information and analysis. The email carried an attachment claiming to be a calendar of events relevant to the targeted organizations, but was a Microsoft Excel spreadsheet containing a malicious macro script.\nThe attackers used a white font color to hide the content of the document to the victim and lure them into enabling macros. Once that happens, the script changes the text color to black.\nThe macro also retrieves content from several cells to obtain a base64 encoded payload, writes it to a text file in the ProgramData folder, and leverages the command certutil -decode to decode the contents to an .exe file, which it runs after two seconds.\nThe executable is a loader Trojan that decrypts an embedded payload (DLL) and saves it to a file. Next, it creates a batch file to run the DLL payload, and writes the path to the batch file to a registry key, for persistence.\nThe installed malware is a variant of SofacyCarberp, which has been extensively used by the threat group in attacks. The malware performs initial reconnaissance by gathering system information, then sends the data to the command and control (C&C) server and fetches additional tools.\nBoth the loader and the SofacyCarberp variant used in the attack are similar to samples previously analyzed, yet they include several differences, such as a new hashing algorithm to resolve API functions and find browser processes for injection, and modified C&C communication mechanisms.\nThe security researchers also believe the group may have used the Luckystrike open-source tool to generate the malicious document and\/or the macro, as the macro in the document closely resembles those found within the Microsoft PowerShell-based tool. The only difference between the two, besides random function name and random cell values, would be the path to the \u201c.txt\u201d and \u201c.exe\u201d files.\nThe security researchers also noticed that the Sofacy group registered new domains as part of the campaign, but that it used a default landing page they employed in other attacks as well. The domain used in this attack, cdnverify[.]net was registered on January 30, 2018.\n\u00a0\n\u201cNo other parts of the C&C infrastructure amongst these domains contained any overlapping artifacts. Instead, the actual content within the body of the websites was an exact match in each instance,\u201d Palo Alto notes.\n\u201cThe Sofacy group should no longer be an unfamiliar threat at this stage. They have been well documented and well researched with much of their attack methodologies exposed. They continue to be persistent in their attack campaigns and continue to use similar tooling as in the past. This leads us to believe that their attack attempts are likely still succeeding, even with the wealth of threat intelligence available in the public domain,\u201d Palo Alto concludes.\nRelated: Russian Cyberspies Shift Focus From NATO Countries to Asia\nRelated: Russia-Linked Spies Deliver Malware via DDE Attack","url":"https:\/\/www.securityweek.com\/russia-linked-hackers-directly-targeting-diplomats-report"},{"Unnamed: 0":25,"query":"APT28","text":"Russian Hackers Favor Windows, Office Exploits: Report\r\n\nAdobe\u2019s Flash Player might be the most targeted product when criminal exploit kits are involved, but Microsoft products such as Office, Windows and Internet Explorer take center stage when Russian advanced persistent threat (APT) groups are involved.\nAccording to a new report from Recorded Future, 55% of vulnerabilities exploited by these groups are targeting versions of Office, Windows and Internet Explorer. State-sponsored actors have been focusing on widely adopted software, and only 46% of the known Russian APT exploited vulnerabilities can be also found in exploit kits used by cyber criminals.\nDubbed \u201cRunning for Office: Russian APT Toolkits Revealed,\u201d Recorded Future\u2019s report also reveals that there might be no connection between APT28 and APT29, two of the most active actors. The former, which is also known as Fancy Bear, Operation Pawn Storm, Sednit, and Sofacy, is associated by many with Russian military intelligence (GRU), while the latter, also called Cozy Bear, The Dukes, and Office Monkeys, is possibly associated with the Russian Federal Security Service (FSB).\nOf the 33 known exploited product vulnerabilities that various Russian APTs use to steal information, 27 are tied to APT28 (22) and APT29 (5), but they don\u2019t overlap, although both were found to have compromised the Democratic National Committee (DNC) network. APT29 managed to infiltrate the network last year, while APT28 compromised it in April this year.\nAlongside these two groups, the alleged Russian state-sponsored groups Energetic Bear (also known as Dragonfly, Group 24, Koala Team) and Turla (aka Snake, Ouroboros, Carbon) also regularly target Microsoft products, the report claims. The massive user bases these products enjoy make them targets of choice: Windows has over 1.5 billion users, while Office has over 1.2 billion.\nIn addition to Microsoft products, these groups also focus on exploiting vulnerable Adobe software, including Flash Player and Acrobat, Oracle products, such as Java, Mozilla applications, and community software. According to Recorded Future\u2019s report, only 73% of vulnerabilities targeted by Russian APTs have public exploits available on portals such as Metasploit, Exploit Database and Github.\nSome of these vulnerabilities include CVE-2015-1701 and CVE-2015-3043, both associated with APT28 last year, CVE-2015-7645, patched in October by Adobe, and CVE-2015-1641, currently one of the most popular Office flaws, alongside CVE-2015-2545. CVE-2012-0158, another highly abused vulnerability in Office, is also targeted by these groups.\nAlthough these groups are still targeting vulnerabilities discovered seven or six years ago (such as CVE-2009-1123, CVE-2010-3333, and CVE-2010-4398) in Microsoft products, they don\u2019t use flaws that have been reported this year. The only new exploit is CVE-2016-0728, used by APT28 to target Linux machines.\nThe attack tactics employed by these groups are similar to those used by other threat actors, such as spear-phishing, spoofed domains supporting credential phishing, social engineering and watering hole attacks. The security researchers claim that Office and Acrobat are popular targets among them because of attacks that use attachments in spear-phishing emails. Of the 33 analyzed vulnerabilities, 8 impact Office\/Acrobat.\n\u201cHeavy Russian APT use of Office and Adobe PDF exploits may be in line with the more targeted nature of state-sponsored attacks. Criminal campaigns such as ransomware play a numbers game, while state-sponsored attacks focus on specific organizations and information,\u201d the report reveals.\nWhen looking at the 22 exploits used by APT28 and the 5 employed by APT29, researchers discovered that they are different, meaning that the two groups are not connected. Previous reports also suggested that the two groups do not coordinate or share resources and infrastructure. Although both actors infiltrated DNC, they did so by unwittingly stealing the same set of credentials, researchers say.\nRelated: XTunnel Malware Specifically Built for DNC Hack\n[if gte mso 9]><xml> <o:OfficeDocumentSettings> <o:AllowPNG \/> <\/o:OfficeDocumentSettings> <\/xml><![endif][if gte mso 9]><xml> <o:OfficeDocumentSettings> <o:AllowPNG \/> <\/o:OfficeDocumentSettings> <\/xml><![endif][if gte mso 9]><xml> <w:WordDocument> <w:View>Normal<\/w:View> <w:Zoom>0<\/w:Zoom> <w:TrackMoves \/> <w:TrackFormatting \/> <w:PunctuationKerning \/> <w:ValidateAgainstSchemas \/> <w:SaveIfXMLInvalid>false<\/w:SaveIfXMLInvalid> <w:IgnoreMixedContent>false<\/w:IgnoreMixedContent> <w:AlwaysShowPlaceholderText>false<\/w:AlwaysShowPlaceholderText> <w:DoNotPromoteQF \/> <w:LidThemeOther>EN-US<\/w:LidThemeOther> <w:LidThemeAsian>X-NONE<\/w:LidThemeAsian> <w:LidThemeComplexScript>X-NONE<\/w:LidThemeComplexScript> <w:Compatibility> <w:BreakWrappedTables \/> <w:SnapToGridInCell \/> <w:WrapTextWithPunct \/> <w:UseAsianBreakRules \/> <w:DontGrowAutofit \/> <w:SplitPgBreakAndParaMark \/> <w:EnableOpenTypeKerning \/> <w:DontFlipMirrorIndents \/> <w:OverrideTableStyleHps \/> <\/w:Compatibility> <m:mathPr> <m:mathFont m:val=\"Cambria Math\" \/> <m:brkBin m:val=\"before\" \/> <m:brkBinSub m:val=\"&#45;-\" \/> <m:smallFrac m:val=\"off\" \/> <m:dispDef \/> <m:lMargin m:val=\"0\" \/> <m:rMargin m:val=\"0\" \/> <m:defJc m:val=\"centerGroup\" \/> <m:wrapIndent m:val=\"1440\" \/> <m:intLim m:val=\"subSup\" \/> <m:naryLim m:val=\"undOvr\" \/> <\/m:mathPr><\/w:WordDocument> <\/xml><![endif][if gte mso 9]><xml> <w:WordDocument> <w:View>Normal<\/w:View> <w:Zoom>0<\/w:Zoom> <w:TrackMoves \/> <w:TrackFormatting \/> <w:PunctuationKerning \/> <w:ValidateAgainstSchemas \/> <w:SaveIfXMLInvalid>false<\/w:SaveIfXMLInvalid> <w:IgnoreMixedContent>false<\/w:IgnoreMixedContent> <w:AlwaysShowPlaceholderText>false<\/w:AlwaysShowPlaceholderText> <w:DoNotPromoteQF \/> <w:LidThemeOther>EN-US<\/w:LidThemeOther> <w:LidThemeAsian>X-NONE<\/w:LidThemeAsian> <w:LidThemeComplexScript>X-NONE<\/w:LidThemeComplexScript> <w:Compatibility> <w:BreakWrappedTables \/> <w:SnapToGridInCell \/> <w:WrapTextWithPunct \/> <w:UseAsianBreakRules \/> <w:DontGrowAutofit \/> <w:SplitPgBreakAndParaMark \/> <w:EnableOpenTypeKerning \/> <w:DontFlipMirrorIndents \/> <w:OverrideTableStyleHps \/> <\/w:Compatibility> <m:mathPr> <m:mathFont m:val=\"Cambria Math\" \/> <m:brkBin m:val=\"before\" \/> <m:brkBinSub m:val=\"&#45;-\" \/> <m:smallFrac m:val=\"off\" \/> <m:dispDef \/> <m:lMargin m:val=\"0\" \/> <m:rMargin m:val=\"0\" \/> <m:defJc m:val=\"centerGroup\" \/> <m:wrapIndent m:val=\"1440\" \/> <m:intLim m:val=\"subSup\" \/> <m:naryLim m:val=\"undOvr\" \/> <\/m:mathPr><\/w:WordDocument> <\/xml><![endif][if gte mso 9]><xml> <w:LatentStyles DefLockedState=\"false\" DefUnhideWhenUsed=\"false\"   DefSemiHidden=\"false\" DefQFormat=\"false\" DefPriority=\"99\"   LatentStyleCount=\"381\"> <w:LsdException Locked=\"false\" Priority=\"0\" QFormat=\"true\" Name=\"Normal\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 1\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 2\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 3\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 4\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 5\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 6\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 7\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 8\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 9\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 9\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 1\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 2\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 3\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 4\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 5\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 6\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 7\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 8\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 9\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Normal Indent\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"footnote text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"annotation text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"header\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"footer\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index heading\" \/> <w:LsdException Locked=\"false\" Priority=\"35\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"caption\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"table of figures\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"envelope address\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"envelope return\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"footnote reference\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"annotation reference\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"line number\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"page number\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"endnote reference\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"endnote text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"table of authorities\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"macro\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"toa heading\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 5\" \/> <w:LsdException Locked=\"false\" Priority=\"10\" QFormat=\"true\" Name=\"Title\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Closing\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Signature\" \/> <w:LsdException Locked=\"false\" Priority=\"1\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"Default Paragraph Font\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text Indent\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Message Header\" \/> <w:LsdException Locked=\"false\" Priority=\"11\" QFormat=\"true\" Name=\"Subtitle\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Salutation\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Date\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text First Indent\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text First Indent 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Heading\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text Indent 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text Indent 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Block Text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Hyperlink\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"FollowedHyperlink\" \/> <w:LsdException Locked=\"false\" Priority=\"22\" QFormat=\"true\" Name=\"Strong\" \/> <w:LsdException Locked=\"false\" Priority=\"20\" QFormat=\"true\" Name=\"Emphasis\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Document Map\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Plain Text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"E-mail Signature\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Top of Form\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Bottom of Form\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Normal (Web)\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Acronym\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Address\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Cite\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Code\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Definition\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Keyboard\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Preformatted\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Sample\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Typewriter\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Variable\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Normal Table\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"annotation subject\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"No List\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Outline List 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Outline List 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Outline List 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Simple 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Simple 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Simple 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Colorful 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Colorful 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Colorful 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table 3D effects 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table 3D effects 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table 3D effects 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Contemporary\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Elegant\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Professional\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Subtle 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Subtle 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Web 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Web 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Web 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Balloon Text\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"Table Grid\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Theme\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 9\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Placeholder Text\" \/> <w:LsdException Locked=\"false\" Priority=\"1\" QFormat=\"true\" Name=\"No Spacing\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Revision\" \/> <w:LsdException Locked=\"false\" Priority=\"34\" QFormat=\"true\"    Name=\"List Paragraph\" \/> <w:LsdException Locked=\"false\" Priority=\"29\" QFormat=\"true\" Name=\"Quote\" \/> <w:LsdException Locked=\"false\" Priority=\"30\" QFormat=\"true\"    Name=\"Intense Quote\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"19\" QFormat=\"true\"    Name=\"Subtle Emphasis\" \/> <w:LsdException Locked=\"false\" Priority=\"21\" QFormat=\"true\"    Name=\"Intense Emphasis\" \/> <w:LsdException Locked=\"false\" Priority=\"31\" QFormat=\"true\"    Name=\"Subtle Reference\" \/> <w:LsdException Locked=\"false\" Priority=\"32\" QFormat=\"true\"    Name=\"Intense Reference\" \/> <w:LsdException Locked=\"false\" Priority=\"33\" QFormat=\"true\" Name=\"Book Title\" \/> <w:LsdException Locked=\"false\" Priority=\"37\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"Bibliography\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"TOC Heading\" \/> <w:LsdException Locked=\"false\" Priority=\"41\" Name=\"Plain Table 1\" \/> <w:LsdException Locked=\"false\" Priority=\"42\" Name=\"Plain Table 2\" \/> <w:LsdException Locked=\"false\" Priority=\"43\" Name=\"Plain Table 3\" \/> <w:LsdException Locked=\"false\" Priority=\"44\" Name=\"Plain Table 4\" \/> <w:LsdException Locked=\"false\" Priority=\"45\" Name=\"Plain Table 5\" \/> <w:LsdException Locked=\"false\" Priority=\"40\" Name=\"Grid Table Light\" \/> <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"Grid Table 1 Light\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark\" \/> <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"Grid Table 6 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"Grid Table 7 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"List Table 1 Light\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark\" \/> <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"List Table 6 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"List Table 7 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Mention\" \/> <\/w:LatentStyles> <\/xml><![endif][if gte mso 9]><xml> <w:LatentStyles DefLockedState=\"false\" DefUnhideWhenUsed=\"false\"   DefSemiHidden=\"false\" DefQFormat=\"false\" DefPriority=\"99\"   LatentStyleCount=\"381\"> <w:LsdException Locked=\"false\" Priority=\"0\" QFormat=\"true\" Name=\"Normal\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" QFormat=\"true\" Name=\"heading 1\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 2\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 3\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 4\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 5\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 6\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 7\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 8\" \/> <w:LsdException Locked=\"false\" Priority=\"9\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"heading 9\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index 9\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 1\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 2\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 3\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 4\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 5\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 6\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 7\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 8\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"toc 9\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Normal Indent\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"footnote text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"annotation text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"header\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"footer\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"index heading\" \/> <w:LsdException Locked=\"false\" Priority=\"35\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"caption\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"table of figures\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"envelope address\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"envelope return\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"footnote reference\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"annotation reference\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"line number\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"page number\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"endnote reference\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"endnote text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"table of authorities\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"macro\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"toa heading\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Bullet 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Number 5\" \/> <w:LsdException Locked=\"false\" Priority=\"10\" QFormat=\"true\" Name=\"Title\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Closing\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Signature\" \/> <w:LsdException Locked=\"false\" Priority=\"1\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"Default Paragraph Font\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text Indent\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"List Continue 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Message Header\" \/> <w:LsdException Locked=\"false\" Priority=\"11\" QFormat=\"true\" Name=\"Subtitle\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Salutation\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Date\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text First Indent\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text First Indent 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Heading\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text Indent 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Body Text Indent 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Block Text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Hyperlink\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"FollowedHyperlink\" \/> <w:LsdException Locked=\"false\" Priority=\"22\" QFormat=\"true\" Name=\"Strong\" \/> <w:LsdException Locked=\"false\" Priority=\"20\" QFormat=\"true\" Name=\"Emphasis\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Document Map\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Plain Text\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"E-mail Signature\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Top of Form\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Bottom of Form\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Normal (Web)\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Acronym\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Address\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Cite\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Code\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Definition\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Keyboard\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Preformatted\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Sample\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Typewriter\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"HTML Variable\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Normal Table\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"annotation subject\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"No List\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Outline List 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Outline List 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Outline List 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Simple 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Simple 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Simple 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Classic 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Colorful 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Colorful 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Colorful 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Columns 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Grid 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table List 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table 3D effects 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table 3D effects 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table 3D effects 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Contemporary\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Elegant\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Professional\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Subtle 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Subtle 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Web 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Web 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Web 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Balloon Text\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" Name=\"Table Grid\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Table Theme\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 2\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 3\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 4\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 5\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 7\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 8\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Note Level 9\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Placeholder Text\" \/> <w:LsdException Locked=\"false\" Priority=\"1\" QFormat=\"true\" Name=\"No Spacing\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 1\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" Name=\"Revision\" \/> <w:LsdException Locked=\"false\" Priority=\"34\" QFormat=\"true\"    Name=\"List Paragraph\" \/> <w:LsdException Locked=\"false\" Priority=\"29\" QFormat=\"true\" Name=\"Quote\" \/> <w:LsdException Locked=\"false\" Priority=\"30\" QFormat=\"true\"    Name=\"Intense Quote\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"60\" Name=\"Light Shading Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"61\" Name=\"Light List Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"62\" Name=\"Light Grid Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"63\" Name=\"Medium Shading 1 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"64\" Name=\"Medium Shading 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"65\" Name=\"Medium List 1 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"66\" Name=\"Medium List 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"67\" Name=\"Medium Grid 1 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"68\" Name=\"Medium Grid 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"69\" Name=\"Medium Grid 3 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"70\" Name=\"Dark List Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"71\" Name=\"Colorful Shading Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"72\" Name=\"Colorful List Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"73\" Name=\"Colorful Grid Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"19\" QFormat=\"true\"    Name=\"Subtle Emphasis\" \/> <w:LsdException Locked=\"false\" Priority=\"21\" QFormat=\"true\"    Name=\"Intense Emphasis\" \/> <w:LsdException Locked=\"false\" Priority=\"31\" QFormat=\"true\"    Name=\"Subtle Reference\" \/> <w:LsdException Locked=\"false\" Priority=\"32\" QFormat=\"true\"    Name=\"Intense Reference\" \/> <w:LsdException Locked=\"false\" Priority=\"33\" QFormat=\"true\" Name=\"Book Title\" \/> <w:LsdException Locked=\"false\" Priority=\"37\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" Name=\"Bibliography\" \/> <w:LsdException Locked=\"false\" Priority=\"39\" SemiHidden=\"true\"    UnhideWhenUsed=\"true\" QFormat=\"true\" Name=\"TOC Heading\" \/> <w:LsdException Locked=\"false\" Priority=\"41\" Name=\"Plain Table 1\" \/> <w:LsdException Locked=\"false\" Priority=\"42\" Name=\"Plain Table 2\" \/> <w:LsdException Locked=\"false\" Priority=\"43\" Name=\"Plain Table 3\" \/> <w:LsdException Locked=\"false\" Priority=\"44\" Name=\"Plain Table 4\" \/> <w:LsdException Locked=\"false\" Priority=\"45\" Name=\"Plain Table 5\" \/> <w:LsdException Locked=\"false\" Priority=\"40\" Name=\"Grid Table Light\" \/> <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"Grid Table 1 Light\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark\" \/> <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"Grid Table 6 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"Grid Table 7 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"Grid Table 1 Light Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"Grid Table 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"Grid Table 3 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"Grid Table 4 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"Grid Table 5 Dark Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"Grid Table 6 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"Grid Table 7 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"46\" Name=\"List Table 1 Light\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark\" \/> <w:LsdException Locked=\"false\" Priority=\"51\" Name=\"List Table 6 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"52\" Name=\"List Table 7 Colorful\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 1\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 2\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 3\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 4\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 5\" \/> <w:LsdException Locked=\"false\" Priority=\"46\"    Name=\"List Table 1 Light Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"47\" Name=\"List Table 2 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"48\" Name=\"List Table 3 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"49\" Name=\"List Table 4 Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"50\" Name=\"List Table 5 Dark Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"51\"    Name=\"List Table 6 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" Priority=\"52\"    Name=\"List Table 7 Colorful Accent 6\" \/> <w:LsdException Locked=\"false\" SemiHidden=\"true\" UnhideWhenUsed=\"true\"    Name=\"Mention\" \/> <\/w:LatentStyles> <\/xml><![endif][if gte mso 10]> <style>\n \/* Style Definitions *\/\ntable.MsoNormalTable\n\t{mso-style-name:\"Table Normal\";\n\tmso-tstyle-rowband-size:0;\n\tmso-tstyle-colband-size:0;\n\tmso-style-noshow:yes;\n\tmso-style-priority:99;\n\tmso-style-parent:\"\";\n\tmso-padding-alt:0in 5.4pt 0in 5.4pt;\n\tmso-para-margin-top:0in;\n\tmso-para-margin-right:0in;\n\tmso-para-margin-bottom:8.0pt;\n\tmso-para-margin-left:0in;\n\tline-height:107%;\n\tmso-pagination:widow-orphan;\n\tfont-size:11.0pt;\n\tfont-family:Calibri;\n\tmso-ascii-font-family:Calibri;\n\tmso-ascii-theme-font:minor-latin;\n\tmso-hansi-font-family:Calibri;\n\tmso-hansi-theme-font:minor-latin;}\n<\/style> <![endif][if gte mso 10]> <style>\n \/* Style Definitions *\/\ntable.MsoNormalTable\n\t{mso-style-name:\"Table Normal\";\n\tmso-tstyle-rowband-size:0;\n\tmso-tstyle-colband-size:0;\n\tmso-style-noshow:yes;\n\tmso-style-priority:99;\n\tmso-style-parent:\"\";\n\tmso-padding-alt:0in 5.4pt 0in 5.4pt;\n\tmso-para-margin-top:0in;\n\tmso-para-margin-right:0in;\n\tmso-para-margin-bottom:8.0pt;\n\tmso-para-margin-left:0in;\n\tline-height:107%;\n\tmso-pagination:widow-orphan;\n\tfont-size:11.0pt;\n\tfont-family:Calibri;\n\tmso-ascii-font-family:Calibri;\n\tmso-ascii-theme-font:minor-latin;\n\tmso-hansi-font-family:Calibri;\n\tmso-hansi-theme-font:minor-latin;}\n<\/style> <![endif]\nRelated: Hacking of DNC Raises Fears of Cyber Attack on U.S. Election","url":"https:\/\/www.securityweek.com\/russian-hackers-favor-windows-office-exploits-report"},{"Unnamed: 0":26,"query":"APT28","text":"Russian Hackers Infiltrated German Ministries' Network: Report\r\n\nBerlin - Russian hackers have infiltrated Germany's foreign and interior ministries' online networks, German news agency DPA reported Wednesday quoting unnamed security sources.\nThe hacker group known as APT28 -- which has been linked to Russia's GRU military intelligence and accused of attacks on Hillary Clinton's 2016 presidential campaign -- managed to plant malware in the ministries' networks for possibly as long as a year, the news agency said.\nGerman security authorities only detected the online spying in December, it said, adding that an isolated government IT network had also been hit.\nIf confirmed, the attack would be the biggest to hit the German government.\nTop security officials had repeatedly warned during Germany's 2017 general elections that Russia hackers may seek to disrupt the polls.\nWhile authorities did not have concrete proof, they have pinned the malware attack that crippled the Bundestag parliamentary network in 2015 for days on the APT28, also known as \"Fancy Bear\" or \"Sofacy\".\nThe attack netted 17 gigabytes of data which, officials feared, could be used to blackmail MPs or discredit them.\nAmid the rising frequency of attacks, Germany's defence ministry in 2016 set up a cyber department to coordinate a response to online intrusions.","url":"https:\/\/www.securityweek.com\/russian-hackers-infiltrated-german-ministries-network-report"},{"Unnamed: 0":27,"query":"APT28","text":"Pawn Storm Attackers Target MH17 Plane Crash Investigators\r\n\nOrganizations tasked with investigating the crash of Malaysia Airlines Flight MH17 have been targeted by the Russia-linked threat group known as Pawn Storm, Trend Micro reported on Thursday.\nFlight MH17, traveling from Amsterdam to Kuala Lumpur, crashed on July 17, 2014 after being hit by a Russian-made missile while flying over a conflict zone in eastern Ukraine. The investigation into the incident was led by the Dutch Safety Board (DSB), which published a report on the crash of MH17 on October 13.\nAccording to Trend Micro researchers, the Pawn Storm cyber espionage group (also known as Sednit, APT28, Fancy Bear, Sofacy and Tsar Team) targeted the DSB both before and after the organization published its report on the incident.\n\u201cWe believe that a coordinated attack from several sides was launched to get unauthorized access to sensitive material of the investigation conducted by Dutch, Malaysian, Australian, Belgian, and Ukrainian authorities,\u201d researchers said.\nThe security firm discovered that the attackers set up fake Secure File Transfer Protocol (SFTP) and VPN servers designed to mimic servers of the Dutch Safety Board most likely in an effort to phish the credentials of the organization\u2019s staff. The goal was to obtain credentials that they could use to access the legitimate SFTP and VPN servers.\nTrend Micro says this is the first time it has found direct evidence that an APT actor has targeted a VPN server.\n\u201cThe VPN server of the Safety Board looks to use temporary tokens for authentication. However, these tokens can be phished in a straightforward way and tokens alone do not protect against one-time unauthorized access by third parties, once the target falls for the phishing attack,\u201d experts said.\nIn addition to the DSB, the attackers also targeted one of the organization\u2019s key partners using a rogue Outlook Web Access (OWA) server, a technique previously used by Pawn Storm in attacks aimed at defense companies in the United States. The security company says it has warned the targeted entity in an early stage of the attack so the attempt was probably blocked.\nOver the past couple of months, Pawn Storm has also taken an increased interest in Syrian opposition groups and Arab countries that object to Russia\u2019s intervention in Syria. Trend Micro says the group has set up several fake OWA servers in an effort to target the military, the Foreign Affairs Ministries, and the Defense Ministries of these countries.\nThe Russia-linked threat actor\u2019s activities made the news earlier this month after researchers discovered that they had been using an Adobe Flash Player zero-day to target Foreign Affairs Ministries.\nTrend Micro also revealed this week that the group had used a Java zero-day patched by Oracle with the release of the October 2015 CPU in attacks aimed at the White House and NATO member countries.","url":"https:\/\/www.securityweek.com\/pawn-storm-attackers-target-mh17-plane-crash-investigators"},{"Unnamed: 0":28,"query":"APT28","text":"Fysbis Backdoor Preferred by Pawn Storm Group to Target Linux\r\n\nResearchers at Palo Alto Networks have performed an in-depth analysis of Fysbis, the preferred Linux malware used by the Pawn Storm threat group. The simple, yet efficient tool is proving to be effective because Linux security in general is still a maturing area, the experts say.\nPawn Storm is a well-known cyber espionage group believed to have ties to the Russian government. Also known as Sofacy, APT28 and Sednit, the group has been around since 2007, targeting government, military, and defense organizations around the world, as well as various Eastern European governments.\nOver the years, Pawn Storm has used a multitude of tools for its attack operations, such as zero-day exploits in Flash, Java or Microsoft Office, spear-phishing, and website compromise. Their tools target multiple operating systems, including Windows, OS X, Linux, and iOS, but Fysbis appears to be their malware of choice when it comes to infiltrating Linux systems.\nThe tool, a modular Linux Trojan \/ backdoor that implements plug-in and controller modules as distinct classes, is not sophisticated, Palo Alto\u2019s Bryan Lee and Rob Downs explain in a blog post. The malware includes 32-bit and 64-bit versions of Executable and Linking Format (ELF) binaries and can install itself onto a system with and without root privileges.\nThe researchers note that the lack of sophistication displayed by this malware suggests that Advanced Persistent Threat (APT) actors don\u2019t require advanced means to reach their objectives. They also note that, while these actors do own advanced malware and zero-day exploits, they often keep them in reserve and use the smallest amount of resources needed to meet their goals.\nThe Fysbis analysis revealed that the malware checks the Linux version during installation, and runs a series of shell commands to establish persistency. Recently, the group behind the malicious program improved their obfuscation technique, to ensure that the installation information is no longer leaked in the clear, as had been the case prior.\nBy looking at several malware samples, researchers discovered that, while some did beacon to domains previously known to be used for command and control (C&C) by the Pawn Storm group, others called back to new domains. The newly found C&C domain mozilla-plugins[.]com wasn\u2019t previously associated with the group, nor was the IP address it resolves to.\nPalo Alto Networks believes that the domain and IP are associated to a newer campaign, although the malware samples show similarities at the code level and in terms of shared behavior. What is clear, however, is that while other adversaries seem hesitant to change their infrastructure, Pawn Storm did invest in additional resources to do so, although some Fysbis samples displayed the same type of behavior.\nAccording to Palo Alto Networks researchers, Fysbis has contributed to the success of associated attacks by the Pawn Storm \/ Sofacy group mainly because Linux security is missing key elements. They also note that expertise in the Linux platform is highly sought after across all industries, as the platform remains largely unknown even to enterprise IT specialists.\nLinux is used across a broad variety of environments, including homes, cloud, and the majority of Internet-facing web and application servers, while also being the foundation of the Android mobile platform. However, it also poses a high risk to organizations\u2019 security posture because Linux malware\u00a0and vulnerabilities do exist and are in use by advanced adversaries, while detection and prevention is not prevalent at this time.\nRelated:\u00a0Russian Cyberspies Use Updated Arsenal to Attack Defense Contractors\nRelated: Multipurpose \"Xunpes\" Trojan Targeting Linux Systems\n\u00a0\nRelated: New Cross-Platform Backdoors Target Linux, Windows","url":"https:\/\/www.securityweek.com\/fysbis-backdoor-preferred-pawn-storm-group-target-linux"},{"Unnamed: 0":29,"query":"APT28","text":"Russian 'Fancy Bear' Hackers Abuse Blogspot for Phishing\r\n\nThe cyber espionage group known as Fancy Bear, which is widely believed to be backed by the Russian government, has been abusing Google\u2019s Blogspot service in recent phishing attacks.\nThreat intelligence firm ThreatConnect spotted the use of the blogging service while analyzing attacks aimed at Bellingcat, a group of investigative journalists that uses open source information to report on various events taking place around the world.\nFancy Bear, also known as Pawn Storm, APT28, Sofacy, Sednit, Strontium and Tsar Team, was first seen targeting Bellingcat in 2015 as part of a campaign aimed at entities investigating Russia\u2019s involvement in the downing of Malaysia Airlines flight MH17 in July 2014 as it was crossing a conflict zone in Ukraine.\nThe latest attacks aimed at Bellingcat involved fake emails instructing users to change their Gmail passwords as a result of unauthorized activity on their account, and Dropbox invitations to view shared folders.\nThe buttons included in these emails pointed to a randomly generated Blogspot subdomain set up to redirect visitors to a phishing page. The phishing sites used HTTPS and they were hosted on subdomains that may have tricked many individuals into thinking they were legitimate. Experts believe the attackers likely used Blogspot in an effort to get past spam filters.\n\u201cA URL hosted on Google's own systems, in this case Blogspot, may be more likely to get past spam filters than URLs hosted on a third party IP address or hostname,\u201d ThreatConnect researchers said in a blog post.\nFancy Bear is believed to be behind many high profile attacks, including a campaign that may have attempted to interfere in last year\u2019s presidential election in the United States.\nResearchers at SecureWorks reported last year that they had identified thousands of Gmail accounts targeted by the hackers. The security firm recently provided the entire list of accounts to The Associated Press, whose reporters have analyzed them in an effort to find who they belong to.\nThey identified the email addresses of entities in 116 countries, including former U.S. Secretaries of State John Kerry and Colin Powell, NATO Supreme Commanders Air Force Gen. Philip Breedlove and Army Gen. Wesley Clark, defense contractors such as Raytheon and Lockheed Martin, U.S. politicians and intelligence officials, Ukrainian officials and the pope\u2019s representative in Kiev, and Russian opponents of the Kremlin.\nRelated: Russian Cyberspies Target Hotels in Europe\nRelated: Russian Hackers Exploit Recently Patched Flash Vulnerability\nRelated: Russian Hackers Target Montenegro as Country Joins NATO","url":"https:\/\/www.securityweek.com\/russian-fancy-bear-hackers-abuse-blogspot-phishing"},{"Unnamed: 0":30,"query":"APT28","text":"Google Tightens OAuth Rules to Combat Phishing\r\n\nFollowing last week\u2019s phishing attack against Gmail users, Google is planning tightened OAuth rules to prevent similar incidents from occurring.\nPhishing emails, which impersonate a trusted source to trick the recipient into opening a malicious attachment or clicking a suspicious link, have long been a favorite tool\u00a0for attackers. Google\u2019s email service blocks millions of phishing emails each day, but last week\u2019s incident proved that the system isn\u2019t invincible.\nThe phishing attack tricked users into granting access to their contact information to a third-party application cleverly named \u201cGoogle Docs.\u201d The incident resulted in the attacker gaining access to all of the affected users\u2019 email content, as well as in the phishing attack immediately propagating to all of the victim\u2019s contacts.\nThe phishing emails, which appeared to arrive from someone in the victim\u2019s contact list, claimed to contain a link to Google Docs content that the sender wanted to share with the recipient. Once the user clicked on the link, they were taken to a legitimate Google sign-in page, where they were asked to authorize an app called \u201cGoogle Docs,\u201d thus allowing it to read, send, delete, and manage emails and contacts.\nGoogle was able to spot and block the attack fast, but the incident meant that immediate actions that users might have taken, such as changing passwords, had no effect. Because OAuth was used, the attackers still had access to the account, and only removing permissions for the offending app could solve the issue.\n\u201cWe have taken action to protect users against an email impersonating Google Docs, and have disabled offending accounts. We've removed the fake pages, pushed updates through Safe Browsing, and our abuse team is working to prevent this kind of spoofing from happening again,\u201d Google said after the incident.\nNow, the company reveals that it is updating its policies and enforcement on OAuth applications to prevent similar attacks from happening in the future. Moreover, updates to Google\u2019s anti-spam systems should help prevent similar campaigns, and augmented monitoring of suspicious third-party apps that request information from users should add an extra layer of security.\n\u201cWe\u2019re committed to keeping your Google Account safe, and have layers of defense in place to guard against sophisticated attacks of all types, from anti-hijacking systems detecting unusual behavior, to machine learning models that block malicious content, to protection measures in Chrome and through Safe Browsing that guard against visiting suspicious sites,\u201d Google says.\nWhat should be noted is that the concept of launching such an attack isn\u2019t new. It was first presented in 2011 by Andr\u00e9 DeMarre, and then thoroughly detailed by Greg Carson in February 2017.\nIn fact, the cyber espionage group known as Pawn Storm (aka Fancy Bear, APT28) was observed using the very same technique in the past. Trend Micro recently revealed that this actor\u2019s phishing scheme employed an application dubbed Google Defender, while abusing \u201cthe same legitimate OAuth connection to exploit the user\u2019s lack of knowledge of available services.\u201d\nIn an emailed statement to SecurityWeek, Jaime Blasco, Chief Scientist at\u00a0AlienVault, shared a similar point of view: \u201cThis is similar to what APT28 (the group behind the DNS hack, France election groups attacks, etc) was using a while back. I don't believe they are behind this though because this is way too widespread. Many people\/organizations have received similar attempts so this is probably something massive and less targeted.\u201d\nAccording to Google, less than 0.1% of Gmail users were impacted by last week\u2019s \u201cGoogle Docs\u201d incident, but, as Talos\u2019 Sean Baird and Nick Biasini point out, this proof-of-concept did reveal that a convincing Google phish via OAuth is possible.\nTo further protect users from such attacks, Google also announced anti-phishing security checks for Gmail for Android. Thus, users will be warned when clicking on suspicious links they receive via email, which should help prevent them from disclosing financial and personal information.\nRelated: Google Docs Phishing Scam Doused After Catching Fire\nRelated: Google to Revoke OAuth 2.0 Tokens Upon Password Reset","url":"https:\/\/www.securityweek.com\/google-tightens-oauth-rules-combat-phishing"},{"Unnamed: 0":31,"query":"APT28","text":"Sofacy Targets European Govt as U.S. Accuses Russia of Hacking\r\n\nJust as the U.S. had been preparing to accuse Russia of launching cyberattacks against its energy and other critical infrastructure sectors, the notorious Russia-linked threat group known as Sofacy was spotted targeting a government agency in Europe.\nThe United States on Thursday announced sanctions against Russian spy agencies and more than a dozen individuals for trying to influence the 2016 presidential election and launching cyberattacks, including the destructive NotPetya campaign and operations targeting energy firms.\nThe Department of Homeland Security and Federal Bureau of Investigation issued a joint technical alert via US-CERT last year to warn about attacks launched by a group known as Dragonfly, Crouching Yeti and Energetic Bear on critical infrastructure. Researchers previously linked Dragonfly to the Russian government and now the DHS has officially stated the same.\nUS-CERT has updated its alert with some additional information. The new version of the alert replaces \u201cAPT actors\u201d with \u201cRussian government cyber actors.\u201d The DHS said that based on its analysis of malware and indicators of compromise, Dragonfly attacks are ongoing, with threat actors \u201cactively pursuing their ultimate objectives over a long-term campaign.\u201d\nThis is not the first time the U.S. has imposed sanctions on Russia over its attempt to influence elections. Russia has also been accused by Washington and others of launching the NotPetya attack last year. The Kremlin has always denied the accusations, but President Vladimir Putin did admit at one point that patriotic hackers could be behind the attacks.\nIf Dragonfly and Sofacy (aka Fancy Bear, APT28, Sednit, Tsar Team and Pawn Storm) are truly operating out of Russia, they don\u2019t seem to be discouraged by sanctions and accusations.\nOn March 12 and March 14, security firm Palo Alto Networks spotted attacks launched by Sofacy against an unnamed European government agency using an updated variant of a known tool.\nSofacy has been using a Flash Player exploit platform dubbed DealersChoice\u00a0since at least 2016 and it has continued improving it. The latest version has been delivered to a government organization in Europe using a spear phishing email referencing the \u201cUnderwater Defence & Security\u201d conference, which will take place in the U.K. later this month.\nWhat makes the new version of DealersChoice interesting, according to Palo Alto Networks, is the fact that it employs a clever evasion technique that has not been seen in the past.\nOlder versions of DealersChoice loaded a malicious Flash object as soon as the bait document was opened. The latest samples, however, include the Flash object on page three of the document and it\u2019s only loaded if users scroll down to it. This Flash object, displayed in the document as a tiny black box, contacts the command and control (C&C) server to download an additional Flash object that contains the actual exploit.\n\nKaspersky reported last week that it had seen overlaps between attacks launched by Sofacy and campaigns conducted by other state-sponsored cyberspies, including ones linked to China and the United States.","url":"https:\/\/www.securityweek.com\/sofacy-targets-european-govt-us-accuses-russia-hacking"},{"Unnamed: 0":32,"query":"APT28","text":"Evidence Links Russia to Second Democratic Party Hack\r\n\nResearchers from two security firms have uncovered evidence linking a Russian threat actor to the cyberattack targeting the U.S. Democratic Congressional Campaign Committee (DCCC).\nThe DCCC is the second Democratic Party committee targeted by hackers over the past months. The first was the Democratic National Committee (DNC) which, according to several security companies, was targeted by two different Russia-linked advanced persistent threat (APT) actors: Cozy Bear, also known as Cozy Duke and APT29; and Fancy Bear, also known as APT28, Pawn Storm, Sofacy, Tsar Team, Strontium and Sednit.\nSecureWorks reported last month that Fancy Bear had targeted thousands of Google accounts, including ones belonging to people working for or associated with the DNC and Hillary Clinton\u2019s presidential campaign.\nWikiLeaks later published a large number of emails obtained by hackers from the systems of the DNC. The Democratic Party blamed Russia for the intrusion, claiming that it was trying to help Republican candidate Donald Trump, who has publicly challenged Russia to hack into Clinton\u2019s emails. Russia denied any involvement and claimed it had detected espionage attempts aimed at roughly two dozen of its government and military organizations.\nDemocratic Party officials revealed last week that the DCCC had also been breached in an attack similar to the one targeting the DNC, and researchers claim to have found evidence linking the attack to the Fancy Bear group.\nExperts from Fidelis Cybersecurity and ThreatConnect analyzed secure.actblues[.]com, a domain designed to spoof secure.actblue[.]com, the ActBlue website that handles donations for the DCCC. The actblues[.]com domain appears to have been used in the DCCC attack, but researchers have not been able to determined if it was leveraged for social engineering, phishing or to deliver malware.\nThe security firms discovered that the email address used to register the actblues domain, [email\u00a0protected][.]com, had been previously used to register three other domains linked to Fancy Bear. Furthermore, two name servers utilized by this email address to register suspicious domains have been tied to a fake domain leveraged in the DNC breach.\nThe timing of the fake ActBlue domain\u2019s registration also indicates a link to the DNC hack. Experts determined that the domain was registered on June 14, the day CrowdStrike published its initial report on the DNC breach.\n\u201cThis suggests that, after being outed, FANCY BEAR actors shifted their operation immediately to another target that might allow them to continue collection against Democratic figures involved in the U.S. election,\u201d researchers said.\nExperts also analyzed the company whose name servers have been used to register the fake ActBlue domain. The firm, called I.T. Itch, claims to provide anonymous web and Bitcoin hosting, and private domain registration services. I.T. Itch says it ignores all data requests and takedown notices, which makes it ideal for malicious operations. Researchers have identified numerous domains that use Itch services and appear to be related to APT activity.\nFidelis and ThreatConnect expect the hacker known as Guccifer 2.0 to come forward and take responsibility for the DCCC attack. Guccifer 2.0, who has taken credit for the DNC hack, has claimed to be a Romanian with no connection to the Russian government, but his interviews with the media suggest that he does not speak Romanian well, leading many to believe that this persona is used by Russia to throw investigators off track.\nRelated: XTunnel Malware Specifically Built for DNC Hack\nRelated: FBI Probes Democratic Email Hack, but is Russia to Blame?\nRelated: FBI Investigating Democratic Party Email Hack","url":"https:\/\/www.securityweek.com\/evidence-links-russia-second-democratic-party-hack"},{"Unnamed: 0":33,"query":"APT28","text":"Hackers Leak Olympic Committee Emails in Response to Russia Ban\r\n\nA group of hackers linked to Russia has leaked several emails apparently exchanged between officials of the International Olympic Committee (IOC) and other individuals involved with the Olympics. The leak comes in response to Russia being banned from the upcoming Pyeongchang 2018 Winter Games in South Korea.\nThe group, calling itself Fancy Bears and claiming to be a team of hacktivists that \u201cstand for fair play and clean sport,\u201d previously released confidential athlete medical records stolen from the systems of the World Anti-Doping Agency (WADA), and also targeted the International Association of Athletics Federations (IAAF). One of their most recent leaks included emails and medical records related to football (soccer) players who used illegal substances.\nThe first leaks from Fancy Bears came shortly after Russian athletes were banned from the 2016 Rio Olympics following reports that Russia had been operating a state-sponsored doping program.\nWhile Fancy Bears claim to be hacktivists, researchers have found ties between the group and Fancy Bear, a sophisticated Russian cyber espionage team also known as APT28, Pawn Storm, Sednit, Sofacy, Tsar Team and Strontium.\nThe latest leak includes emails apparently exchanged between IOC officials and other individuals involved with the Olympics. Some of the messages discuss the recent decision to ban Russia from the upcoming Winter Games based on the findings of the IOC Disciplinary Commission.\n\u201cThese emails and documents point to the fact that the Europeans and the Anglo-Saxons are fighting for power and cash in the sports world. WADA headquartered in Montreal, Canada supported by the United States Olympic Committee declared the crusade against the IOC on the pretext of defending clean sport,\u201d the hackers said. \u201cHowever, the genuine intentions of the coalition headed by the Anglo-Saxons are much less noble than a war against doping. It is apparent that the Americans and the Canadians are eager to remove the Europeans from the leadership in the Olympic movement and to achieve political dominance of the English-speaking nations.\u201d\nWhile the hackers claim the emails they leaked prove the accusations, a majority of the messages don\u2019t appear to contain anything critical. Furthermore, Olympics-related organizations whose systems were previously breached by the hackers claimed at the time that some of the leaked files had been doctored.\nWADA representatives told Wired that Fancy Bears are looking to \u201cundermine the work of WADA and others,\u201d and claimed that everything they leaked this week is \u201cdated.\u201d WADA officially accused Russia of being behind previous attacks.\u00a0\nIt\u2019s unclear how the emails have been obtained by the hackers, but the group has been known to launch phishing attacks involving fake WADA domains. It\u2019s possible that they tricked some of the individuals whose emails have been compromised into handing over their credentials on a phishing site.\nRussia has been accused by several experts of disguising some of its cyber campaigns as hacktivism. For instance, a hacker using the moniker Guccifer 2.0 has taken credit for an attack on the U.S. Democratic Party, which may have influenced last year\u2019s presidential election.\nMany believe the Fancy Bears attacks are Russia\u2019s response to its athletes being banned. Perhaps unsurprisingly, articles from two major pro-Russia English-language news organizations suggest that the latest leak from Fancy Bears shows that Russia\u2019s exclusion from the Olympics was politically motivated.\nSecurity firm McAfee reported last week that several organizations associated with the Olympics had received emails set up to deliver information-stealing malware, but it\u2019s unclear who is behind the attacks.\nRelated: Hackers Already Targeting Pyeongchang Olympics\nRelated: Russian Cyberspies Accused of Attack on Olympics Anti-Doping Agency","url":"https:\/\/www.securityweek.com\/hackers-leak-olympic-committee-emails-response-russia-ban"},{"Unnamed: 0":34,"query":"APT28","text":"Attack on Olympics Anti-Doping Agency Linked to Russia\r\n\nRecent cyberattacks targeting the World Anti-Doping Agency (WADA) have been linked by researchers to the notorious Russian threat actor known as Fancy Bear.\nWADA, a non-profit organization initiated by the International Olympic Committee (IOC) and supported by national governments, is tasked with promoting, coordinating and monitoring the fight against drugs in sports.\nThe organization warned stakeholders earlier this month that malicious actors had registered two fake WADA domains, Wada-awa.[org] and Wada-arna.[org], and leveraged them for phishing attacks designed to trick users into handing over their credentials for the Anti-Doping Administration and Management System (ADAMS). One of the users who fell for the scam was Yuliya Stepanova, a whistleblower who exposed widespread doping in Russian athletics.\nFollowing the exposure of a Russian state-sponsored doping program, many Russian competitors were banned from the Olympics and the country\u2019s entire team was suspended from the upcoming Paralympics.\nRussia\u2019s interest in the WADA seems to back the findings of threat intelligence firm ThreatConnect, which uncovered evidence that a threat actor believed to be sponsored by the Russian government is behind the attacks.\nAn analysis of the fake WADA domains revealed that they were likely registered by the group known as Fancy Bear, APT28, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team. ThreatConnect\u2019s investigation showed that the attackers also registered tas-cass.[org], which typosquats the official domain of the Court of Arbitration for Sport (CAS).\n\u201cWe assess that the phishing and Stepanova\u2019s compromise most likely are part of targeted activity by Russian actors in response to the whistleblower and the WADA\u2019s recommendation to ban all Russian athletes from the Olympic and Paralympic games in Rio de Janeiro, Brazil,\u201d researchers explained. \u201cSuccessful operations against these individuals and organizations could facilitate Russian efforts to privately or publically intimidate them or other potential whistleblowers.\u201d\nAt around the same time as the WADA phishing attempts, a group calling itself Anonymous Poland leaked files allegedly stolen from the systems of WADA and CAS. While they haven\u2019t found any definitive proof, circumstantial evidence suggests that these attacks could also be the work of a Russian group that used the Anonymous brand to throw investigators off track.\nResearchers also blamed Fancy Bear for the recent attacks on the Democratic National Committee (DNC) and the Democratic Congressional Campaign Committee (DCCC). A hacker using the online moniker Guccifer 2.0 has taken credit for both attacks and leaked numerous documents to prove it. However, experts believe Guccifer 2.0 is just a \u201cRussian propaganda effort,\u201d not an independent hacker from Romania, as he claims to be.\nRelated: XTunnel Malware Specifically Built for DNC Hack\nRelated: More Evidence Links Russia to DNC Attack\nRelated: Evidence Links Russia to Second Democratic Party Hack","url":"https:\/\/www.securityweek.com\/attack-olympics-anti-doping-agency-linked-russia"},{"Unnamed: 0":35,"query":"APT28","text":"Putin: Patriotic Russians Could Be Behind Election Hacks\r\n\nRussian President Vladimir Putin says patriotic citizens may have launched politically motivated cyberattacks against foreign countries, but denied any government involvement in such operations.\nFollowing accusations that Russian state-sponsored hackers interfered with the recent elections in the United States, Putin was asked on Thursday at the International Economic Forum in St. Petersburg about the possibility of Russian hackers influencing the upcoming elections in Germany. Putin responded by comparing hackers to artists.\n\u201cIf artists get up in the morning feeling good, all they do all day is paint,\u201d Putin said. \u201cThe same goes for hackers. They got up today and read that something is going on internationally. If they are feeling patriotic they will start contributing, as they believe, to the justified fight against those speaking ill of Russia.\u201d\nThe Russian president noted that while this is possible in theory, his country does not engage in such activities on a government level. Putin also highlighted that threat actors could launch attacks and make it look like the source was Russia \u2013 a task that he described as \u201cvery easy.\u201d\nOn the other hand, Putin said he was convinced that hackers cannot have a real impact on an election campaign.\n\u201cWe do not engage in this activity at the government level and are not going to engage in it. On the contrary, we try to prevent this from happening in our country,\u201d he said. \u201cAt any rate, I believe that no hackers can affect the election campaign in any European country, nor in Asia or in America.\u201d\nThe United States has officially accused Russia of attempting to interfere with recent elections and an investigation has been launched to assess the impact of the cyberattacks on their outcome.\nThomas Rid, a professor in the department of War Studies at King's College London, believes the comments made by Putin are strategic.\n\nRussian hackers are also believed to have targeted the political campaign of French President Emmanuel Macron. The attacks were uncovered by security firms, but the U.S. National Security Agency (NSA) also claimed to have warned France of the attacks.\nThe threat groups tracked as Fancy Bear (aka APT28, Pawn Storm, Sofacy Group, Sednit and STRONTIUM) and Cozy Bear (aka APT29, Office Monkeys and Cozy Duke) are widely believed to be associated with Russia. While many security firms refrain from making statements on attribution or simply point out that the hackers speak Russian, some companies have gone as far as to link them to Russian government agencies, such as the Federal Security Service (FSB), the Foreign Intelligence Service (SVR), and the military intelligence agency GRU.\nRelated: DHS Uses Cyber Kill Chain to Analyze Russia-Linked Election Hacks\nRelated: Trump's Intel Bosses Reiterate - Russia Meddled in Election\nRelated: Ex-CIA Chief Says He Warned Russia to Stay Out of Election","url":"https:\/\/www.securityweek.com\/putin-patriotic-russians-could-be-behind-election-hacks"},{"Unnamed: 0":36,"query":"APT28","text":"Cyberspies Ramped Up Attacks After Exposure of Zero-Days\r\n\nThe Russia-linked threat actor known as Pawn Storm ramped up its attacks against governments and embassies after seeing that researchers discovered the Windows and Flash Player zero-day exploits it had been using.\nIn late October, Google disclosed a serious Windows kernel vulnerability that had been exploited in the wild. Microsoft was informed about the issue on October 21, but it only managed to release a patch this week. Microsoft was unhappy with Google\u2019s decision, but it quickly provided some mitigations.\nMicrosoft revealed in early November that the Pawn Storm group, which it calls Strontium, exploited the Windows flaw (CVE-2016-7255) in combination with a Flash Player vulnerability (CVE-2016-7855). Google also reported the Flash Player bug to Adobe on October 21, but unlike Microsoft, Adobe released a patch after only a few days.\nTrend Micro has been monitoring Pawn Storm, which is also known as APT28, Fancy Bear, Sednit, Sofacy and Tsar Team. According to the security firm, Pawn Storm initially used the two zero-days only against very high-profile targets.\nThen, after the existence of the flaws was disclosed and Adobe released patches, the threat actor sent several waves of spear-phishing emails to embassies and other government agencies. Starting with early November, the cyberspies used the zero-days in attacks aimed at various governments around the world.\nThe vulnerabilities have been used against an increasing number of targets, which suggests that they started losing their value following Google\u2019s disclosure.\nTrend Micro spotted several types of spear-phishing emails used in these attacks. Some of them appeared to advertise Defence IQ\u2019s Cyber Threat Intelligence and Incident Response conference. The emails carried specially crafted RTF documents that included a malicious Flash file designed to download an exploit for CVE-2016-7855.\nAnother attack involved emails with the subject line \u201cEuropean Parliament statement on nuclear threats.\u201d These fake messages purported to come from the European Union\u2019s media relations office and they included links that led to Pawn Storm\u2019s exploit kit.\nRelated: Zero-Day Patched by Microsoft Used for Malvertising Since 2014\nRelated: Russian Cyberspies Use \"Komplex\" Trojan to Target OS X Systems","url":"https:\/\/www.securityweek.com\/cyberspies-ramped-attacks-after-exposure-zero-days"},{"Unnamed: 0":37,"query":"APT28","text":"Adobe Patch Tuesday Updates Fix Only One Flash Player Flaw\r\n\nAdobe\u2019s Patch Tuesday updates for January 2018 resolve only an information disclosure vulnerability affecting Flash Player.\nThe flaw is tracked as CVE-2018-4871, it has been classified as \u201cimportant,\u201d and it has been assigned a priority rating of 2, which means it\u2019s unlikely to be exploited in malicious attacks any time soon.\nThe security hole has been described as an out-of-bounds read issue that can lead to information exposure. It affects Flash Player 28.0.0.126 and earlier on Windows, Mac, Linux and Chrome OS, and it has been patched with the release of version 28.0.0.137. The patch will also be included in the next Chrome release and Microsoft\u2019s Patch Tuesday updates.\nAdobe says it has learned about the vulnerability from an anonymous researcher via Trend Micro\u2019s Zero Day Initiative (ZDI).\nThe number of vulnerabilities discovered by researchers in Flash Player has dropped significantly in the past months after Adobe announced its intention to kill the application by 2020.\nHowever, malicious actors are still finding and exploiting zero-day vulnerabilities in Flash. In October, shortly after Adobe announced that it had no Patch Tuesday updates, the company was forced to quickly release a fix for Flash Player after learning that a cyber espionage group from the Middle East had been leveraging a zero-day to deliver spyware.\nThe same vulnerability was later exploited by the Russia-linked group APT28 (also known as Fancy Bear, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team) in attacks aimed at government organizations and aerospace companies. Fortunately, this was apparently the only Flash Player zero-day exploited in 2017.\nRelated: Adobe Accidentally Posts Private PGP Key\nRelated: Adobe Patches Two Critical Flaws in Flash Player\nRelated: Adobe Patches 'Business Logic Error' in Flash Player","url":"https:\/\/www.securityweek.com\/adobe-patch-tuesday-updates-fix-only-one-flash-player-flaw"},{"Unnamed: 0":38,"query":"APT28","text":"Adobe Patches Flash Zero-Day Exploited by Pawn Storm\r\n\nAdobe has released Flash Player updates to address the zero-day vulnerability exploited by the Russia-linked Pawn Storm threat group in attacks aimed at Foreign Affairs Ministries.\nAdobe initially planned on releasing a patch this week, but the company managed to roll out a fix sooner than anticipated. Flash Player 19.0.0.226 for Mac and Windows, and Flash Player 11.2.202.540 for Linux patch the vulnerability exploited in targeted attacks (CVE-2015-7645) and a couple of other type confusion flaws that could lead to arbitrary code execution (CVE-2015-7647, CVE-2015-7648).\nTrend Micro threats analyst Peter Pi was credited by Adobe for finding and analyzing the zero-day exploited in the wild, while Natalie Silvanovich of Google Project Zero was credited for analyzing the resolved issues.\nPawn Storm used the zero-day to target Foreign Affairs Ministries from across the world. The attackers lured victims to websites containing the Flash Player exploit using spear-phishing emails. Once the exploit was successful, a variant of the Sednit malware, which is often used by Pawn Storm, was dropped onto the victim\u2019s machine.\nThe Pawn Storm cyber espionage group (also known APT28, Sednit, Fancy Bear, Sofacy and Tsar Team) has been around since at least 2007. The threat actor has targeted numerous military, government, and defense organizations, including NATO members and the White House.\nIn a blog post detailing CVE-2015-7645, Pi noted that this is the first Flash Player zero-day exploited in the wild after Adobe introduced in July a series of mitigations. The mitigation techniques, developed in collaboration with Google Project Zero, are designed to prevent attacks leveraging \u201cVector\/<*>\u201d exploits.\nThe introduction of the mitigations led to a decrease in the number of attacks, but the latest incident has demonstrated that attackers haven\u2019t given up.\nWhile Adobe classifies CVE-2015-7645 as a type confusion vulnerability, Trend Micro\u2019s Pi says this is a new type of flaw that the security firm calls \u201cmethod confusion.\u201d The weakness exists in the writeObject method of the ByteArray object.\n\u201cThe [analyzed] sample overwrote the length field of a ByteArray-based object to 0Xfffffff6. [The attackers] used this to read and write into arbitrary memory locations. The Vector.<*> mitigations are of no use here as the ByteArray length is not protected,\u201d Pi explained. \u201cAttackers need not rely on targeting Vector.<*> for exploits in the future. As this attack has shown, there are other objects that can be used (or abused) by attackers. Adobe should protect the ByteArray length and other objects that have the length property.\u201d","url":"https:\/\/www.securityweek.com\/adobe-patches-flash-zero-day-exploited-pawn-storm"},{"Unnamed: 0":39,"query":"APT28","text":"Hackers Target Czech Foreign Ministry's Email System\r\n\nPrague - The Czech foreign minister said Tuesday his office had fallen prey to hackers who worked their way into the email accounts of dozens of employees including himself.\n\"Since early January we have known one of the attacks was partly successful as the hackers managed to penetrate the email system of the ministry,\" Lubomir Zaoralek told reporters.\nHe added however that no classified information was compromised as hackers failed to get into the ministry's inner system.\n\"The data leak was considerable. The attack was very sophisticated,\" Zaoralek said.\n\"It must have been carried out from the outside, by another country. The way it was done bears a very strong resemblance to the attacks on the US Democratic Party's internet system,\" said the foreign minister, citing experts.\nIn July 2016, the Democratic National Committee faced a leak of e-mails that Hillary Clinton's campaign blamed on Russia.\nIn early January, US intelligence said Russian President Vladimir Putin had ordered a campaign of hacking and media manipulation aimed at undermining Clinton's presidential campaign and boosting Donald Trump.\nLast October, Czech police arrested a Russian hacker in Prague in cooperation with the FBI and accused him of staging cyber attacks on the United States.\nThe hacker is in custody in the Czech Republic pending extradition to the United States or Russia as both countries have asked Prague to hand over the suspect.\nIn neighboring Poland, the Rzeczpospolita daily reported Monday that a group of Russian hackers called APT28 had tried to attack local foreign ministry servers in December through emails pretending to be sent by the NATO secretary general.\nThis group, also known as Pawn Storm, Sofacy and Fancy Bears, is believed to be behind other high-profile cyber attacks and to be linked to Russia's security services.","url":"https:\/\/www.securityweek.com\/hackers-target-czech-foreign-ministrys-email-system"},{"Unnamed: 0":40,"query":"APT28","text":"Windows Zero-Day Exploited in Attacks Aimed at Middle East\r\n\nOne of the vulnerabilities patched by Microsoft with its latest Patch Tuesday updates is a Windows zero-day exploited by an advanced persistent threat (APT) group in attacks aimed at entities in the Middle East.\nThe flaw, tracked as CVE-2018-8453, has been described by Microsoft as a privilege escalation issue related to how the Win32k component of Windows handles objects in memory. An authenticated attacker can exploit the vulnerability to take control of an affected system.\nThe vulnerability was reported to Microsoft by Kaspersky Lab after one of the security firm's systems detected an exploitation attempt. Kaspersky said it had reported the vulnerability to Microsoft on August 17 \u2013 it's unclear why Microsoft waited so long to release a fix.\nAccording to Kaspersky, CVE-2018-8453 has been exploited by an APT group it tracks as FruityArmor. The exploit was executed by a malware installer for obtaining the privileges needed to gain persistence on the targeted system.\nThe security firm said FruityArmor created a high quality and reliable exploit that would work on as many versions of Windows as possible, including Windows 10.\nKaspersky has described the vulnerability as a use-after-free bug that is similar to CVE-2017-0263, a flaw patched by Microsoft back in May 2017 after it had been exploited by the Russia-linked threat actor known as APT28, Sofacy and Fancy Bear.\nHackers packaged the CVE-2018-8453 exploit in a malware installer that requires system privileges to deploy its payload. The payload has been described as a \"sophisticated implant used by the attackers for persistent access to the victims' machines.\"\nKaspersky has seen the exploit being used against less than a dozen targets located in the Middle East.\n\"So far, this campaign has been extremely targeted, affecting a very low number of victims in the Middle East region, probably persons of interest for the attackers. However, the victimology is not clear, especially with such a small number of victims involved,\" Kaspersky researchers explained.\nThe company determined that FruityArmor is likely behind these attacks after discovering a PowerShell backdoor that in the past was only used by this APT group. In addition, some of the command and control (C&C) domains used in the latest campaign were also involved in past FruityArmor operations.\nA blog post published early on Wednesday by Kaspersky contains technical details on the vulnerability and how it has been exploited by FruityArmor.\nThis is not the first time Kaspersky has come across a zero-day vulnerability exploited by FruityArmor. The hackers also exploited a Windows zero-day back in 2016, which Microsoft patched in October 2016 after being alerted by Kaspersky. At the time, the victims were researchers, activists and government-related individuals in Thailand, Iran, Algeria, Yemen, Saudi Arabia and Sweden.\n\"We believe that although FruityArmor\u00b4s activity has been slowly increasing during the last two years, the extremely targeted nature of the attacks helps them fly below the radar,\" Kaspersky said.","url":"https:\/\/www.securityweek.com\/windows-zero-day-exploited-attacks-aimed-middle-east"},{"Unnamed: 0":41,"query":"APT28","text":"Hackers Leak More Confidential Athlete Data\r\n\nThe hacker group calling itself Fancy Bears has leaked another batch of athlete medical records stolen from the systems of the World Anti-Doping Agency (WADA). The organization has confirmed the leak and again blamed Russia for the attack on its systems.\nEarlier this week, the Fancy Bears group, which claims to be affiliated with the Anonymous hacktivist movement, leaked the Rio Olympics test results and therapeutic use exemptions of several U.S. athletes who they accused of being unjustly allowed by the WADA to use banned substances. The list of affected athletes included gymnast Simone Biles, basketball player Elena Delle Donne, and tennis players Venus and Serena Williams, all of whom have denied any wrongdoing.\nThe hackers announced on Thursday a new round of leaks targeting a total of 25 athletes from the United States, United Kingdom, Denmark, Russia, Poland, Czech Republic, Romania and Germany.\n\u201cThe list of doping addicts includes not only the athletes of the top Olympic teams but also those who compete for other countries,\u201d the hackers said in a statement accompanying the leak. \u201cWe'll keep on telling the world about doping in elite sports. Stay tuned for new leaks.\u201d\nWADA has confirmed that the leaked files are genuine and pointed out that the information was obtained after hackers accessed the organization\u2019s Anti-Doping Administration and Management System (ADAMS) through compromised credentials obtained via email spear-phishing attacks.\nWADA insists that the Russia-linked cyberespionage group known as Fancy Bear, APT28, Pawn Storm, Sednit, Sofacy, Tsar Team and Strontium is behind the cyberattack. The organization reached this conclusion based on information provided by law enforcement and the timing of the attack.\n\u201cGiven this intelligence and advice [from law enforcement and IT security agencies], WADA has no doubt that these ongoing attacks are being carried out in retaliation against the Agency, and the global anti-doping system, because of our independent Pound and McLaren investigations that exposed state-sponsored doping in Russia,\u201d said Olivier Niggli, director general of WADA. \u201cWe condemn this criminal activity and have asked the Russian Government to do everything in their power to make it stop.\u201d\nRussia has repeatedly denied any involvement, but officials have complained about the lack of transparency and accused WADA of favoring some countries.\nNews of the WADA hack emerged in August. At the time, threat intelligence firm ThreatConnect published a blog post detailing the connection between this attack and the Russian threat group APT28.\nAPT28 is also believed to be responsible for the recent attacks on the U.S. Democratic Party. A hacktivist using the online moniker Guccifer 2.0 took credit for the Democratic Party breach, and while he claims to be a lone wolf from Romania, experts believe it\u2019s just a persona used by Russian intelligence to throw investigators off track.\nRelated: More Evidence Links Russia to DNC Attack","url":"https:\/\/www.securityweek.com\/hackers-leak-more-confidential-athlete-data"},{"Unnamed: 0":42,"query":"APT28","text":"Russian Cyberspies Accused of Attack on Olympics Anti-Doping Agency\r\n\n\nHackers Leak Athlete Medical Data From Olympics Anti-Doping Agency\nThe World Anti-Doping Agency (WADA) has officially pointed the finger at a Russian cyberespionage group for breaching its systems and leaking sensitive athlete data, including confidential medical records, but a hacktivist group has also taken credit for the attack.\nWADA hacked via password phishing\nWADA, a non-profit organization founded by the International Olympic Committee (IOC) and supported by national governments, informed stakeholders last month that malicious actors had registered two fake WADA domains which they had leveraged to phish credentials for the Anti-Doping Administration and Management System (ADAMS). Yuliya Stepanova, a whistleblower who exposed widespread doping in Russian athletics, was one of the victims of the attack.\nResearchers quickly found connections between the attack on WADA and the notorious Russia-linked threat actor known as Fancy Bear, APT28, Pawn Storm, Strontium, Sofacy, Tsar Team and Sednit.\nOn Tuesday, WADA published a statement confirming that a Russian spy group was behind the attack on its systems. The organization doesn\u2019t appear to have reached this conclusion on its own \u2013 it got the information from law enforcement authorities.\nWADA said the hackers used phished credentials to access athlete data, including test results from the Rio Games and Therapeutic Use Exemptions, some of which they published online.\n\u201cWADA condemns these ongoing cyber-attacks that are being carried out in an attempt to undermine WADA and the global anti-doping system,\u201d said Olivier Niggli, director general of WADA. \u201cLet it be known that these criminal acts are greatly compromising the effort by the global anti-doping community to re-establish trust in Russia further to the outcomes of the Agency\u2019s independent McLaren Investigation Report.\u201d\nRussian espionage or hacktivism?\nThe group that leaked the athlete data is calling itself \u201cFancy Bears\u2019 international hacking team\u201d and its website, fancybear.net, suggests that it\u2019s affiliated with the Anonymous hacktivist movement.\nThe hackers claim they have launched OpOlympics, a campaign whose goal is to show that famous athletes from the U.S. and other countries won medals at the Olympics by using substances banned by WADA. The group even accepts Bitcoin donations on its website.\nThe group has so far leaked test results and other medical documents on American athletes, including gymnast Simone Biles, basketball player Elena Delle Donne, and tennis players Venus and Serena Williams.\n\u201cAfter detailed studying of the hacked WADA databases we figured out that dozens of American athletes had tested positive,\u201d the hackers said. \u201cThe Rio Olympic medalists regularly used illicit strong drugs justified by certificates of approval for therapeutic use. In other words they just got their licenses for doping. This is other evidence that WADA and IOC's Medical and Scientific Department are corrupt and deceitful.\u201d\nBiles and Donne reacted to the data leak on Twitter, claiming they had been taking the WADA-banned substances for genuine medical conditions. The U.S. Anti-Doping Agency (USADA) also published a statement backing the claims of the affected athletes.\n\u201cThe athletes haven\u2019t [done anything wrong],\u201d said USADA CEO Travis T. Tygart. \u201cIn fact, in each of the situations, the athlete has done everything right in adhering to the global rules for obtaining permission to use a needed medication. The respective International Federations, through the proper process, granted the permission and it was recognized by the IOC and USADA.\u201d\nRussia has denied any involvement in the attack on WADA. However, it\u2019s worth noting that this is not the first time the country has been accused of a cyberattack for which \u201chacktivists\u201d take credit.\nWhen the U.S. Democratic Party\u2019s systems were breached this summer, experts immediately pointed the finger at the APT28\/Fancy Bear threat group, but a hacktivist using the online moniker \u201cGuccifer 2.0\u201d took credit for the attack. Now, evidence again seems to point at Russia and a hacktivist group calling itself \u201cFancy Bears\u2019 Hacking Team\u201d takes credit.\nIn the case of Guccifer 2.0, who has claimed to be Romanian, although he has failed to prove it, some researchers believe he is actually a personna used by cyberspies to throw investigators off track.\nRelated: More Evidence Links Russia to DNC Attack\nRelated: Evidence Links Russia to Second Democratic Party Hack","url":"https:\/\/www.securityweek.com\/russian-cyberspies-accused-attack-olympics-anti-doping-agency"},{"Unnamed: 0":43,"query":"APT28","text":"State Election System Hacking Linked to Previous Attacks\r\n\nResearchers have found links between the recent cyberattacks on U.S. state election systems and previous operations targeting political and government organizations in Turkey, Ukraine and Germany.\nA flash alert issued by the FBI last month warned about a couple of attacks targeting board of election systems in two U.S. states. While the agency did not name the states, they are believed to be Illinois and Arizona, both of which shut down their voter registration systems this summer following cyberattacks.\nThe FBI\u2019s report included a list of IP addresses and penetration testing tools used by the attackers in their operations.\nUnnamed U.S. officials told the press that the attacks were conducted by Russia, just like the recent campaigns targeting the U.S. Democratic Party and the World Anti-Doping Agency (WADA).\nResearchers at threat intelligence firm ThreatConnect have analyzed the IP addresses disclosed by the FBI and determined that one of them was previously used in spear-phishing campaigns aimed at the Justice and Development (AK) Party in Turkey, the Freedom Party in Germany, and the Ukrainian Parliament.\nThe phishing campaigns, conducted between March and August 2016, leveraged an open source phishing framework named Phishing Frenzy. Researchers managed to access the attackers\u2019 control panel and discovered a total of 113 emails written in Ukrainian, Turkish, German and English.\nOf these emails, 48 were typical phishing emails targeting Gmail accounts, while the rest were specifically designed to capture the attention of the recipient by purporting to come from an affiliate or an organization of interest.\nSome of the AK Party members targeted with the spear phishing emails also show up in the recent WikiLeaks dump of nearly 300,000 AK Party emails, but experts have not been able to determine if the two incidents are connected.\nIn addition to links to previous attacks, ThreatConnect discovered some connections to Russia and operations believed to be sponsored by the Russian government. One of the domains hosting the phishing pages was registered with an email address associated with a domain known to be used by the Russian threat actor Fancy Bear, aka APT28, Pawn Storm, Sednit, Sofacy and Tsar Team.\nWhile researchers have not found any direct links to the Russian government or a known Russian state-sponsored actor, circumstantial evidence seems to point at Russia.\nFirst of all, intelligence collected from the targeted organizations could be highly useful for Russia\u2019s diplomatic relations and military efforts. As for more technical evidence, experts discovered that six of the eight IP addresses disclosed by the FBI belong to a Russian hosting service, and one of them had previously hosted a Russian cybercrime market.\nSome of the IPs are owned by a company called FortUnix Networks. This firm\u2019s infrastructure was also leveraged in BlackEnergy attacks targeting the Ukrainian power grid last year.\nAnother piece of evidence is related to the penetration testing tools described in the FBI flash alert. Some of the tools were previously used by Anonymous Poland, a group that recently leaked files from the anti-doping agency WADA. The attackers claim to be hacktivists, but researchers suspect they might be a creation of a Russian APT that wants to hide its tracks.\nRelated: Pawn Storm Group Targets Turkey\nRelated: German Spy Service Says Russia Behind Major Cyber Attacks","url":"https:\/\/www.securityweek.com\/state-election-system-hacking-linked-previous-attacks"},{"Unnamed: 0":44,"query":"APT28","text":"FBI Attribution of 'VPNFilter' Attack Raises Questions\r\n\nInformation shared by the FBI on the massive VPNFilter attack in which more than half a million devices have been compromised raises some interesting questions about the connection between Russia-linked hacker groups.\nThe existence of VPNFilter was brought to light last week by Cisco Talos and several other cybersecurity firms. The botnet is powered by at least 500,000 hacked routers and network-attached storage (NAS) devices across 54 countries.\nThe malware can intercept data passing through the compromised device, it can monitor the network for communications over the Modbus SCADA protocol, and also has destructive capabilities that can be leveraged to make an infected device unusable.\nMany of the hijacked devices are located in Ukraine and a separate command and control (C&C) infrastructure has been set up for devices in this country. Researchers also spotted code similarities to the BlackEnergy malware and pointed out that there are only a few weeks until Ukraine celebrates its Constitution Day, which last year coincided with the destructive NotPetya attack. All this has led experts to believe that VPNFilter may mean Russia is preparing for a new attack on Ukraine.\nShortly after security firms published technical details on the attack, the U.S. Department of Justice announced that the FBI had seized toknowall.com, one of the C&C domains utilized by VPNFilter.\nA press release and court documents name the Russia-linked threat actor Sofacy as being behind the attack. While this is not surprising, one noteworthy piece of information is that U.S. authorities say Sofacy is also known as APT28, Pawn Storm, Fancy Bear, Sednit, X-Agent, and Sandworm.\nSandworm, also tracked by some security companies as TeleBots, is a threat actor known to use the BlackEnergy malware in attacks aimed at industrial systems and it\u2019s believed to be responsible for the 2015 power outage in Ukraine. However, Sandworm was until now seen as a separate group from Sofacy.\nSecurityWeek has reached out to the Justice Department and the FBI for clarifications, but the organizations say they \u201cdo not have a comment outside what is included in the DOJ press release.\u201d\nIndustry professionals, however, have offered some possible explanations as to why the FBI may see Sofacy and Sandworm as the same group.\n\u201cSandworm is a similar team whose interests overlap with APT 28. We believe these actors are related and act accordingly,\u201d Craig Williams, director of outreach with Cisco Talos, told SecurityWeek.\nVikram Thakur, principal research manager at Symantec Security Response, noted, \u201cThe intelligence community has the best shot at attributing attacks to individuals and organizations. Every security vendor groups attackers based on their own vantage into the attack landscape.\n\u201cKeeping in mind that attack groups themselves share knowledge, expertise, and resources, we don\u2019t have any reason to question the grouping of Sofacy, Sandworm, X-Agent, and others that the FBI listed in their affidavit to seize a domain related to VPNFilter.\u201d\nResearchers at Kaspersky also found it curious that the FBI suggested Sandworm and Sofacy were one and the same.\n\u201cThis would suggest that Sandworm, also known as BlackEnergy APT, is regarded as subgroup of Sofacy by the FBI,\u201d Kaspersky researchers said. \u201cMost threat intel companies have held these groups separate before, although their activity is known to have overlapped in several cases.\u201d\nAdvice from the FBI and targeted device vendors\nRebooting a router is typically enough to remove a piece of malware from the device. However, VPNFilter has some clever persistence mechanisms that help its stage 1 component survive a reboot.\nAn alert issued on Friday by the FBI advises owners of small office and home office routers to reboot their devices to \u201ctemporarily disrupt the malware and aid the potential identification of infected devices.\u201d\n\u201cOwners are advised to consider disabling remote management settings on devices and secure with strong passwords and encryption when enabled. Network devices should be upgraded to the latest available versions of firmware,\u201d the FBI said.\nThe VPNFilter malware has been observed targeting devices from Linksys, MikroTik, Netgear, TP-Link and QNAP. All of these vendors have published advisories to warn their customers about the threat.\nThere is no evidence that the malware exploits any zero-day vulnerabilities to hack devices. Affected vendors noted that the flaws targeted by VPNFilter have already been patched and advised customers to update the firmware on their devices.\nRelated: Sofacy Attacks Overlap With Other State-Sponsored Operations","url":"https:\/\/www.securityweek.com\/fbi-attribution-vpnfilter-attack-raises-questions"},{"Unnamed: 0":45,"query":"APT28","text":"More Evidence Links Russia to DNC Attack\r\n\nSeveral security firms have found evidence that the recent attacks against the Democratic National Committee (DNC), the formal governing body for the U.S. Democratic Party, were launched by Russia-linked threat groups.\nThreat intelligence firm CrowdStrike, which assisted the DNC\u2019s investigation and cleanup efforts, reported last week that its incident response team uncovered evidence tying the attacks to two previously known advanced persistent threat (APT) groups.\nOne of the groups is Russia-linked Cozy Bear, which is also known as CozyDuke and APT29. The actor is believed to have breached the DNC\u2019s networks as far back as the summer of 2015 using an implant dubbed \u201cSeaDaddy\u201d and a PowerShell backdoor.\nThe second group, also believed to be operating from Russia, is Fancy Bear, aka APT28, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team. The actor reportedly targeted the DNC in a separate attack in April 2016 using a piece of malware dubbed X-Agent and a network tunneling tool called X-Tunnel.\nCrowdStrike said it did not see any evidence that Fancy Bear and Cozy Bear had been collaborating or that they had known about each other\u2019s operation.\nShortly after the security firm made its findings public, a hacker using the online moniker \u201cGuccifer 2.0\u201d took credit for the attack and started leaking documents stolen from the DNC. The hacker mocked CrowdStrike for reporting that the attack was carried out by sophisticated groups and claimed that it was \u201cvery easy\u201d for him to breach the organization\u2019s systems.\n\u201cGuccifer\u201d is the nickname first used by 44-year-old Romanian national Marcel Lazar Lehel, who has been extradited to the United States after hacking the online accounts of several celebrities and politicians, including the email server used by presidential candidate Hillary Clinton.\nGuccifer 2.0 has set up a WordPress website and a Twitter account, which he has been using to release documents allegedly stolen from the DNC. On Monday, he threatened to leak a \u201cdossier on Hillary Clinton\u201d taken from DNC servers.\nHowever, CrowdStrike is not the only security firm to point the finger at Russian government-backed actors for the attack on the DNC. Fidelis has conducted an independent investigation of the malware leveraged by hackers and confirmed CrowdStrike\u2019s findings.\n\u201cBased on our comparative analysis we agree with CrowdStrike and believe that the COZY BEAR and FANCY BEAR APT groups were involved in successful intrusions at the DNC. The malware samples contain data and programing elements that are similar to malware that we have encountered in past incident response investigations and are linked to similar threat actors,\u201d Fidelis said.\nThreatConnect has analyzed one of the domains used by attackers for command and control (C&C) and discovered additional links to Fancy Bear.\nIn March, the SecureWorks Counter Threat Unit (CTU), which tracks Fancy Bear as Threat Group-4127 (TG-4127), observed a spear-phishing campaign that leveraged Bit.ly shortened links to target email accounts connected to the upcoming presidential election in the United States, including accounts belonging to individuals working for or associated with Hillary Clinton\u2019s campaign and the DNC.\n\u201cCTU researchers do not have evidence that these spearphishing emails are connected to the DNC network compromise that was revealed on June 14. However, a coincidence seems unlikely, and CTU researchers suspect that TG-4127 used the spearphishing emails or similar techniques to gain an initial foothold in the DNC network,\u201d SecureWorks researchers said.\nAn analysis of the documents leaked by Guccifer has shown that the individual might be based in Russia, and experts have pointed out several reasons why Russia could benefit from the hack.\nWhile it\u2019s possible that Guccifer 2.0 has nothing to do with the cyberspy groups, experts believe the persona might have been set up by Russian intelligence in an effort to throw investigators off track. CrowdStrike said it stands by its analysis and findings.\n\u201cWhether or not this posting is part of a Russian Intelligence disinformation campaign, we are exploring the documents\u2019 authenticity and origin. Regardless, these claims do nothing to lessen our findings relating to the Russian government\u2019s involvement, portions of which we have documented for the public and the greater security community,\u201d the company said.","url":"https:\/\/www.securityweek.com\/more-evidence-links-russia-dnc-attack"},{"Unnamed: 0":46,"query":"APT28","text":"UK, Australia Blame Russia for Bad Rabbit, Other Attacks\r\n\nThe United Kingdom and Australia have officially blamed Russia for several high profile attacks, including the Bad Rabbit ransomware campaign.\nA statement published by the U.K. government on Wednesday reveals that the country\u2019s National Cyber Security Centre (NCSC) has linked several cyber threat actors to Russia\u2019s GRU military intelligence service.\nThe NSCS believes that the GRU is behind the groups tracked by various security firms as APT28, Fancy Bear, Pawn Storm, Sofacy, Sednit, Cyber Caliphate, Cyber Berkut, BlackEnergy, Voodoo Bear, Strontium, Tsar Team and Sandworm. While many of these names represent the same threat actor, the line between the operations carried out by various Russian groups often gets blurred, as shown by the recent VPNFilter attack.\nThe NCSC says that the GRU is \u201calmost certainly\u201d responsible for the Bad Rabbit ransomware attack in October 2017, the August 2017 attack on the World Anti-Doping Agency (WADA), the 2016 attack on the U.S. Democratic National Committee (DNC), and an attack on a small TV station in the UK in the summer of 2015. It\u2019s worth noting that the U.S. has previously accused Russia of election-related hacks and even charged 12 intelligence officers.\n\u201cThe GRU\u2019s actions are reckless and indiscriminate: they try to undermine and interfere in elections in other countries; they are even prepared to damage Russian companies and Russian citizens. This pattern of behaviour demonstrates their desire to operate without regard to international law or established norms and to do so with a feeling of impunity and without consequences,\u201d said British Foreign Secretary Jeremy Hunt. \u201cOur message is clear: together with our allies, we will expose and respond to the GRU\u2019s attempts to undermine international stability.\u201d\nThe Australian government has accused Russia\u2019s GRU for the same attacks, but admitted that Australia itself was not significantly impacted by any of the campaigns.\n\u201cCyberspace is not the Wild West. The International Community \u2013 including Russia \u2013 has agreed that international law and norms of responsible state behaviour apply in cyberspace. By embarking on a pattern of malicious cyber behaviour, Russia has shown a total disregard for the agreements it helped to negotiate,\u201d reads a statement from Australia\u2019s prime minister and minister of foreign affairs.\nAustralia says there must be consequences for these types of actions and public attribution is only the first step.\n\u201cIt is unprecedented that the government should so overtly point the finger directly at the GRU. They must be very confident of their facts, either due to some sort of technical \u2018fingerprint\u2019 in the attack vectors themselves, or perhaps through corroboration from various other intelligence sources,\u201d Malcolm Taylor, Director Cyber Advisory at ITC Secure and a former senior British intelligence officer, told SecurityWeek.\n\u201cBut I think it\u2019s also important to consider who benefits from attacks against these specific targets - WADA, Ukraine and the West in general. The answer to that question of course includes, and may indeed be limited to, Russia and Russian foreign policy interests. The mention of western businesses as targets should also be a reminder that foreign intelligence services do engage in commercial cyber espionage and we all need to take appropriate steps to manage that risk,\u201d Taylor added.\nRelated: Australia, Canada, Others Blame North Korea for WannaCry Attack\nRelated: US Accuses Russian Government of Hacking Infrastructure\nRelated: Norway Accuses Russia of Cyberattack","url":"https:\/\/www.securityweek.com\/uk-australia-blame-russia-bad-rabbit-other-attacks"},{"Unnamed: 0":47,"query":"APT28","text":"Experts Doubt Russia Used Malware to Track Ukrainian Troops\r\n\nExperts have cast doubt on a recent report claiming that hackers linked to a Russian military intelligence agency used a piece of Android malware to track Ukrainian artillery units.\nA report published by threat intelligence firm CrowdStrike before Christmas revealed that the Russia-linked cyberespionage group known as Fancy Bear (aka APT28, Pawn Storm, Sofacy, Tsar Team, Strontium and Sednit) modified a legitimate Android app used by the Ukrainian military.\nSpecifically, researchers found an Android version of X-Agent, a piece of malware known to be used by Fancy Bear, embedded in an app developed by artillery officer Yaroslav Sherstuk to help military personnel reduce the time to fire D-30 howitzers.\nAccording to CrowdStrike, the malicious app, which had been distributed on Ukrainian military forums from late 2014 through 2016, was capable of accessing contact information, SMS messages, call logs and Internet data. The security firm believes these capabilities could have allowed Russia to track Ukrainian troops via the app.\nCrowdStrike also pointed to a report claiming that Ukraine had lost many D-30 guns in the past years, and speculated that this cyber operation may have contributed to those losses. Based on its investigation, the company is confident that Fancy Bear is connected to the Russian military, particularly the GRU foreign military intelligence agency.\nSherstuk has called CrowdStrike\u2019s report \u201cdelusional\u201d and pointed out that the app is not open source. He says the application has been under his control and he personally oversees the activation of each installation.\nJeffrey Carr, CEO of Taia Global and founder of the Suits and Spooks conference, has analyzed CrowdStrike\u2019s report and, after contacting several other experts, he determined that the security firm\u2019s arguments are flawed.\nAccording to Carr, while X-Agent may be used by Fancy Bear, the malware is not exclusive to the group. The X-Agent source code appears to have been obtained by several entities, including Ukrainian hacktivist Sean Townsend and the security firm ESET.\nThe X-Agent variant found in the Ukraine military app has also been analyzed by Crysys, the Hungary-based security firm that has investigated several sophisticated pieces of malware, including Duqu. Researchers have found similarities between X-Agent implants described in previous Fancy Bear reports and the version found in the Ukrainian military app, but they pointed out that such similarities can be faked by threat actors.\nAnother interesting discovery is that the rogue app does not use GPS to obtain the infected device\u2019s exact location, which Carr names \u201ca surprising design flaw for custom-made malware whose alleged objective was to collect and transmit location data on Ukrainian artillery to the GRU.\u201d\nWhile the malware can collect some location data via the base stations used by the infected Android device, Carr believes it\u2019s not enough to track someone, especially given Ukraine\u2019s poor cellular service.\nCrowdStrike said it had obtained the information on D-30 howitzer losses from the International Institute for Strategic Studies (IISS), but as VOA pointed out, the loss estimates actually come from a pro-Russia website that published its own interpretation of some IISS reports.\nPavlo Narozhnyy, a technical adviser to Ukraine\u2019s military, told VOA that he doubts the D-30 app can be hacked, and he claimed that none of the app\u2019s users reported any D-30 howitzer losses.\nCarr also highlighted that the malware-infected app may have not actually made it onto a single Ukrainian soldier\u2019s Android device, considering that each user needed to contact Sherstuk personally to obtain an activation code.\n\u201cCrowdstrike never contacted the app\u2019s developer to inform him about their findings. Had they performed that simple courtesy, they might have learned from Jaroslav Sherstuk how improbable, if not impossible, their theory was,\u201d Carr said. \u201cInstead, they worked inside of their own research bubble, performed no verification of infected applications or tablets used by Ukraine\u2019s artillery corps, and extrapolated an effect of 80% losses based upon a self-proclaimed, pro-Russian propagandist and an imaginary number of infected applications.\u201d\nCrowdStrike stands by its findings and is confident that the military app has been hacked by the Fancy Bear group.","url":"https:\/\/www.securityweek.com\/experts-doubt-russia-used-malware-track-ukrainian-troops"},{"Unnamed: 0":48,"query":"APT28","text":"Microsoft Patches Windows Zero-Day Exploited by Russian Hackers\r\n\nThe 14 security bulletins released on Tuesday by Microsoft address many serious issues, including a couple of Windows vulnerabilities actively exploited by malicious actors and bugs for which exploits are already publicly available.\nOne of the zero-days has been patched with MS16-135, a bulletin rated important. MS16-135 fixes two information disclosure and three privilege escalation flaws, one of which is a Windows kernel bug exploited in attacks by a Russia-linked cyber espionage group to elevate privileges and escape the browser sandbox.\nThe zero-day, tracked as CVE-2016-7255, was reported to Microsoft by Google researchers on October 21 and it was disclosed by the search giant ten days later. Google typically gives vendors a few months to patch vulnerabilities, but the deadline is only 7 days for flaws exploited in the wild.\nWhile Google decided that it would be in the best interest of users to disclose the vulnerability, Microsoft disagreed and criticized the company for putting its customers at risk. Microsoft said the vulnerability had been exploited in a low-volume spear-phishing campaign by the threat group known as Pawn Storm, APT28, Fancy Bear, Sednit, Sofacy and Tsar Team.\nThe vulnerability affects Windows Vista through Windows 10 Anniversary Update, but new mitigations prevent exploitation against the latter. The same attacks also leverage a Flash Player vulnerability that Adobe patched on October 26.\nThis is not the only zero-day vulnerability patched by Microsoft on Tuesday. The critical security bulletin MS16-132 addresses several issues related to the Windows Media Foundation, the Windows Animation Manager and OpenType fonts, including a remote code execution vulnerability (CVE-2016-7256) caused due to the way the Windows font library handles specially crafted embedded fonts.\nThe vulnerability has been exploited in the wild, but Microsoft has not shared any details on these attacks. The company said the flaw can be exploited via specially crafted websites or documents that victims must open in order to trigger the exploit.\nMicrosoft also patched a couple of vulnerabilities that have not been exploited in the wild, but for which exploits are publicly available. This includes a browser information disclosure vulnerability (CVE-2016-7199) and an Edge spoofing flaw (CVE-2016-7209) \u2013 both fixed with MS16-129.\nOther critical security bulletins resolve various Windows vulnerabilities, including issues affecting Video Control, the Input Method Editor (IME) and the Task Scheduler. Important bulletins fix security holes in the Windows Virtual Hard Disk Driver, SQL Server, Windows authentication methods, the Windows kernel, Secure Boot, the Windows Common Log File System (CLFS) driver, and Office.\nAdobe also released security updates this Patch Tuesday. The company addressed one vulnerability in Connect for Windows and nine arbitrary code execution flaws in Flash Player. The Flash Player issues have also been patched in Internet Explorer and Edge with the MS16-141 critical bulletin.\nRelated: Microsoft Edge Tops Browser Protection Tests\nRelated: Microsoft Delays Retirement of EMET","url":"https:\/\/www.securityweek.com\/microsoft-patches-windows-zero-day-exploited-russian-hackers"},{"Unnamed: 0":49,"query":"APT28","text":"Pawn Storm Group Targets Turkey\r\n\nPawn Storm, the cyber espionage group linked by some researchers to Russia, has recently started targeting government and news organizations in Turkey, Trend Micro reported on Monday.\nThe economic and politically-motivated threat actor, which has been active for the past decade, is also known as APT28, Sednit, Sofacy, Fancy Bear and Tsar Team. The group has focused its activities on individuals and military, government, media and defense organizations from across the world, including Ukraine, Poland, Russia, the United States, and various NATO member countries. The list of known targets also includes governments in Europe, Asia and the Middle East.\nTrend Micro recently discovered that Turkey has also been added to Pawn Storm\u2019s list of targets. More precisely, starting with mid-January and until late February, the group was spotted attacking the Turkish government\u2019s Directorate General of Press and Information, the country\u2019s Grand National Assembly, the newspaper H\u00fcrriyet, and the Prime Minister\u2019s Office (Ba\u015fbakanl\u0131k).\nExperts noted that if Pawn Storm is really a Russian group, it would make sense for it to target Turkey. Russia could have an interest in Turkey for several reasons, including the incident in which Turkey shot down a Russian warplane in the Turkey-Syria border area, disputes related to Kurdish groups, and refugees entering Europe via Turkey.\nIn one attack against Turkey, Pawn Storm set up fake Outlook Web Access (OWA) servers in order to gain access to sensitive information. The cyber-espionage actor is known for using this technique, including in attacks aimed at defense companies in the U.S. and organizations tasked with investigating the crash of Malaysia Airlines Flight MH17.\n\u201cPhishing attacks against OWA users are relatively inexpensive for the attackers, but can be highly effective to steal sensitive information,\u201d Trend Micro senior threat researcher Feike Hacquebord explained in a blog post.\nSimilar to other Pawn Storm targets, Turkey could also be perceived as a threat to Russia. Experts believe the latest attacks are related to previous operations targeting the Syrian opposition and Arab countries that criticized Russia\u2019s intervention in Syria.\n\u201cThe target list above shows that Pawn Storm may be after political information from Turkey: even the Turkish parliament got attacked. The fact they have set up at least two fake OWA servers for one of the largest Turkish newspapers may also be considered as further proof that they are also after information on what is going on in major media outlets in that country,\u201d Hacquebord noted.\nTrend Micro said it managed to warn Turkish authorities about the attacks, allowing them to take action before too much damage was caused.\nIn the operation aimed at Turkey, the cyber espionage group leveraged infrastructure provided by a company in the Netherlands, whose services had been previously used by several other threat actors, including Carbanak cybercriminals and the Gaza cybergang.\nRelated: Fysbis Backdoor Preferred by Pawn Storm Group to Target Linux\nRelated: Oracle Patches Java Zero-Day Exploited by Pawn Storm Attackers","url":"https:\/\/www.securityweek.com\/pawn-storm-group-targets-turkey"},{"Unnamed: 0":50,"query":"APT28","text":"'Macronleaks': Hackers Find Flaw in French Cyber-Fortress\r\n\nThey knew months ago that top-of-the-range hackers had been targeting them. They believe their security measures, too, had been nothing short of top-rate. But, in the end, French presidential candidate Emmanuel Macron's team got hacked.\nAnd on Friday night, just an hour before the end of official campaigning, thousands of documents including emails and accounts belonging to his En Marche! (On the Move!) movement were dumped online.\n\"It's just incredible what's happening,\" said Belgian researcher Nicolas Vanderbiest, a specialist on online rumours, whose map showing how the \"Macron Leak\" propagated on Twitter has Wikileaks at the centre.\nMacron's campaign team says it put in place servers protected by sophisticated software filters, recommended the use of several encrypted messaging and cellphone networks, and required double and triple authentication to access emails.\nIt says it stored its information in multiple-partitioned cells, with databases separated like fortresses, accessible by passwords that were complex and regularly changed.\nBut a squad of shadowy hackers seem to have found the back door.\n\"In this kind of organisation the real potential faultline is the human element,\" the head of computer services for En Marche! recently told AFP, requesting anonymity.\nBecause security procedures can become long and cumbersome, some people can be tempted to get around them by using personal email services which are little or badly protected.\n- 'en-nnarche.com' -\nOn April 25, a report by Japanese cyber-security company Trend Micro, blamed a so-called \"phishing\" attack targetting the Macron campaign on Russian hacking group Pawn Storm, also known as Fancy Bears, Tsar Team and APT28.\nThe group, suspected of close links to the Russian security services, is also accused of having targetted the Democratic Party during last year's US presidential election, in which Republican-backed Donald Trump defeated Democrat Hillary Clinton.\nIn this kind of attack, which does not require sophisticated resources, hackers can open up security gaps in software, for example during an update or through a so-called mirror site.\nThis would be something like \"en-nnarche.com\", hoping that a user when reading quickly would mistake the \"nn\" for an \"m\" and fall into the trap, revealing access codes.\nThe principle of phishing, a classic arm in the hackers' arsenal, is to send a large number of fake emails often containing infected attachments, hoping that a distracted recipient will click on one, creating a breach in the targetted system.\nThe gap is unlikely to show up immediately, and the loophole it generates may be exploited weeks or months later.\nThe Macron campaign reacted swiftly to Friday night's data dump, saying it would take all measures necessary to shed light on the \"unprecedented\" incident.\nBut it did not seem overly worried by the substance of what had been leaked.\n\"Throughout the campaign, En Marche! has constantly been the party the most targeted by such attempts, in an intense and repeated fashion,\" it said in a lengthy statement.\n\"The aim of those behind this leak is, all evidence suggests, to hurt the En Marche! party. Clearly, the documents arising from the hacking are all lawful and show the normal functioning of a presidential campaign.\"\nSenator Bazira Khiari, a national delegate for En Marche!, told AFP Saturday morning: \"We were informed last night... \u00a0We were just told to change our passwords\".","url":"https:\/\/www.securityweek.com\/macronleaks-hackers-find-flaw-french-cyber-fortress"},{"Unnamed: 0":51,"query":"APT28","text":"German Spy Service Says Russia Behind Major Cyber Attacks\r\n\n'Evidence' Russia Behind Cyber Attacks in Germany: Secret Service\nGermany's domestic secret service said Friday it had evidence that Russia was behind a series of cyber attacks, including one that targeted the German parliament last year.\nThe operations cited by the BfV intelligence agency ranged from an aggressive attack called Sofacy or APT 28 that hit NATO members and knocked French TV station TV5Monde off air, to a hacking campaign called Sandstorm that brought down part of Ukraine's power grid last year.\n\"Cyberspace is a place for hybrid warfare. It opens a new space of operations for espionage and sabotage,\" said Hans-Georg Maassen, who heads the BfV agency.\n\"The campaigns being monitored by the BfV are generally about obtaining information, that is spying,\" he said. \"However, Russian secret services have also shown a readiness to carry out sabotage.\"\nGermany itself fell victim to one of these rogue operations, with the Sofacy attack last year hitting the German lower house of parliament.\nChancellor Angela Merkel's CDU party confirmed it had been targeted in April, adding that \"we have adapted our IT infrastructure as a result\".\nThe BfV said the \"cyber attacks carried out by Russian secret services are part of multi-year international operations that are aimed at obtaining strategic information.\"\n\"Some of these operations can be traced back as far as seven to 11 years.\" \u00a0\nGovernment, military, media\nIT experts believe that Sofacy or APT 28 is a so-called phishing tool of the broader Operation Pawn Storm, that has been blamed for targeting NATO and the US government and military as well as Ukrainian activists and Russian dissidents.\nThe operation included the attempted hacking of the Dutch Safety Board's computer systems by Russian spies seeking to access a sensitive final report into the July 2014 shooting down of flight MH17 over Ukraine, according to security experts Trend Micro.\nIt also hit France's TV5Monde television channel last April, shutting down transmissions and placing jihadist propaganda messages on the station's website, Facebook and Twitter accounts.\nThe station had initially focused investigations on the IS group, after the perpetrators claimed to be members of the jihadist organisation.\nBut in June, a French judicial source put the blame on Russian hackers.\n\"Sandworm\" meanwhile refers to a group of hackers who deploy the malware known as Black Energy and KillDisk through phishing emails.\nBfV said Sandworm targeted not just government posts, but \"was also aimed at telecommunications companies, energy providers as well as higher education facilities\".\nThe West has been boosting resources and tightening cooperation to fight the mounting threat of international cyber attacks, with cyber defence designated as a core NATO task.\n*Updated","url":"https:\/\/www.securityweek.com\/evidence-russia-behind-cyber-attacks-germany-secret-service"},{"Unnamed: 0":52,"query":"APT28","text":"Sofacy Threat Group Targets US Government\r\n\nThe Sofacy threat group has been spotted sending a spear phishing email to a United States government agency from an apparently compromised email account belonging to a government organization in a different country.\nSofacy is a Russia-linked cyber espionage group that is also known as Pawn Storm, APT28, Sednit, Fancy Bear and Tsar Team. According to Palo Alto Networks\u2019 Unit 42 research team, the threat actor recently attempted to deliver a piece of malware to an unnamed U.S. government organization.\nThe email carrying the malware came from an email address belonging to the Ministry of Foreign Affairs of a different country. Since the email address did not appear to be spoofed, experts believe the attackers likely compromised the email account or a host within the government organization.\nThe email, titled \u201cFW: Exercise Noble Partner 2016,\u201d carried an RTF file designed to exploit an Office vulnerability patched by Microsoft in April 2015 (CVE-2015-1641) to deliver what researchers call a Carberp-based variant of the Sofacy Trojan. Sofacy has been known to use leaked Carberp source code in the development of its malware.\nWhen the RTF file is opened, CVE-2015-1641 is exploited and two files are dropped \u2013 btecache.dll and svchost.dll. The first file, the loader, is designed to execute the second file, which is the actual Trojan. Researchers pointed out that unlike in other attacks, in this case, no decoy documents are dropped or displayed.\nPalo Alto Networks noticed that a new persistence tactic was used in this attack. The registry key that is created for persistence is set up to run the malware only when the victim opens a Microsoft Office application, instead of launching it directly at system startup.\n\u201cThis is the first time Unit 42 has seen the Sofacy group, or any other threat group for that matter, use this tactic for persistence purposes,\u201d researchers noted in a blog post. \u201cAn added benefit for the threat actor to using this specific tactic for persistence is that it requires user interaction to load and execute the malicious payload, which can cause challenges for detection in automated sandboxes.\u201d\nThe document attached to the spear phishing email targeting the U.S. government entity referenced a joint military training exercise that took place in May between Georgia and the United States. Researchers also reported seeing documents referencing the Russian military \u2013 these had been used in attacks against Poland.\nSofacy has been known to target organizations from all around the world. The threat group was recently observed attacking the Christian Democratic Union of Germany, the political party of Chancellor Angela Merkel, and various media and government organizations in Turkey.\nRelated: Fysbis Backdoor Preferred by Pawn Storm Group to Target Linux","url":"https:\/\/www.securityweek.com\/sofacy-threat-group-targets-us-government"},{"Unnamed: 0":53,"query":"APT28","text":"Russia-Linked Cyberspies Target Google Accounts\r\n\nThe notorious cyberespionage group Pawn Storm has targeted a significant number of Google accounts belonging to individuals in Russia, the United States, Europe and former Soviet Union countries.\nThe advanced persistent threat (APT) actor is also known as APT28, Fancy Bear, TG-4127, Strontium, Sofacy, Sednit and Tsar Team. It is one of the two supposedly Russian threat groups believed to have breached the systems of the U.S. Democratic National Committee (DNC).\nShortly after news broke that Russian hackers had targeted DNC systems, researchers at SecureWorks reported that Pawn Storm had attempted to steal credentials associated with nearly 4,000 Gmail accounts between October 2015 and May 2016. The list of targets included people working for or associated with the DNC and Hillary Clinton\u2019s presidential campaign.\nA new report published this week by SecureWorks details an earlier spear phishing campaign that targeted over 1,800 Google accounts. While many of them belonged to people in Russia and former Soviet Union states, some of the targets were current and former government and military personnel in the United States and Europe, and foreign authors and journalists interested in Russia.\n\u201cThe range of targets demonstrates that the threat group poses a broad threat to individuals and groups associated with U.S. politics, to organizations and individuals in the government and defense verticals, and to those whose business involves commenting on Russia,\u201d SecureWorks researchers noted.\nIn this campaign, attackers used a domain named \u201caccoounts-google.com\u201d to trick users into handing over their Google credentials. A link to this phishing website was disguised using the Bit.ly URL shortening service and sent via email to targeted individuals.\nAn analysis of the targeted accounts revealed that Pawn Storm was mostly after information on Russia\u2019s military involvement in eastern Ukraine. Attackers also attempted to hack into the accounts of journalists, advocacy groups and human rights organizations in Russia, and political, military and diplomatic targets in former Soviet countries.\nOutside Russia and the former Soviet Union, attackers targeted military personnel, authors and journalists, NGOs, people involved in government and defense supply chains, government personnel, aerospace researchers, aviation professionals and political activists. A majority of the government and military targets were from the United States and NATO member countries.\nResearchers discovered nearly 4,400 phishing URLs sent to the owners of more than 1,800 Google accounts between March and September 2015. An analysis of the URLs showed that 59 percent of them were clicked, but it\u2019s unclear how many users actually took the bait.\nWhile many of the accounts received multiple phishing URLs, roughly one-third of them were only targeted once and 60 percent of these recipients clicked the malicious link, which could indicate that they were successfully compromised.\nRelated: Pawn Storm Cyberspies Target German Ruling Party","url":"https:\/\/www.securityweek.com\/russia-linked-cyberspies-target-google-accounts"},{"Unnamed: 0":54,"query":"APT28","text":"Adobe Patches 9 Flash Player Flaws Reported via ZDI\r\n\nSecurity updates released by Adobe on this Patch Tuesday address one vulnerability in Connect for Windows and nine arbitrary code execution flaws in Flash Player.\nFlash Player 23.0.0.207 for Windows, Mac and web browsers, and Flash Player 11.2.202.644 for Linux patch type confusion and use-after-free vulnerabilities tracked as CVE-2016-7857, CVE-2016-7858, CVE-2016-7859, CVE-2016-7860, CVE-2016-7861, CVE-2016-7862, CVE-2016-7863, CVE-2016-7864 and CVE-2016-7865.\nAll of the issues addressed on this occasion have been reported to Adobe through Trend Micro\u2019s Zero Day Initiative (ZDI) by various researchers, including bo13oy of CloverSec Labs, Archer, Kiritou Kureha, Erisaka Mafuyu, Onoe Serika, Kuchiki Toko and Takanashi Rikka.\nAdobe has also informed customers of a Connect update that resolves an input validation vulnerability in the events registration module. The flaw, reported by Vulnerability Lab, can be exploited for cross-site scripting (XSS) attacks.\nThe issue affects versions 9.5.6 and earlier for Windows, and it was fixed with the release of Connect 9.5.7. Adobe said there was no evidence that any of these vulnerabilities had been exploited in the wild.\nA Flash Player vulnerability exploited in targeted attacks was addressed by Adobe on October 26. The flaw (CVE-2016-7855) has been used by the Russia-linked threat actor known as Pawn Storm, APT28 and Fancy Bear.\nAttackers leveraged the security hole in combination with a Windows kernel weakness \u2013 the Flash Player bug was used to gain control of the victim\u2019s browser process and the Windows bug was exploited to elevate privileges and escape the browser sandbox.\nBoth Adobe and Microsoft were informed about the vulnerabilities by Google on October 21, but Microsoft only managed to patch the Windows flaw on Tuesday with its monthly security updates.","url":"https:\/\/www.securityweek.com\/adobe-patches-9-flash-player-flaws-reported-zdi"},{"Unnamed: 0":55,"query":"APT28","text":"Malicious PDF Leads to Discovery of Adobe Reader, Windows Zero-Days\r\n\nResearchers at ESET recently came across a malicious PDF file set up to exploit two zero-day vulnerabilities affecting Adobe Reader and Microsoft Windows.\nThe malicious document leverages a privilege escalation flaw in Windows (CVE-2018-8120) and a remote code execution vulnerability in Adobe Reader (CVE-2018-4990). CVE-2018-8120 is one of the two zero-day vulnerabilities fixed by Microsoft with its May 2018 Patch Tuesday updates, while CVE-2018-4990 was addressed by Adobe on May 14 with the release of updates that fix nearly 50 other issues.\nBy combining the two flaws, attackers can execute arbitrary code with elevated privileges with minimal user interaction \u2013 specifically, opening the malicious PDF.\nIn order to make it more difficult for attackers to execute arbitrary code on a system running its Reader software, Adobe has implemented a sandbox. Exploiting only CVE-2018-4990 allows code execution within the sandbox, but combining it with the Windows privilege escalation flaw makes it possible to escape the sandbox and execute the code in kernel mode.\nIt\u2019s worth noting that CVE-2018-8120 only affects Windows 7 and Windows Server 2008 \u2013 newer versions of the operating system include security features that prevent attacks.\nESET discovered the malicious PDF in a public malware repository (likely VirusTotal). However, the company has not shared any information on who may have found the flaws and who the attackers may have planned on targeting.\n\u201cEven though the sample does not contain a real malicious final payload, which may suggest that it was caught during its early development stages, the author(s) demonstrated a high level of skills in vulnerability discovery and exploit writing,\u201d explained Anton Cherepanov, the ESET researcher credited by Microsoft and Adobe for reporting the flaws.\nESET has published a blog post containing technical information on both vulnerabilities.\nAt the time of writing, 18 of the 59 antivirus engines on VirusTotal detect the files discovered by ESET as a generic Trojan or exploit.\nUsing two zero-day exploits in a single file is not unheard of. Last year, the Russia-linked threat actor known as APT28, Pawn Storm, Fancy Bear, Sofacy, Sednit and Strontium leveraged an Office RCE flaw (CVE-2017-0262) and a Windows privilege escalation (CVE-2017-0263) to deliver malware.\nRelated: Adobe Patches Flash Zero-Day Exploited by North Korean Hackers\nRelated: Triton Malware Exploited Zero-Day in Schneider Electric Devices\nRelated: Microsoft Patches Zero-Day Vulnerability in Office","url":"https:\/\/www.securityweek.com\/malicious-pdf-leads-discovery-adobe-reader-windows-zero-days"},{"Unnamed: 0":56,"query":"APT28","text":"U.S. Gov's \"GRIZZLY STEPPE\" Report Fails to Achieve Purpose: Experts\r\n\nThe recently released\u00a0Joint Analysis Report (JAR) published by the Department of Homeland Security (DHS) and Federal Bureau of Investigation (FBI) to detail tools used by Russian hackers in cyber attacks against the United States election didn\u2019t deliver on its promise, security experts argue.\nThe United States government said from the start that the JAR was meant to offer declassified technical information on the malicious cyber activity carried out by Russian civilian and military intelligence Services (RIS) referred to as GRIZZLY STEPPE. The information was also meant for network defenders in the United States and abroad to use to better \u201cidentify, detect, and disrupt Russia\u2019s global campaign of malicious cyber activities.\u201d\nBut the information included in the JAR isn\u2019t enough to help improve defenses, some experts argue. What\u2019s more, some suggest that \"evidence\" provided in the report that Cozy Bear (APT29) and Fancy Bear (APT28) were behind the election-focused\u00a0attacks doesn\u2019t actually prove that Russia was behind the attacks.\nThe report included a series of Indicators of Compromise (IOCs), but security exert Robert Graham explains that they are of low quality, have limited utility to defenders, and \u201care published as a political tool, to prove they have evidence pointing to Russia.\u201d\nOne of these is the YARA rule included in the report, which is a tool security researchers use to classify files and to analyze infected systems for attribution purposes. The YARA rule in US-CERT's GRIZZLY STEPPE report detects a web shell tool popular among Russia\/Ukraine hackers, namely the \u201cPAS TOOL WEB KIT.\u201d\nGraham argues that, because it can find the same web shell on all the victims, the YARA rule is useful at tracking the activity of hackers because they tend to continue using tools they are accustomed with. The issue with the JAR, however, is that the YARA it mentions is used to track a P.A.S. web shell used by \u201chundreds if not thousands of hackers,\u201d which makes attribution problematic. Unless, Graham says, the report withholds some of the information used for attribution.\n\u201cWe have little visibility into how the government used these IoCs. IP addresses and YARA rules like this are weak, insufficient for attribution by themselves. On the other hand, if they've got web server logs from multiple victims where commands from those IP addresses went to this specific web shell, then the attribution would be strong that all these attacks are by the same actor,\u201d Graham says.\nRobert M. Lee, CEO and Founder of security company Dragos, also believes that the report provides weak evidence for attribution and that the technical details included in it fail to achieve the intended purpose: it doesn\u2019t help network defenders and doesn\u2019t reveal new information on the two APTs (Advanced Persistent Threats) either, although it attributes the attacks to them (yet without offering the evidence everyone was expecting).\nAs Lee points out, a Fact Sheet published by the White House to accompany the announcement of various sanctions against Russia (intended as retaliation for RIS\u2019 malicious cyber-activity), suggested that the JAR would contain declassified information on Russian malware, provide details on new tactics and techniques used by Russia, and also validate previously published private sector data. But it does none of those.\n\u201cUnfortunately, while the intent was laid out clearly by the White House that intent was not captured in the DHS\/FBI report,\u201d Lee notes. In fact, he suggests that the report creates confusion by interweaving unrelated data; that it fails to provide a source for the presented data (which makes the information useless); and that some of the provided indicators of compromise, such as the IP addresses, are nearly useless (they are VPS, TOR exit nodes, proxies, and other non-descriptive internet traffic sites).\nAccording to Lee, however, this didn\u2019t happen because the government operators who compiled the report didn\u2019t do their job properly, but because the report then went through a series of reviews and sanitation operations that stripped out the best information. According to Lee, this is something that usually happens when the U.S. Intelligence Community releases any kind of information to the public.\nLee also says that the technical data and attribution are likely being included in a report prepared for Congress and which could be later declassified. \u201cYet, the GRIZZLY STEPPE report reads like a poorly done vendor intelligence report stringing together various aspects of attribution without evidence,\u201d Lee says.\n\u201cThe DHS\/FBI GRIZZLY STEPPE report does not meet its stated intent of helping network defenders and instead choose to focus on a confusing assortment of attribution, non-descriptive indicators, and re-hashed tradecraft. Additionally, the bulk of the report (8 of the 13 pages) is general high level recommendations not descriptive of the RIS threats mentioned and with no linking to what activity would help with what aspect of the technical data covered. It simply serves as an advertisement of documents and programs the DHS is trying to support,\u201d Lee also says.\nMark Maunder, Wordfence Founder and CEO, explains that an analysis of the PHP malware samples included in the JAR revealed that it was an older variant of P.A.S., namely version 3.1.0, which is \u201ccommonly available\u201d. The malware\u2019s site, he also reveals, points at newer versions of the malware, namely 3.1.7 and 4.1.1b and claims that Ukrainians developed it.\n\u201cOne might reasonably expect Russian intelligence operatives to develop their own tools or at least use current malicious tools from outside sources,\u201d Maunder says.\nHe also explains that 134 or about 15% of the 876 IP addresses listed in the report are Tor exit nodes, which are \u201care anonymous gateways that are used by anyone using the Tor anonymous browsing service.\u201d What\u2019s more, most of the top 50 most active IP addresses by number of complex attacks they were used in during the past 60 days, are Tor exit nodes, meaning they can\u2019t be used for attribution.\n\u201cThe IP addresses that DHS provided may have been used for an attack by a state actor like Russia. But they don\u2019t appear to provide any association with Russia. They are probably used by a wide range of other malicious actors, especially the 15% of IP addresses that are Tor exit nodes. The malware sample is old, widely used and appears to be Ukrainian. It has no apparent relationship with Russian intelligence and it would be an indicator of compromise for any website,\u201d Maunder concludes.\nResponding to an email inquiry, Chris Roberts, chief security architect at Acalvio, a Santa Clara, Calif.-based threat detection firm, told SecurityWeek that the report is fuzzy and non-committal, and that this is its main issue.\n\u201cIt doesn't come out and say \"Hey the FSB and GRU hacked us\" and has done so for the last 10-20 years. It simply refers to APT (actors) and insinuates that they are part of the establishment as opposed to providing actual details,\u201d he said.\nPaul Calatayud, CTO at FireMon, also told SecurityWeek that the report doesn\u2019t offer new information regarding the activities of these threat groups: \u201cUpon review, there is nothing new in regards to these actors and the techniques they are using. The newsworthy elements here are the source of the actors and their motivations in hitting political systems and implications of what it means in regards to national security.\u201d\nRelated: Spies and Hackers: Russians Sanctioned by US\nRelated: Trump to Meet U.S. Spy Chiefs to Get Russian Hacking 'Facts'\nRelated: U.S. Punishes Russia Over Election Hacks","url":"https:\/\/www.securityweek.com\/us-govs-grizzly-steppe-report-fails-achieve-purpose-experts"},{"Unnamed: 0":57,"query":"APT28","text":"Windows Zero-Day Exploited by Russia-Linked Cyberspies\r\n\nThe Windows zero-day vulnerability disclosed this week by Google has been exploited by the Russia-linked cyberespionage group known as Strontium. Microsoft has been working on a patch and expects to release it on November 8.\nGoogle informed Adobe and Microsoft on October 21 that malicious actors had been actively exploiting previously unknown vulnerabilities in Flash Player (CVE-2016-7855) and the Windows kernel. The companies were given 7 days to patch the flaws or publish workarounds that would help users protect themselves against attacks.\nAdobe released a patch for Flash Player on October 26, but since Microsoft had not come up with a fix or a workaround, Google decided that it would be in the best interest of users to disclose the Windows flaw. Microsoft does not agree and accused Google of putting its customers at risk.\nIn a blog post published on Tuesday, Microsoft revealed that the Windows vulnerability has been exploited by the group tracked by the company as Strontium. The threat actor is also known as Pawn Storm, APT28, Fancy Bear, Sednit, Sofacy and Tsar Team.\nThe group, which many believe is sponsored by the Russian government, has been linked to numerous high-profile attacks, including ones aimed at the U.S. Democratic Party, the World Anti-Doping Agency (WADA), investigators of the flight MH17 crash, and government organizations in Germany and Turkey.\nAccording to Microsoft, the Windows flaw exploited by the group in a low-volume spear-phishing campaign affects Windows Vista through Windows 10 Anniversary Update, but the exploit does not work against the latter due to new mitigations implemented recently by Microsoft.\nThe attackers have been leveraging the Flash Player vulnerability to gain control of the victim\u2019s browser process, after which they use the Windows kernel flaw to elevate their privileges and escape the browser sandbox. In the last phase of the attack, a backdoor that gives attackers access to the victim\u2019s device is downloaded and executed.\nWhile Microsoft will only release a patch next Tuesday, the company pointed out that security features in Edge, and Device Guard for Internet Explorer and other browsers, should block the final stages of the attack. Furthermore, the company says its Windows Defender Advanced Threat Protection (ATP) system also detects and blocks these attacks.\nRelated: Russian Cyberspies Use \"Komplex\" Trojan to Target OS X Systems\nRelated: U.S. Officially Accuses Russia of Election Hacks","url":"https:\/\/www.securityweek.com\/windows-zero-day-exploited-russia-linked-cyberspies"},{"Unnamed: 0":58,"query":"APT28","text":"Adobe Patches Flash Zero-Day Exploited in Targeted Attacks\r\n\nAdobe has patched vulnerabilities in nine of its products, including Flash Player, which is affected by a zero-day flaw that has been exploited in targeted attacks.\nFlash Player 24.0.0.186 resolves a total of 17 vulnerabilities, a majority of which can be exploited for arbitrary code execution. The most interesting of the security holes is CVE-2016-7892, a use-after-free reported to Adobe by an individual who wanted to remain anonymous.\nAccording to Adobe, an exploit for CVE-2016-7892 exists in the wild and the vulnerability has been leveraged in limited, targeted attacks aimed at Windows users running a 32-bit version of Internet Explorer.\nThe other Flash Player vulnerabilities were reported to Adobe by independent researchers and experts from Microsoft, Pangu LAB, Tencent, CloverSec Labs, Qihoo 360, Trend Micro\u2019s Zero Day Initiative (ZDI) and Palo Alto Networks.\nThe Flash Player patches have also been included in one of the security bulletins released by Microsoft on Tuesday.\nAdobe also announced the availability of security updates that patch a memory corruption flaw in Animate, two cross-site scripting (XSS) issues in Experience Manager Forms, and a critical memory corruption in DNG Converter.\nThree XSS and one cross-site request forgery (CSRF) flaws in Experience Manager, a memory corruption in InDesign, information disclosure bugs in ColdFusion Builder and Digital Editions, and an XSS flaw in RoboHelp have also been patched.\nThe software giant said there was no evidence that any of these vulnerabilities had been exploited in the wild.\nWhile the Patch Tuesday updates released by Adobe in the past three months did not address any zero-days, Adobe did release an out-of-band patch for Flash Player in late October to fix a use-after-free exploited in a low-volume spear phishing campaign by the Russia-linked threat actor known as Pawn Storm, APT28, Fancy Bear, Sednit, Sofacy and Tsar Team.\nRelated: U.S. Authorities Reach Settlement With Adobe Over 2013 Breach\nRelated: Adobe Patches 9 Flash Player Flaws Reported via ZDI","url":"https:\/\/www.securityweek.com\/adobe-patches-flash-zero-day-exploited-targeted-attacks"},{"Unnamed: 0":59,"query":"APT28","text":"Russia Used Android Malware to Track Ukrainian Troops: Report\r\n\nThe Russia-linked cyberespionage group known as Fancy Bear has tracked Ukrainian artillery forces by planting a piece of Android malware in a legitimate military application, threat intelligence firm CrowdStrike reported on Thursday.\nFancy Bear is also known as APT28, Pawn Storm, Sofacy, Tsar Team, Strontium and Sednit. The group is believed to be responsible for many high-profile attacks, including recent operations aimed at the U.S. Democratic Party, government organizations in Turkey and Germany, and the World Anti-Doping Agency (WADA).\nCrowdStrike believes Fancy Bear is likely tied to GRU, the foreign military intelligence agency of Russia\u2019s Armed Forces, and the company\u2019s recent findings reinforce this theory.\nThis summer, the company\u2019s analysts came across an Android application package (APK) file named \u201c\u041f\u043e\u043f\u0440-\u041430.apk.\u201d The file contained Russian-language artifacts and its name referenced the D-30, a Russian-made 122 mm towed howitzer that first entered service in the 1960s.\nThe D-30 is still used by the Ukrainian military and, in 2013, artillery officer Yaroslav Sherstuk created an Android app designed to help personnel reduce the time to fire the gun from minutes to under 15 seconds. According to its developer, the application has roughly 9,000 users.\nAccording to CrowdStrike, Fancy Bear took the legitimate Android app and bundled it with an Android variant of X-Agent, a piece of malware that has been used by the threat actor in attacks aimed at high-value targets, including the Democratic National Committee (DNC).\nThe malicious version of the app was distributed on Ukrainian military forums from late 2014 through 2016. Experts believe the legitimate program had been mainly distributed through social media, not via the Google Play store.\nThe Android variant of the X-Agent malware appears to be designed for strategic purposes as it does not cause any damage to the infected device and it does not interfere with the operation of the original app. X-Agent is capable of accessing contact information, SMS messages, call logs and Internet data.\n\u201cCrowdStrike Intelligence assesses a tool such as this has the potential ability to map out a unit\u2019s composition and hierarchy, determine their plans, and even triangulate their approximate location. This type of strategic analysis can enable the identification of zones in which troops are operating and help prioritize assets within those zones for future targeting,\u201d CrowdStrike wrote in its report.\n\u201cAdditionally, a study provided by the International Institute of Strategic Studies determined that the weapons platform bearing the highest losses between 2013 and 2016 was the D-30 towed howitzer. It is possible that the deployment of this malware infected application may have contributed to the high-loss nature of this platform,\u201d the report adds.\nThe threat intelligence firm pointed out that the purpose of the malicious D-30 app further strengthens its belief that Fancy Bear is likely affiliated with Russia\u2019s GRU agency.\nRelated: Russian Cyberspies Use \"Komplex\" Trojan to Target OS X Systems\nRelated: Two APTs Used Same Zero-Day to Target Individuals in Europe","url":"https:\/\/www.securityweek.com\/russia-used-android-malware-track-ukrainian-troops-report"},{"Unnamed: 0":60,"query":"APT28","text":"Windows 10 Blocks Zero-Days Before Patches Arrive: Microsoft\r\n\nUnknown to vendors but exploited by cybercriminals, zero-day vulnerabilities are the most threatening security issues, but Microsoft's Windows 10 can block exploitation of these vulnerabilities before they are even patched, Microsoft says.\nThe mitigation techniques that arrived in August 2016 as part of the Windows 10 Anniversary Update make all this possible. The update was meant to harden the platform to ensure it can stop exploits of newly discovered and even undisclosed vulnerabilities before a patch is released, and Microsoft claims that it already proved to be effective against two exploits associated with well-known threat groups.\nMore precisely, the deployed mitigation techniques did their job and successfully blocked kernel-level exploits for the CVE-2016-7255 and CVE-2016-7256 vulnerabilities before they were patched in November 2016, the tech behemoth explains. The former is a Win32k Elevation of Privilege Exploit, while the latter is an Open Type Font Exploit.\nCVE-2016-7255, a type-confusion vulnerability in win32k.sys, was exploited by the STRONTIUM attack group to gain elevated privileges on compromised systems. To get access to the targeted computers, the group used an Adobe Flash Player vulnerability (tracked as CVE-2016-7855). The two exploits were used in a small spear-phishing campaign targeting think tanks and nongovernmental organizations in the United States.\nAlso known as Fancy Bear, Pawn Storm, APT28, Sednit, and Sofacy, this threat group was recently officially blamed for last year\u2019s cyber-attacks on U.S. elections, albeit the U.S. government failed to provide proper evidence on attribution.\nThe STRONTIUM group, Microsoft says, leveraged the Win32k exploit in attacks in October 2016, where they attempted to corrupt the tagWND.strName structure and use SetWindowTextW to write arbitrary content anywhere in kernel memory. Abusing the API call to overwrite data of current processes and copy token privileges of the SYSTEM, the exploit allowed attackers to run victim processes with elevated privileges.\nThe Windows 10 Anniversary Update includes techniques that prevent abusive use of tagWND.strName, thus mitigating the Win32k exploit and similar exploits. According to the software company, tests have proven that exploits abusing this method are ineffective and instead cause exceptions and subsequent blue screen errors.\nThe CVE-2016-7256 vulnerability in the Windows font library, on the other hand, was being abused to install a backdoor known as Hankray on targeted computers with older versions of Windows. The backdoor had been previously spotted in low-volume attacks primarily focused on targets in South Korea.\n\u201cThe font samples found on affected computers were specifically manipulated with hardcoded addresses and data to reflect actual kernel memory layouts. This indicates the likelihood that a secondary tool dynamically generated the exploit code at the time of infiltration,\u201d Microsoft says.\nDesigned to copy the main body of the shellcode to newly allocated memory and run it, the stage 1 shellcode is very small, the tech giant explains. The main shellcode, which runs after the copy instructions, while also small, performs a token-stealing technique, then copies the token pointer from a SYSTEM process to the target process, achieving privilege escalation.\nThe Windows 10 Anniversary Update can prevent the exploit because font parsing happens completely in AppContainer instead of the kernel. Because it creates an isolated sandbox, AppContainer can prevent font exploits (among other types of exploits) from achieving privilege escalation. Moreover, the platform includes additional validation for font file parsing.\nAccording to Microsoft, the main idea behind the hardening of Windows 10 is to ensure that mitigation techniques in the platform can tackle multiple exploits instead of focusing on neutralizing a specific bug. These mitigation techniques can either break exploit methods or close entire classes of vulnerabilities, and Microsoft plans on taking this prevention to a new level in Windows 10 Creators Update, which will include generic kernel exploit detection Windows Defender ATP, expected to deliver increased visibility into targeted attacks based on zero-day exploits.\n\u201cBy delivering these mitigation techniques, we are increasing the cost of exploit development, forcing attackers to find ways around new defense layers. Even the simple tactical mitigation against popular RW primitives forces the exploit authors to spend more time and resources in finding new attack routes. By moving font parsing code to an isolated container, we significantly reduce the likelihood that font bugs are used as vectors for privilege escalation,\u201d Microsoft also says.\nRelated: Windows 10 Creators Update Brings New Security Capabilities\nRelated: Microsoft Adds Virtualization-based Security to Edge Browser\nRelated: Microsoft Expands Multi-Factor Authentication Solution","url":"https:\/\/www.securityweek.com\/windows-10-blocks-zero-days-patches-arrive-microsoft"},{"Unnamed: 0":61,"query":"APT28","text":"Russian Cyberspies Use \"Komplex\" Trojan to Target OS X Systems\r\n\nResearchers at Palo Alto Networks have come across an OS X Trojan they believe has been used by a notorious Russia-linked cyber espionage group in attacks aimed at the aerospace industry.\nThe malware, dubbed \u201cKomplex,\u201d appears to have been developed by the threat actor known as Sofacy, Pawn Storm, APT28, Sednit, Fancy Bear and Tsar Team. The gang has been tied to numerous high-profile attacks, including ones aimed at the U.S. government and the country\u2019s political parties, the German parliament, and the World Anti-Doping Agency (WADA).\nAccording to Palo Alto Networks, Komplex attacks start with a binder component that deploys a decoy document, which is displayed with the Preview application in OS X, and the Trojan\u2019s dropper. The dropper component is designed to drop and execute the main payload and ensure its persistence by configuring the system to launch it when OS X starts.\nOnce it infects a device, the malware establishes contact with its command and control (C&C) server and collects system information. The Trojan allows attackers to execute arbitrary commands and download additional files to the affected machine.\nPalo Alto Networks\u2019 analysis revealed that Komplex is likely the unnamed Mac Trojan described in a June 2015 blog post by BAE Systems. At the time, the malware had been delivered via a vulnerability in the MacKeeper security and optimization software.\nResearchers also discovered links between Komplex and the variant of the Carberp malware used by the Sofacy group in attacks targeting the U.S. government. While Carberp is designed to target Windows systems, experts have identified several similarities, including in URL generation logic, file extensions, encryption and decryption methods, command handling, and Internet connectivity checks.\n\u201cBased on these observations, we believe that the author of Sofacy\u2019s Carberp variant used the same code, or at least the same design, to create the Komplex Trojan,\u201d Palo Alto Networks explained in a blog post. \u201cA benefit of retaining many of the same functionalities within the Windows and OS X Trojans is that it would require fewer alterations to the C2 server application to handle cross-platform implants.\u201d\nExperts also uncovered C&C infrastructure overlaps as some of the domains used by Komplex are known to be associated with Sofacy activity.\nRyan Olson, intelligence director at Palo Alto Networks\u2019 Unit 42, told SecurityWeek that they first detected Komplex at the beginning of August. While there is no indication of significant changes in the malware functionality compared to the variant analyzed by BAE Systems last year, the attackers have apparently switched from exploiting MacKeeper vulnerabilities to using decoy documents.\nWhile experts have not been able to precisely determine which organizations have been targeted with this OS X Trojan, based on decoy documents, they believe one of the targets was likely associated with the aerospace industry.\nRelated: Fysbis Backdoor Preferred by Pawn Storm Group to Target Linux","url":"https:\/\/www.securityweek.com\/russian-cyberspies-use-komplex-trojan-target-os-x-systems"},{"Unnamed: 0":62,"query":"APT28","text":"Russian Cyberspies Use UEFI Rootkit in Attacks\r\n\nRussian cyber-espionage group Fancy Bear is the first threat actor to have used a Unified Extensible Firmware Interface (UEFI) rootkit in a malicious campaign, ESET\u2019s security researchers claim.\nSeveral years ago, Italy-based surveillance software maker Hacking Team was said to have used a UEFI rootkit to ensure the persistence of its software on targeted systems, but no UEFI rootkit had \u201cever been detected in the wild,\u201d the security firm claims.\nA recently discovered Fancy Bear campaign, however, changes that: the actor was able to successfully deploy a malicious UEFI module on a victim\u2019s system. Not only does this prove that UEFI rootkits are a real threat, but also shows that Fancy Bear may be even more dangerous than thought, ESET says.\nActive for the past decade and a half, the actor, which is also referred to as APT28, Strontium, Sofacy and Sednit, is believed to have orchestrated a variety of high profile attacks, such as the DNC hack before the US 2016 elections.\nEarlier this year, after the group\u2019s Zerbrocy malware was found on systems infected with Turla\u2019s Mosquito backdoor, security researchers concluded that the threat actor\u2019s activities overlap with other state-sponsored operations.\n\u201cOur investigation has determined that this malicious actor was successful at least once in writing a malicious UEFI module into a system\u2019s SPI flash memory. This module is able to drop and execute malware on disk during the boot process. This persistence method is particularly invasive as it will not only survive an OS reinstall, but also a hard disk replacement,\u201d ESET reveals in a report published today.\nIn May, Fancy Bear was revealed to have abused LoJack (a Trojanized version of the tool, which ESET calls LoJax) in their attacks. Deeper analysis of the campaign revealed not only that the actor attempted to mimic the tool\u2019s persistence method, but also that additional tools were used for accessing and modifying UEFI\/BIOS settings.\nThese include a kernel driver and three tools to (1) dump information about low level system settings, (2) save an image of the system firmware, and (3) add a malicious UEFI module to the image. The third tool would then write the modified firmware image back to the SPI flash memory, thus effectively installing the UEFI rootkit on the system.\n\u201cIf the platform allows write operations to the SPI flash memory, it will just go ahead and write to it. If not, it actually implements an exploit against a known vulnerability,\u201d ESET reveals.\nThe UEFI rootkit was designed to drop malware onto the Windows operating system partition and make sure that it is executed at startup.\nThe observed LoJax samples used command and control (C&C) servers previously associated with Fancy Bear\u2019s SedUploader first-stage backdoor, which, combined with the presence of other Sednit tools on LoJax-infected machines (SedUploader, XAgent backdoor, and Xtunnel network proxy tool), suggested that this threat actor was behind the attacks.\nSednit\u2019s UEFI rootkit, ESET discovered, is not properly signed, meaning that Secure Boot would be able to block it. The security researchers also note that the attack can write the modified firmware image only if SPI flash memory protections are vulnerable or misconfigured.\n\u201cThe LoJax campaign shows that high-value targets are prime candidates for the deployment of rare, even unique threats and such targets should always be on the lookout for signs of compromise. Also, one thing that this research taught us is that it is always important to dig as deep as you can go!\u201d ESET concludes.\nRelated: Russia-linked Hackers Exploit Lojack Recovery Tool in Attacks","url":"https:\/\/www.securityweek.com\/russian-cyberspies-use-uefi-rootkit-attacks"},{"Unnamed: 0":63,"query":"APT28","text":"Oracle Patches Java Zero-Day, 192 Other Security Bugs\r\n\nOracle on Tuesday released its July 2015 Critical Patch Update (CPU). The updates address a whopping 193 security issues across multiple product families, including a Java zero-day bug exploited in the wild by a sophisticated threat group.\nTrend Micro revealed earlier this week that an unpatched Java vulnerability had been exploited by the advanced persistent threat (APT) group Pawn Storm (also known as APT28, Sofacy, Fancy Bear, and Sednit) in attacks against the armed forces of a NATO member country, and major defense contractors in the United States and Canada. Researchers noted that this was the first Java zero-day attack reported in almost two years.\nAfter Oracle announced the availability of a patch for the remote code execution vulnerability (CVE-2015-2590), Trend Micro published a blog post with additional technical details on the attack.\nThe security holes addressed by Oracle with the July 2015 CPU affect a wide range of products, including Oracle Database, Fusion Middleware, Hyperion, Enterprise Manager, E-Business Suite, Supply Chain Suite, PeopleSoft Enterprise, Siebel CRM, Communications Applications, Java SE, Sun Systems Products Suite, Linux and Virtualization, and MySQL.\nForty-four of the patched flaws plague third-party components included in Oracle\u2019s product distributions, such as Qemu and Glibc.\nA total of 25 vulnerabilities have been addressed in Java SE and 23 of them can be exploited remotely by an unauthenticated attacker.\n\u201c16 of these Java SE fixes are for Java client-only, including one fix for the client installation of Java SE. 5 of the Java fixes are for client and server deployment. One fix is specific to the Mac platform. And 4 fixes are for JSSE client and server deployments,\u2019 Eric Maurice, director of Oracle Software Security Assurance, said in a blog post.\nThe latest CPU resolves ten vulnerabilities in Oracle Database, 39 in Fusion Middleware, 25 in Berkeley DB, two in Communications Applications, 13 in E-Business Suite, seven in Supply Chain Suite, eight in PeopleSoft Enterprise, five in Siebel, and two in Commerce Platform.\nOracle has pointed out that the Common Vulnerability Scoring System (CVSS) scores assigned in the advisory released on Tuesday are based on CVSS v2. However, now that CVSS v3 has been released, Oracle intends to move to the new standard in its future alerts and advisories.\nIndependent researchers and experts from organizations such as Foreground Security, TELUS Security Labs, Evolution Security, Google, Trend Micro, Trustwave, Rapid7, SEC Consult, Red Hat, Ruhr University Bochum, Microsoft, KPMG, Worldpay, E.ON Business Services, NATO Communications and Information Agency, SecureLayer7, HP's Zero Day Initiative, and Help AG have been credited for reporting the vulnerabilities patched with the July 2015 CPU.","url":"https:\/\/www.securityweek.com\/oracle-patches-java-zero-day-192-other-security-bugs"},{"Unnamed: 0":64,"query":"APT28","text":"Sophisticated False Flags Planted in Olympic Destroyer Malware\r\n\n\nCANCUN - KASPERSKY SECURITY ANALYST SUMMIT - The hackers behind the recent Olympic Destroyer attack planted sophisticated false flags inside their malware in an effort to trick researchers, Kaspersky Lab revealed on Thursday.\nThe Olympic Winter Games in Pyeongchang, South Korea, was hit by a cyberattack that caused temporary disruption to IT systems, including the official Olympics website, display monitors, and Wi-Fi connections. The attack involved Olympic Destroyer, a piece of malware designed to wipe files and make systems inoperable, and steal passwords from browsers and Windows. Compromised credentials are used to spread to other machines on the network.\nKaspersky has also spotted infections at several ski resorts in South Korea. The malware, which leverages a leaked NSA exploit known as EternalRomance to spread via the SMB protocol, temporarily disrupted ski gates and lifts at the affected resorts.\nSeveral cybersecurity firms launched investigations into the Olympic Destroyer attack shortly after the news broke, and while they mostly agreed on the malware\u2019s functionality, they could not agree on who was behind the operation. Some pointed the finger at North Korea, while others blamed China or Russia, leading some industry professionals to warn against this type of knee-jerk attribution.\nKaspersky researchers also analyzed the Olympic Destroyer worm in an effort to determine who was behind the attack. While they have\u2019t been able to identify the culprit, experts have found some interesting clues.\nThe security firm has found a unique \u201cfingerprint\u201d associated with the notorious Lazarus Group, which has been linked to North Korea and blamed for high profile attacks such as the one on Sony, the WannaCry campaign, and various operations targeting financial organizations.\nThis fingerprint was a 100% match to known Lazarus malware components and it did not appear in any other files from Kaspersky\u2019s database. While this piece of evidence and the type of attack suggested that Olympic Destroyer could be the work of North Korea, other data gathered by researchers as a result of an on-site investigation at a South Korean target revealed inconsistencies.\nExperts determined that the unique fingerprint was likely a sophisticated false flag planted by the attackers to throw investigators off track.\n\u201cTo our knowledge, the evidence we were able to find was not previously used for attribution. Yet the attackers decided to use it, predicting that someone would find it. They counted on the fact that forgery of this artifact is very hard to prove,\u201d explained Vitaly Kamluk, head of the APAC research team at Kaspersky. \u201cIt\u2019s as if a criminal had stolen someone else\u2019s DNA and left it at a crime scene instead of their own. We discovered and proved that the DNA found on the crime scene was dropped there on purpose. All this demonstrates how much effort attackers are willing to spend in order to stay unidentified for as long as possible. We\u2019ve always said that attribution in cyberspace is very hard as lots of things can be faked, and Olympic Destroyer is a pretty precise illustration of this.\u201d\nIn addition to this apparent link to North Korea, Kaspersky has found evidence that would suggest the involvement of the notorious group known as Sofacy, Fancy Bear, APT28 and Pawn Storm, which is widely believed to be sponsored by the Russian government.\nOne possible scenario is that the Russian hackers attempted to frame Lazarus for the attack after the North Korean group tried to pin one of its campaigns on Russian actors. It\u2019s also possible that the false flag used in the Olympics attack is part of the hackers\u2019 efforts to improve their deception techniques.\nLinks to China have been found by Intezer, which specializes in recognizing code reuse. Its analysis led to the discovery of numerous code fragments uniquely linked to threat groups tracked as APT3, APT10 and APT12.\nRelated: Attribution Hell - Cyberspies Hacking Other Cyberspies\nRelated: False Flags and Misdirection in Hacker Attribution\nRelated: Attribution Concerns Raised Over Cyber Sanctions Program\nRelated: Long-Term Strategy Needed When Analyzing APTs","url":"https:\/\/www.securityweek.com\/sophisticated-false-flags-planted-olympic-destroyer-malware"},{"Unnamed: 0":65,"query":"APT28","text":"U.S. Attributes Election Hacks to Russian Threat Groups\r\n\nU.S. Government Maps Election Hacks to Russian Threat Groups, But Industry Raises Concern Over Attribution Evidence\nThe Department of Homeland Security (DHS) and the Federal Bureau of Investigation (FBI) on Thursday published a Joint Analysis Report (JAR) to detail the tools and infrastructure that Russian hackers used in attacks against the United States election.\nThe JAR was meant to offer technical details on the cyber activities of Russian civilian and military intelligence Services (RIS), some of which targeted the US government and political and private entities. This is the first time the malicious cyber activity, which the US calls GRIZZLY STEPPE, has been officially attributed to a specific hacking group.\nAs expected, U.S. President Barack Obama on Thursday announced several retaliatory actions against Moscow, imposing sanctions on two intelligence agencies, expelling 35 diplomats and denying access to two Russian compounds inside the United States.\nIn October this year, the US government officially accused Russia of involvement in the cyber-attacks against US political organizations, saying that some states had seen scanning and probing activity originating from servers operated by a Russian company, but no attribution was made at the time. The report (PDF) not only makes an attribution, but also provides recommended mitigations and suggested actions to take in response to indicators provided.\nThe JAR reveals that two different actors participated in the intrusion into a U.S. political party, one in the summer of 2015, namely Advanced Persistent Threat (APT) 29, and the other in spring 2016, namely APT28. The former is also known as Cozy Bear, or CozyDuke, while the latter is referred to as Fancy Bear, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team.\nThis falls in line with what intelligence firm CrowdStrike revealed in June, after assisting the Democratic National Committee (DNC), the formal governing body for the U.S. Democratic Party, to investigate cyber-attacks against its network. Later during summer, two security firms uncovered evidence that Fancy Bear breached the U.S. Democratic Congressional Campaign Committee (DCCC) as well.\nBoth Cozy Bear and Fancy Bear were previously linked to attacks against US government organizations and other governments worldwide. Their attack methods include spearphishing to deliver malicious droppers to the victims\u2019 computers, or the use of short URLs upon the creation of domains closely resembling those of targeted organizations.\n\u201cOnce APT28 and APT29 have access to victims, both groups exfiltrate and analyze information to gain intelligence value. These groups use this information to craft highly targeted spearphishing campaigns. These actors set up operational infrastructure to obfuscate their source infrastructure, host domains and malware for targeting organizations, establish command and control nodes, and harvest credentials and other valuable information from their targets,\u201d the JAR reads.\nPreviously, security researchers managed to identify some of the tools that these actors use, such as the XTunnel malware that is believed to have been specifically created for the DNC hack. Other malicious applications include the Fysbis backdoor to target Linux machines, the Komplex Trojan targeting OS X systems, and the Carberp malware to compromise Windows computers.\nWhile many in the cybersecurity understandably question the lack of appropriate details to sufficiently attribute the attacks to Russia, the US government maintains its claim that it has enough evidence to link RIS to the recent attacks. Moreover, it says that these aren\u2019t isolated incidents, but that they are part of ongoing campaigns targeting the nation. The security industry, however, has widely criticized IOC-based attribution as a weak \u201cevidence\u201d to confidently point a finger.\nIn October, Kaspersky Lab security researchers warned of the deep implications of misattribution, suggesting that\u00a0attribution is difficult, mainly because of the widespread use of sophisticated deception tactics among hacking groups.\n\u201cNo one should be making any attribution conclusions purely from the indicators in the USCERT report. It was all a jumbled mess,\u201d tweeted Dmitri Alperovitch, Co-Founder & CTO at CrowdStrike.\nFor US organizations to better protect themselves against such attacks, the JAR provided a list of alternate names associated with RIS, along with Indicators of Compromise (IOCs), which can be found in the accompanying CSV and STIX xml files, and recommendations regarding the actions that network administrators should take to detect compromise and secure perimeters.\nWhile some industry experts applauded the GRIZZLY STEPPE indicators provided by the U.S. Government, some experts urged caution for those quickly integrating them into their cyber defense measures.\n\u201cBe careful using the DHS\/FBI GRIZZLY STEPPE indicators. Many are VPS, TOR relays, proxies, etc. which will generate lots of false positives,\u201d Robert\u00a0M.\u00a0Lee, founder and CEO of Dragos Security and a former member of the intelligence community, Tweeted.\nVia a series of tweets, FireEye\u2019s Chris Sanders also cautioned those eager to quickly implement the list of IPs into network security defenses. \u201cIf you try to make an IDS rule out of all those IP\u2019s you\u2019re gonna generate a TON of alerts and have a bad time,\u201d he tweeted. \u201cDon\u2019t build IDS rules from lists of IPs w\/o context. This is # of matches for a group of avg size networks over ~30 days for DHS report IPs. \u201cThat said, if you want to practice some hunting, go wild. This is a good opportunity to practice your mass triage\/search workflow,\u201d he added in a separate tweet.\nUS President-elect Donald Trump pledged to meet with leaders of the intelligence community next week in order to be \u201cupdated on the facts\u201d on election related hacks by Russia.\n*Mike Lennon contributed to this report\nRelated: Obama to Announce Retaliation Against Russia for Election Hacks\nRelated: Russia-Linked Cyberspies Target Google Accounts\nRelated:\u00a0U.S. Vows Response to Russian Hack at 'Time and Place of our Choosing'\u00a0","url":"https:\/\/www.securityweek.com\/us-attributes-election-hacks-russian-threat-groups"},{"Unnamed: 0":66,"query":"APT28","text":"Russia-Linked Hackers Leak Football Doping Files\r\n\nA group of hackers believed to be operating out of Russia has leaked emails and medical records related to football (soccer) players who used illegal substances.\nThe group calls itself Fancy Bears and claims to be associated with the Anonymous hacktivist movement. They have set up a website, fancybears.net, where they leaked numerous files as part of a campaign dubbed \u201cOpOlympics.\u201d\n\u201cToday Fancy Bears\u2019 hack team is publishing the material leaked from various sources related to football,\u201d the hackers said. \u201cFootball players and officials unanimously affirm that this kind of sport is free of doping. Our team perceived these numerous claims as a challenge and now we will prove they are lying.\u201d\nThe leaked files include emails exchanged between the F\u00e9d\u00e9ration Internationale de Football Association (FIFA) and representatives of anti-doping agencies discussing the test results of various football players. The files also provide information on the number of players using illegal substances -- without specifically naming any players -- and therapeutic use exemptions (TUEs), which allow athletes to take prohibited substances for medical reasons.\nThe files contain information on several important players allowed to use TUEs at the 2010 World Cup, including Mario Gomez, Carlos Tevez, Juan Sebastian Veron, Dirk Kuyt and Ryan Nelsen. However, the emails dumped by the hackers are dated as recent as June 2017.\n\nThe hackers said they leaked the files to show that more than 150 players were caught doping in 2015, and the number increased to 200 in 2016.\nBoth the Football Association and FIFA condemned the leak of confidential medical information.\nThe same hacker group previously targeted the International Association of Athletics Federations (IAAF) and the World Anti-Doping Agency (WADA). The hackers now also described the files as \u201cWADA documents\u201d and some of them appear to originate from the Anti-Doping Administration and Management System (ADAMS). SecurityWeek has reached out to WADA for comment.\nWhile the Fancy Bears that took credit for these attacks claim to be hacktivists, researchers have linked the previous leaks to Fancy Bear, a notorious cyber espionage group believed to be sponsored by the Russian government. The threat actor is tracked by various security firms as APT28, Pawn Storm, Sednit, Sofacy, Tsar Team and Strontium.\nThe first Fancy Bear leak came shortly after investigations exposed state-sponsored doping in Russia. The latest release may have been triggered by similar events.\n\u201cPrevious Fancy Bear dumps were almost always retaliatory and in response to sanctions from various international sports organizations. When the Russian athletic team was banned from participating in World Athletics Championships in London, embarrassing IAAF doping reports about major Western athletes were made public,\u201d explained Recorded Future\u2019s Insikt Group.\n\u201cAs international pressure on Russia intensifies, with open calls to strip Russia of World Cup in 2018 and recent the FIFA investigation into suspected prohibited substance abuse of the national soccer team, today's release was almost guaranteed to surface,\u201d it added. \u201cThe message reads very clear and loud - \u2018Dare to touch us, we'll come after you. Don't expect us to remain silent and maintain status quo\u2019.\u201d\nUPDATE. WADA told SecurityWeek that the leaked files do not originate from its ADAMS system. The organization has provided the following statement:\nRelated: Russian Hackers May Have Manipulated Leaked WADA Data\nRelated: Attack on Olympics Anti-Doping Agency Linked to Russia","url":"https:\/\/www.securityweek.com\/russia-linked-hackers-leak-football-doping-files"},{"Unnamed: 0":67,"query":"APT28","text":"Corporate Users Increasingly Targeted With Exploits: Kaspersky\r\n\nA report published by Kaspersky Lab on Thursday shows that the number of attacks involving exploits increased significantly in 2016 compared to the previous year, but the number of attacked users actually dropped.\nThe security firm observed more than 700 million attempts to execute an exploit in 2016, which represents a 25% increase compared to 2015. However, the number of users attacked was only 4.3 million, compared to nearly 5.5 million in the previous year.\nThis indicates that while fewer users encountered exploits, the likelihood of coming across an exploit increased as the number of websites and spam messages delivering such threats has continued to grow.\nOf all the exploit attacks observed by Kaspersky in 2016, more than 15% were aimed at corporate machines. The number of targeted corporate users increased from 538,000 in 2015 to 690,000 in 2016.\nWhile Windows and web browsers were the most targeted applications in both 2015 and 2016, their share decreased significantly last year, making more room for Android and Microsoft Office exploits.\n\u201cExploits for vulnerabilities in Office software became the absolute champions in terms of the number of attacked users. They increased by almost 103% to reach 367,167 attacked users,\u201d Kaspersky said in its report.\nThe security firm said more than 297,000 users were hit by zero-day or heavily obfuscated known exploits in 2016, and the most common exploit, same as in the previous year, was CVE-2010-2568, a vulnerability leveraged by the notorious Stuxnet malware.\nBetween 2010 and 2016, malicious actors used more than 80 vulnerabilities in targeted attacks. The Russia-linked threat group known as APT28 and Fancy Bear leveraged 25 flaws, including at least six zero-days, followed by the NSA-linked Equation Group, which used roughly 17 vulnerabilities, including at least eight zero-days.\nGroups that launched targeted attacks have mainly relied on Windows flaws, followed by Flash Player, Office, Java and Internet Explorer. The most popular vulnerability is CVE-2012-0158, which is still being used by APT actors.\n\nRelated: Exploit Kits Take Cyberattacks to the Masses, But They're Preventable\nRelated: New Terror Exploit Kit Emerges","url":"https:\/\/www.securityweek.com\/corporate-users-increasingly-targeted-exploits-kaspersky"},{"Unnamed: 0":68,"query":"APT28","text":"Usual Threats, But More Sophisticated and Faster: Report\r\n\nAlmost Every Type of Cyber Attack is Increasing in Both Volume and Sophistication\nEight new malware samples were recorded every second during the final three months of 2017. The use of fileless attacks, primarily via PowerShell, grew; and there was a surge in cryptocurrency hijacking malware.\nThese were the primary threats outlined in the latest McAfee Lab's Threat Report (PDF) covering Q4 2017.\nThe growth of cryptomining malware coincided with the surge in Bitcoin value, which peaked at just under $20,000 on Dec. 22. With the cost of dedicated mining hardware at upwards of $5,000 per machine, criminals chose to steal users' CPU time via malware. It demonstrates how criminals always follow the money, and choose the least expensive method of acquiring it with the greatest chance of avoiding detection.\nSince December, Bitcoin's value has fallen to $9,000 (at the time of publishing). Criminals' focus on Bitcoin is likewise being modified, with Ethereum and Monero becoming popular. Last week, Microsoft discovered a major campaign focused on stealing Electroneum. \"We currently see discussions in underground forums that suggest moving from Bitcoin to Litecoin because the latter is a safer model with less chance of exposure,\" comments Raj Samani, chief scientist and McAfee fellow with the Advanced Threat Research Team.\nThe speed with which criminals adapt to their latest market conditions is also seen in the way they maximize their asymmetric advantage. \"Adversaries,\" writes Samani, \"have the luxury of access to research done by the technical community, and can download and use opensource tools to support their campaigns, while the defenders\u2019 level of insight into cybercriminal activities is considerably more limited, and identifying evolving tactics often must take place after malicious campaigns have begun.\"\nExamples of attackers making use of legitimate research include Fancy Bear (APT28) leveraging a Microsoft Office Dynamic Data Exchange technique in November 2017 that had been made public just a few weeks earlier. The hackers used it in a phishing campaign that cited the New York City terror attacks. A second example comes from the December Gold Dragon attacks on organizations involved with the Winter Olympics. In this case the attackers employed steganography, \"and a new tool released days before the attack.\"\nThe speed of changing tactics and adopting new techniques is in sharp contrast to the delays inherent in defending against new vulnerabilities -- with the two-months plus failure of Equifax to patch all of its systems with the Apache Struts patch being a prime example.\nHealthcare organizations remained a significant target throughout 2017, with a 210% increase in publicly disclosed incidents, year on year -- although figures declined 78% in Q4. McAfee's research conclusion is that many of the incidents were caused by failures to comply with security best practices or to address vulnerabilities in medical software.\nBotnets are a continuing problem. However, in Q4 2017, just two botnets, Necurs and Gamut, accounted for 97% of all spam botnet traffic. Gamut was responsible for delivering job offer-themed phishing (and possible money mule recruitment), in English, German, and Italian; while Necurs delivered 'lonely girl' spam, pump and dump stock spam, and Locky ransomware downloaders.\nNew ransomware detections grew consistently throughout 2017, culminating in more than 2,000,000 detections in Q4 (compared to less than 500,000 in Q4, 2016). \"A big contributor to ransomware growth was Ransom:Win32\/Genasom (also known as Stampado, with variants such as 'Philadelphia'). This family provides an inexpensive entree for cyber criminals, being offered for sale as low as $39 for a lifetime license.\u00a0\nRansomware didn't merely increase in volume (59% year on year, and 35% in Q4 alone), it also diversified beyond just extorting money. \"Actors devised strategies to create 'smoke and mirrors' by distracting defenders from actual attacks,\" writes Samani, \"such as the emergence of pseudoransomware, seen in NotPetya and a Taiwan bank heist.\"\nThe big takeaway from the latest McAfee Lab's Threat Report is that the cybersecurity threat landscape is continuing to worsen. Just about every type of attack is increasing in both volume and sophistication. The increasing use of PowerShell and JavaScript to avoid malicious file detection is just one example. In Q1 2016 there were around 2000 detections. By Q4 2017, this had grown to just under 48,000 -- boosted \"by a rash of downloaders in Q4\".","url":"https:\/\/www.securityweek.com\/usual-threats-more-sophisticated-and-faster-report"},{"Unnamed: 0":69,"query":"APT28","text":"IAAF Says Russia-Linked Hackers Accessed Medical Records\r\n\nThe International Association of Athletics Federations (IAAF) revealed on Monday that athletes' medical records were accessed in an attack the organization believes was carried out by the Russia-linked cyber espionage group known as Fancy Bear.\nFancy Bear is also known as APT28, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team. The group is said to be responsible for many high-profile attacks, including the recent U.S. election hacks.\nThe IAAF, which is based in Monaco, said it learned of the breach after it hired incident response firm Context Information Security in January to conduct a technical investigation. Investigators found signs of unauthorized remote access on February 21, when they discovered metadata on athletes' Therapeutic Use Exemption (TUE) applications stored in a newly created file.\nThe breach impacts athletes who have applied for TUEs since 2012. Affected individuals have been contacted by the IAAF.\nIt's unclear if the attackers managed to exfiltrate the information they collected, but IAAF believes this provides a strong indication of what the attackers were after. The IAAF is confident the threat actor no longer has access to its networks following clean-up efforts assisted by Context, the UK National Cyber Security Centre (NCSC), and the Agence Mon\u00e9gasque de S\u00e9curit\u00e9 Num\u00e9rique (Monaco AMSN).\nThis is not the first time Fancy Bear has been accused of targeting an athletic organization. Last year, the World Anti-Doping Agency (WADA) said the hackers had stolen sensitive athlete data, including medical test results and TUEs.\nResearchers linked the attack on WADA to the Fancy Bear cyberspies, but a group calling itself \u201cFancy Bears,\u201d claiming to be affiliated with the Anonymous hacktivist movement, also took responsibility for the breach and leaked some of the stolen files.\nIn the WADA attack, hackers gained unauthorized access to the Anti-Doping Administration and Management System (ADAMS) after using a fake website to phish credentials. In the case of IAAF, there is no information on how the attackers may have gained access to the organization\u2019s systems.\nRelated: Hackers Target Czech Foreign Ministry's Email System\nRelated: Russian Cyberspies Use New Mac Malware to Steal Data","url":"https:\/\/www.securityweek.com\/iaaf-says-russia-linked-hackers-accessed-medical-records"},{"Unnamed: 0":70,"query":"APT28","text":"France TV Cyberattack Probe Focused on 'Russian Hackers'\r\n\nThe investigation into the cyberattack suffered by France's TV5Monde television channel in April is now focusing on \"a group of Russian hackers\", a judicial source told AFP on Tuesday.\nThe cyberattack was carried out by unknown persons claiming to represent the Islamic State group, who shut down transmissions and placed jihadist propaganda messages on the station's website, and Facebook and Twitter accounts.\nBut confirming information first published by L'Express newspaper, the judicial source said \"the investigations are at this stage looking towards a group of Russian hackers designated by the name APT28.\"\nIn a report to be published on Wednesday, L'Express said APT28, also known as \"Pawn Storm\", had previously tried to hack the White House and NATO members, as well as targeting Russian dissidents and Ukrainian activists.\nA source involved in the case told AFP the investigators were narrowing the search by probing the IP addresses of computers used in the attack.\nThe TV5Monde station, which broadcasts worldwide, did not resume full operations for 18 hours after the hack on April 8, which authorities at the time said was likely a \"terrorist act\".\nThe channel was forced to broadcast pre-recorded programs after what TV5Monde boss Yves Bigot described as a cyber-attack \"unprecedented in the history of television.\"\nThe hackers posted documents on TV5Monde's Facebook page purporting to be the identity cards and CVs of relatives of French soldiers involved in anti-IS operations, along with threats against the troops.\n\"Soldiers of France, stay away from the Islamic State! You have the chance to save your families, take advantage of it,\" read one message on the hacked Facebook page.\n\"The CyberCaliphate continues its cyberjihad against the enemies of Islamic State,\" the message added.\nJust hours before the attack, the Islamic State extremist group had published a video praising their \"knights of the media\" carrying out cyber-attacks and urged them to step up their efforts.\nRelated: 'Operation Pawn Storm' Continues to Step Up Attack Activity","url":"https:\/\/www.securityweek.com\/france-tv-cyberattack-probe-focused-russian-hackers"},{"Unnamed: 0":71,"query":"APT28","text":"Microsoft Patches Office Zero-Day Bug Used by APT Group\r\n\nMicrosoft on Tuesday patched several memory corruption vulnerabilities in Office, including one that had been exploited in the wild by a well known advanced persistent threat (APT) actor.\nTrend Micro reported earlier this week that the Russian threat group Pawn Storm (also known as APT28, Sednit, Fancy Bear, Sofacy and Tsar Team) had been leveraging an Oracle Java zero-day vulnerability in attacks against the armed forces of a NATO member country, and defense organizations in the United States and Canada.\nAccording to iSIGHT Partners, this isn\u2019t the only zero-day bug used recently by the group. On June 30, the threat intelligence company discovered that Pawn Storm had been exploiting an unpatched vulnerability in Microsoft Office (CVE-2015-2424). iSIGHT Partners immediately notified Microsoft and the flaw was patched when the company released its July 2015 security updates.\n\u201cWhen we found the exploit it appeared to be under development and evidence suggests it was deployed in Georgia,\u201d iSIGHT Partners noted in a blog post.\nThe Microsoft Office zero-day exploited by the threat actor is a heap corruption vulnerability triggered during processing of a malformed Microsoft Forms Image. The flaw affects Office 2013 SP1 and prior, and it can be exploited to execute arbitrary code via a specially crafted Office document.\nIn the Pawn Storm attack spotted by iSIGHT, the attackers used a document named \u201cIran_nuclear_talks.rtf\u201d to hide the exploit. Brian Bartholomew, senior researcher in the Cyber Espionage Threat Intelligence team at iSIGHT Partners, told SecurityWeek that the content of the lure document was ripped from a June 28 CNN article on nuclear talks with Iran.\nWhen the document was opened, an embedded OLE object triggered the vulnerability and a dropper payload was written and executed on the targeted system. The dropper then dropped a Sofacy malware payload.\n\u201cBased on several artifacts in the exploit document and the unreliability of successful exploitation when running the exploit document, iSIGHT Partners believes the exploit document was potentially hastily thrown together, or the exploit is still being developed to be more reliable,\u201d iSIGHT explained.\nThe threat group, which the security firm calls Tsar Team, has also leveraged at least one of the zero-day exploits leaked after the Hacking Team breach.\nBartholomew told SecurityWeek that iSIGHT has observed Tsar Team using one of the three Adobe Flash Player exploits (CVE-2015-5119) from the Hacking Team leak.\n\u201cWhile this is the only one we have observed in use by this team, it is not out of the realm of possibility that they may have repurposed any of the other five released zero-days from Hacking Team,\u201d said Bartholomew. \u201c5119 was re-written and in use by Tsar Team within 24 hours of the exploit being released on the Internet.\nIn April, FireEye reported that the threat group had used Flash Player and Windows zero-days in a highly targeted attack aimed at an international government entity.\niSIGHT Partners has been monitoring the APT actor\u2019s activities and the company believes that the group is actually behind the hacktivist group known as Cyber Caliphate, which attacked several companies apparently in support of ISIS.","url":"https:\/\/www.securityweek.com\/microsoft-patches-office-zero-day-bug-used-apt-group"},{"Unnamed: 0":72,"query":"APT28","text":"Russia's Hackers Long Tied to Military, Secret Services\r\n\nDuring the Soviet era, the country's top computer scientists and programmers largely worked for the secret services.\nThat practice appears to have resumed under President Vladimir Putin, as Russia faces accusations of waging a global campaign of cyber attacks.\nDutch officials on Thursday accused four Russians from the GRU military intelligence agency of attempting to hack into the global chemical weapons watchdog in The Hague.\nThe agency has investigated both the fatal poisoning of Russian former double-agent Sergei Skripal; and an alleged chemical attack by Moscow-allied Syrian President Bashar al-Assad.\nThe Baltic states were the first to accuse Moscow of mounting attacks to knock out their sites back in 2007.\nEstonia said one such attack had put the country's main emergency service phone number out of action for over an hour.\nSince then, accusations of cyber attacks have continued against Moscow.\nThe Russian hacker group variously known as Fancy Bear, APT 28 and Sofacy has been linked to GRU and accused of attacks on the US Democrats' 2016 presidential campaign, together with Russia's FSB security service, the successor to the KGB.\nThe skills of Russian hackers today developed from a tradition of excellent computing and programming skills dating back to the Soviet era.\n\"The whole structure of the economy was skewed towards the military sector,\" said Oleg Demidov, a consultant at the Moscow-based independent think-tank PIR Center.\u00a0\n\"All the achievements of Soviet science including the first computers went to serve the military sector.\"\nThe most brilliant students were pushed to work in the military and space sector, he added.\n- Banking crime -\nAfter the Soviet Union fell apart in 1991, its armed forces were broken up and most of the top specialists turned to the nascent banking sector in Russia, either to work there or to attack it.\nIn this era saw the first cyber attacks on banking operations and the first mentions of Russian hackers.\n\"Now Russian hackers are excellently trained and equipped and they still occupy one of the top positions in banking crime,\" said Demidov -- even if the Russian justice system has begun to crack down on them.\nIn 2016, Russian cybersecurity giant Kaspersky estimated that between 2012 and 2015, Russian hackers had stolen at least $790 million worldwide.\nRussian computer scientists study at \"very strong universities in Saint Petersburg, Moscow, Novosibirsk, Kazan or Krasnoyarsk\", said Denis Kuskov of TelecomDaily specialised research agency.\nThey \"can work anywhere in the world, in any international company,\" he added.\u00a0\nIn recent years, however, more have opted to stay in Russia, he said. \"The secret services have grown more interested in good programmers and it's easier for them to find work in Russia now.\"\nIn 2012, the Russian defence ministry announced it was creating its own \"cyber troops\". It launched a wide recruitment drive that included promotional videos on social media.\nFor Demidov, the growing wave of attacks attributed to Russian hackers has come about as Russia becomes better able to defend its own cyber security more strongly, the military sphere included.\n\"These efforts... have began to bring results,\" he said.\nToday however, even the most established players in Russian IT are in the sights of the West.\nThe US in 2017 imposed a ban on the use of Kaspersky's anti-virus software by federal agencies amid concerns about the company's links to the Russian intelligence services.\nWhile many young Russians may choose to work for the military and secret services for reasons of patriotism, some may still be more interested by the money.\nThis week a military tribunal in Moscow held a closed-doors trial for the head of operational control at the FSB's centre for information security, Colonel Sergei Mikhalkov and three alleged accomplices.\nKommersant daily reported that they were accused of passing secrets on the Russian secret services' cyber technology to the FBI in return for $10 million.","url":"https:\/\/www.securityweek.com\/russias-hackers-long-tied-military-secret-services"},{"Unnamed: 0":73,"query":"APT28","text":"Adobe to Patch Flash Zero-Day Exploited by Russian Attackers\r\n\nAdobe announced on Wednesday that it expects to release a patch for the recently disclosed Flash Player zero-day exploited in targeted attacks by a Russian threat group during the week of October 19.\nAccording to the company, the critical vulnerability (CVE-2015-7645) affects Flash Player 19.0.0.207 and earlier for Windows and Mac, and 11.2.202.535 and earlier 11.x versions for Linux. Adobe noted in its advisory that it\u2019s aware of limited, targeted attacks exploiting the flaw.\nThe existence of the security hole was brought to light on Tuesday, shortly after Adobe released a Flash Player update that addressed 13 issues.\nResearchers at Trend Micro discovered the vulnerability while analyzing the operations of the Russian threat actor Pawn Storm (also known as APT28, Sednit, Fancy Bear, Sofacy and Tsar Team).\nThe group, which is believed to be linked to the Russian government, has been exploiting the Flash Player zero-day in attacks aimed at several Ministries of Foreign Affairs from all over the world. The attackers lured their victims to websites hosting the exploit via spear phishing emails that used suicide car bombings in Kabul, airstrikes in Syria and Gaza, and other military-related topics as a lure.\nResearchers have pointed out that the URLs used by the APT group were similar to the ones spotted earlier this year in attacks aimed at the White House and NATO members.\nThe cyber espionage actor, which has been around since at least 2007, has targeted military, government, media, and defense organizations from across the world.\nPawn Storm has used six zero-day vulnerabilities in the last year, Tom Kellermann, chief cybersecurity officer at Trend Micro, told SecurityWeek on Tuesday. This includes Java, Windows, and Flash Player zero-days, including some of the exploits leaked as a result of the breach suffered earlier this year by the Italian spyware maker Hacking Team.","url":"https:\/\/www.securityweek.com\/adobe-patch-flash-zero-day-exploited-russian-attackers"},{"Unnamed: 0":74,"query":"APT28","text":"Denmark Says Russia Hacked Defense Ministry Emails\r\n\nDenmark on Monday denounced Moscow's \"aggressive\" behavior after a report accused Russian hackers of infiltrating the defense ministry's email accounts.\n\"This is part of a continuing war from the Russian side in this field, where we are seeing a very aggressive Russia,\" Defense Minister Claus Hjort Frederiksen told Danish news agency Ritzau.\nA report published Sunday by the Centre for Cyber Security accused a group of pro-Kremlin hackers of breaking into the emails of defense ministry employees in 2015 and 2016.\n\"The hacked emails don't contain military secrets, but it is of course serious,\" Frederiksen said.\nThe report identified the hacker group as APT28, also known as Pawn Storm, Sofacy and Fancy Bear, which has links to the Russian government and security services and has previously been named by the FBI and US Homeland Security as being behind \"malicious cyber activity\" against US government bodies.\nThe group is also believed to be behind other high-profile cyber attacks.\nIn Denmark, the Centre for Cyber Security said earlier this year that the threat against Danish authorities and companies remained \"very high\".","url":"https:\/\/www.securityweek.com\/denmark-says-russia-hacked-defense-ministry-emails"},{"Unnamed: 0":75,"query":"APT28","text":"French Presidential Candidate Targeted by Russia-Linked Hackers\r\n\nA notorious cyber espionage group linked to the Russian government has targeted the political party of French presidential candidate Emmanuel Macron, according to a report published on Tuesday by Trend Micro.\nThe news comes shortly after Macron won the first round of France\u2019s presidential election. Many believe he will become the county\u2019s next president after he was endorsed by several top politicians, including former opponents in the presidential race.\nTrend Micro\u2019s report describes the activities of the threat actor known as Pawn Storm, APT28, Fancy Bear, Sofacy, Sednit and Strontium. Researchers have identified tens of military, government, defense, media, political, religious, educational and international organizations targeted by the group.\nAn analysis of the phishing domains used by the hackers suggests that one of the targets was Macron\u2019s campaign. The attackers registered the domain onedrive-en-marche.fr, which is similar to en-marche.fr, the official website of Marcon\u2019s En Marche! party, likely in an effort to get users to hand over their credentials.\nMacron\u2019s campaign has confirmed for The Wall Street Journal that staffers received phishing emails, but claimed the hacking attempts had failed. The National Cybersecurity Agency of France (ANSSI) also confirmed the attacks, but refused to comment on their origin, Reuters reported.\nA representative of En Marche! has accused Russia of interfering with the elections in an effort to help pro-Moscow candidates, but Russia has denied any involvement in the hacker attacks.\nAccording to Trend Micro, the En Marche phishing site was set up in mid-March. The security firm also discovered a phishing domain apparently set up to target the Konrad-Adenauer-Stiftung (KAS) political foundation in Germany. The KAS phishing site, named kassap.de, was created in early April.\nLast year, Trend Micro also reported seeing a Pawn Storm attack aimed at Germany\u2019s Christian Democratic Union, the political party of Chancellor Angela Merkel.\nPawn Storm\u2019s political operations have made a lot of headlines, particularly after the group targeted organizations affiliated with the Democratic Party in the United States. The U.S. officially accused Russia of launching the cyberattacks, and authorities confirmed recently that an investigation is underway to determine if the attacks had an impact on this year\u2019s presidential elections.\nTrend Micro pointed out in its report that Pawn Storm has often relied on so-called false flag operations. Individuals and groups claiming to be hacktivists have taken credit for several of the attacks attributed to Pawn Storm.\nFor instance, an individual using the online moniker Guccifer 2.0 has taken credit for the Democratic Party attacks, and a group calling itself Fancy Bears claimed to have been behind the attack on the World Anti-Doping Agency (WADA). Several other \u201chacktivist\u201d groups have been connected to Pawn Storm, including Cyber Caliphate, which claimed to be linked to ISIS when it attacked the U.S. Army and French TV station TV5Monde back in 2015.\nRelated: FBI Probes Democratic Email Hack, but is Russia to Blame?\nRelated: Google Launches Free \"Protect Your Election\" Service","url":"https:\/\/www.securityweek.com\/french-presidential-candidate-targeted-russia-linked-hackers"},{"Unnamed: 0":76,"query":"APT28","text":"Industry Reactions to U.S. Indicting 12 Russians for DNC Hack\r\n\nThe U.S. last week indicted 12 Russian intelligence officers over their alleged role in a hacking operation targeting the Democratic National Committee (DNC) and Hillary Clinton\u2019s 2016 presidential campaign.\nThe charges, part of special counsel Robert Mueller\u2019s investigation into Russia\u2019s attempt to interfere in the presidential election, were announced just days before President Donald Trump met his Russian counterpart, Vladimir Putin.\nIndustry professionals have commented on the charges, their impact, the possible threat actors responsible for the operation, and how these types of attacks can be avoided.\nAnd the feedback begins...\nJohn Hultquist, Director of Intelligence Analysis, FireEye:\nJohn Gomez, CEO, Sensato:\nRichard Ford, Chief Scientist, Forcepoint:\nRoss Rustici, Head of Intelligence Research, Cybereason:\nKevin Mitnick, Chief Hacking Officer, KnowBe4:\nLeo Taddeo, CISO, Cyxtera:","url":"https:\/\/www.securityweek.com\/industry-reactions-us-indicting-12-russians-dnc-hack"},{"Unnamed: 0":77,"query":"APT28","text":"Vermont Utility Refutes Reports of Russia Hacking U.S. Electric Grid\r\n\nU.S. officials told the press that Russia hacked into the country\u2019s electric grid, but the affected utility said it had only found malware on one device that was not connected to the grid.\nThe Washington Post on Saturday cited anonymous U.S. officials claiming that Russian hackers breached the electric grid. The article, titled \u201cRussian hackers penetrated U.S. electric grid through a utility in Vermont,\u201d led to several politicians making alarming statements on Russia and hackers.\nThe Vermont utility referenced by The Washington Post, the Burlington Electric Department, published a statement refuting the claims.\nLast week, just as the Obama administration announced retaliation against Russia over the presidential election cyberattacks, the DHS and the FBI published a Joint Analysis Report (JAR) to detail the tools and infrastructure used by Russian civilian and military intelligence services in attacks aimed at networks and endpoints associated with the election and various other government, political, and private sector entities.\nThis malicious activity, dubbed by the U.S. government \u201cGrizzly Steppe,\u201d included attacks launched by two well-known Russia-linked threat groups tracked as APT28 (aka Fancy Bear, Pawn Storm, Strontium, Sofacy, Sednit and Tsar Team) and APT29 (aka Cozy Bear and CozyDuke).\nHowever, security experts have criticized the U.S. government for failing to provide strong evidence that Russia did in fact attempt to interfere with the presidential election. Furthermore, some warned that the indicators of compromise (IoC) provided in the JAR are low quality and could lead to false positives.\nAfter the Grizzly Steppe report was published, Burlington Electric conducted a scan of all its computers in an effort to determine if any devices had been infected with Grizzly Steppe malware. Suspicious Internet traffic was detected on a single computer, which had not been connected to the electric grid.\n\u201cThere is no indication that either our electric grid or customer information has been compromised,\u201d the Vermont utility stated. \u201cMedia reports stating that Burlington Electric was hacked or that the electric grid was breached are false.\u201d\n\u201cFederal officials have indicated that this specific type of Internet traffic also has been observed elsewhere in the country and is not unique to Burlington Electric. It\u2019s unfortunate that an official or officials improperly shared inaccurate information with one media outlet, leading to multiple inaccurate reports around the country,\u201d it added.\nThe Washington Post has rewritten its story, clarifying that authorities had not actually found any evidence that the grid had been breached. However, experts say even the new headline, \u201cRussian operation hacked a Vermont utility, showing risk to U.S. electrical grid security,\u201d is FUD.\n\n\nOn the other hand, many experts believe the U.S. power grid is vulnerable to cyberattacks.\n\u201cBased on existing intelligence, it is reasonable to assume that nation-states already possess all the information they need to launch such an attack on the U.S. power grid - they choose not to because of political implications,\u201d Tim Layton, chief intelligence officer at SurfWatch Labs, said in a SecurityWeek column. \u201cI also believe the USA possesses the same capabilities. It isn't just nation-states that we need to be concerned with, as radical terrorist groups are highly motivated to bring harm to the American people and economy.\u201d\nWhile there is no evidence of destructive cyberattacks on the U.S. electric grid, such attacks have been launched in Ukraine. The Russian government is believed to be responsible for the December 2015 attack that caused severe power outages, and a recent incident may have also been caused by a cyberattack.\nRelated: Trump to Meet U.S. Spy Chiefs to Get Russian Hacking 'Facts'\nRelated: Spies and Hackers - Russians Sanctioned by US","url":"https:\/\/www.securityweek.com\/vermont-utility-refutes-reports-russia-hacking-us-electric-grid"},{"Unnamed: 0":78,"query":"APT28","text":"Russian Cyberspies Use Updated Arsenal to Attack Defense Contractors\r\n\nA Russia-linked cyber espionage group has been using new tools in attacks against defense contractors and other high profile targets, Kaspersky Lab reported on Friday.\nThe threat actor, known as Pawn Storm, Strontium, APT28, Sofacy, Sednit and Fancy Bear, has been actively targeting military, media, defense and government organizations from across the world since 2007. Entities in NATO countries have been primarily targeted, but researchers recently spotted an increase in attacks aimed at Ukraine.\nPawn Storm has been known to use zero-day exploits targeting Adobe Flash Player, Java, Microsoft Office and Windows in its operations. The attackers have also leveraged a wide range of tools to achieve their goals, including backdoors such as SPLM (also known as Xagent and CHOPSTICK) and AZZY (aka ADVSTORESHELL, NETUI and EVILTOSS), and USB stealers designed for data theft from air-gapped systems. Implants dubbed JHUHUGIT and JKEYSKW have also been observed in Pawn Storm attacks.\nUp until August, Pawn Storm leveraged zero-day exploits to infect systems with JHUHUGIT and JKEYSKW first-stage implants. However, in August, Kaspersky Lab researchers spotted a new version of the AZZY Trojan, which is mainly used for reconnaissance, while investigating a wave of attacks aimed at defense organizations. Experts said the campaign was still ongoing in November.\nThe new AZZY, most recently seen in an October attack, had been delivered by another piece of malware instead of a zero-day exploit. An analysis of the threat revealed that unlike previous variants, the new AZZY backdoor has been using an external library for command and control (C&C) communications.\n\u201cIn the past, the Sofacy developers modified earlier AZZY backdoors to use a C&C server encoded in the registry, instead of storing it in the malware itself, so this code modularisation follows the same line of thinking,\u201d Kaspersky researchers noted in a blog post.\nPawn Storm has also updated its data theft tools. The spy group\u2019s USB stealer modules, used for stealing data from isolated networks, were first updated in February 2015 and the latest versions appear to have been compiled in May 2015, Kaspersky said. Older versions of USBStealer malware were analyzed by researchers at ESET in November 2014.\nThe USBStealer compiled in May is designed to monitor the infected device for USB drives and collect specified files from them. The files are copied to a hidden folder from where they can be exfiltrated using the AZZY backdoor.\n\u201cTwo recurring characteristics of the Sofacy group that we keep seeing in its attacks are speed and the use of multi-backdoor packages for extreme resilience,\u201d researchers said. \u201cIn the past, the group used droppers that installed both the SPLM and AZZY backdoors on the same machine. If one of them was detected, the other one provided the attacker with continued access.\u201d\nPawn Storm also appears to be interested in Malaysia Airlines Flight MH17, a plane that crashed in July 2014 after being hit by a Russian-made missile while flying over a conflict zone in eastern Ukraine. Trend Micro reported in October that the attackers targeted organizations tasked with investigating the incident.","url":"https:\/\/www.securityweek.com\/russian-cyberspies-use-updated-arsenal-attack-defense-contractors"},{"Unnamed: 0":0,"query":"APT28","text":"Adobe patches Flash Player vulnerability used in Pawn Storm APT campaign Adobe has issued an emergency patch for a new Flash Player vulnerability (CVE-2015-7645) exploited by attackers behind the Operation Pawn Storm campaign. On October 16, Adobe released an emergency patch for a new Adobe Flash Player vulnerability (CVE-2015-7645), which was reportedly used by the attackers behind the Operation Pawn Storm (also known as APT28, Sednit, Fancy Bear, or Tsar Team) advanced persistent threat (APT) campaign. The vulnerability affects Adobe Flash Player 19.0.0.207 and earlier versions for Windows, Mac OS X, and Linux. Adobe rates the vulnerability as critical and notes that successful exploitation could result in a crash as well as potentially allow an attacker to take control of the affected computer. Symantec is not aware of any indication that the vulnerability is widely exploited in the wild. The attack group is not new to the usage of zero-day vulnerabilities, as in July 2015, it exploited a then zero-day vulnerability in Java. Mitigation Users who are concerned about this issue can temporarily disable Adobe Flash Player in their browser by taking the following steps: Internet Explorer versions 10 and 11 Open Internet Explorer Click on the \u201cTools\u201d menu, and then click \u201cManage add-ons\u201d Under \u201cShow\u201d, select \u201cAll add-ons\u201d Select \u201cShockwave Flash Object\u201d and then click on the \u201cDisable\u201d button You can reenable Adobe Flash Player by repeating the same process, selecting \u201cShockwave Flash Object\u201d, and then clicking on the \u201cEnable\u201d button. Guidance for users of earlier versions of Internet Explorer is available on the Microsoft website. Select the version of Internet Explorer you are using at the top right corner. Firefox Open Firefox Open the browser menu and click \u201cAdd-ons\u201d Select the \u201cPlugins\u201d tab Select \u201cShockwave Flash\u201d and click \u201cDisable\u201d You can reenable Adobe Flash Player by repeating the same process, selecting \u201cShockwave Flash\u201d, and then clicking on the \u201cEnable\u201d button. Chrome Type \u201cchrome:plugins\u201d in the address bar to open the page On the Plugins page that appears, find the \"Flash\" listing To disable Adobe Flash Player completely, click the \"Disable\" link under its name To enable Adobe Flash Player, click the \"Enable\" link under its name Protection Symantec has added coverage for the publicly available proof-of-concept code for this Flash Player vulnerability as: Antivirus: Exp.CVE-2015-7645 Investigations into this attack are ongoing and additional protections may be added. In the meantime, customers are advised to apply the patch as soon as possible. The update also plugs two other security holes (CVE-2015-7647 and CVE-2015-7648) that were not covered by the monthly updates issued on October 13.","url":"https:\/\/www.symantec.com\/connect\/blogs\/adobe-patches-flash-player-vulnerability-used-pawn-storm-apt-campaign"},{"Unnamed: 0":1,"query":"APT28","text":"Java zero-day vulnerability used in limited attacks Vulnerability is reported to be exploitable by way of drive-by-download on the latest version of Java (1.8.0.45). Symantec is investigating reports that a zero-day vulnerability in Java is being exploited in a limited number of attacks. Oracle, the developer behind Java, has yet to release a patch or comment on the vulnerability. The vulnerability is reported to be exploitable by way of drive-by download on the latest version of Java (1.8.0.45). Symantec regards this vulnerability as critical since Java is a widely used platform. The attackers behind this zero-day vulnerability have been linked to the APT group Operation Pawn Storm (also known as APT28, Sednit, Fancy Bear, or Tsar Team). This is the first Java zero-day reported since 2013, however a vulnerability in this widely used platform does pose a significant risk. While no patch has been issued for the vulnerability, users who are concerned about this issue can temporarily disable Java in the browser by following these steps: How do I disable Java in my web browser? Symantec customers are protected against the payload reportedly being dropped by this zero-day vulnerability with the following detections: Antivirus Trojan.Sofacy Intrusion Prevention System System Infected: Trojan.Sofacy Activity We will continue to investigate this vulnerability and provide more details as they become available. Update \u2013 July 14, 2015: Oracle has released a patch to address the zero-day vulnerability discussed in this blog, the Oracle Java SE Remote Security Vulnerability (CVE-2015-2590). The July 2015 Critical Patch Update contains a total of 193 security fixes across Oracle products, including 25 fixes for Oracle Java SE.","url":"https:\/\/www.symantec.com\/connect\/blogs\/java-zero-day-vulnerability-used-limited-attacks"},{"Unnamed: 0":2,"query":"APT28","text":"APT28: New Espionage Operations Target Military and Government Organizations Recent campaigns see APT28 group return to covert intelligence gathering operations in Europe and South America. After making headlines during 2016 due to its involvement in cyber attacks against an organization involved in the U.S. presidential election, APT28 (aka Swallowtail, Fancy Bear) has continued to mount operations during 2017 and 2018. The espionage group, which according to the U.S. Department of Homeland Security (DHS) and the Federal Bureau of Investigation (FBI) is linked to the Russian government, returned to low-key intelligence-gathering operations during 2017 and into 2018, targeting a range of military and government targets in Europe and South America. History of disruptive attacks APT28 has been active since at least January 2007 but received public attention in a major way during 2016 when it was implicated in a series of cyber attacks in the run up to the U.S. presidential election. Beginning in the Spring of 2016, APT28 sent spear-phishing emails to political targets including members of the Democratic National Committee (DNC). These emails were designed to trick recipients into supposedly changing their email passwords on a fake webmail domain. The attack group then used these stolen credentials to gain access to the DNC network, install malware, move across the network, and steal data, including a trove of emails. The compromised information was later leaked online. These election attacks signaled a change of tactics on the part of APT28, moving away from their prior low-key intelligence gathering towards more overt activity, seemingly intended to destabilize and disrupt victim organizations and countries. The group was also responsible for the 2016 attack on the World Anti Doping Agency (WADA) and the leaking of confidential drug testing information. In keeping with its shift to more overt tactics, the group appeared to publicly take credit for the attack, leaking the information on a website using the name \u201cFancy Bears\u201d, an industry codename that was already widely used for the group. Return to the shadows After receiving an unprecedented amount of attention in 2016, APT28 has continued to mount operations during 2017 and 2018. However, the group\u2019s activities since the beginning of 2017 have again become more covert and appear to be mainly motivated by intelligence gathering. The organizations targeted by APT28 during 2017 and 2018 include: A well-known international organization Military targets in Europe Governments in Europe A government of a South American country An embassy belonging to an Eastern European country Ongoing development of tools APT28 uses a number of tools to compromise its targets. The group\u2019s primary malware is Sofacy, which has two main components. Trojan.Sofacy (also known as Seduploader) performs basic reconnaissance on an infected computer and can download further malware. Backdoor.SofacyX (also known as X-Agent) is a second stage piece of malware, capable of stealing information from the infected computer. A Mac version of the Trojan also exists (OSX.Sofacy). APT28 has continued to develop its tools over the past two years. For example, Trojan.Shunnael (aka X-Tunnel), malware used to maintain access to infected networks using an encrypted tunnel, underwent a rewrite to .NET. In addition to this, as reported by our peers at ESET last week, the group has also begun using a UEFI (Unified Extensible Firmware Interface) rootkit known as Lojax. Because the rootkit resides within a computer\u2019s flash memory, it allows the attackers to maintain a persistent presence on a compromised machine even if the hard drive is replaced or the operating system is reinstalled. Symantec products block attempts to install Lojax with the detection name Trojan.Lojax. Possible links to other espionage operations Another attack group, Earworm (aka Zebrocy), has been active since at least May 2016 and is involved in what appears to be intelligence gathering operations against military targets in Europe, Central Asia, and Eastern Asia. The group uses spear-phishing emails to compromise its targets and infect them with malware. Earworm uses two malware tools. Trojan.Zekapab is a downloader component that is capable of carrying out basic reconnaissance functions and downloading additional malware to the infected computer. Backdoor.Zekapab is installed on selected infected computers and is capable of taking screenshots, executing files and commands, uploading and downloading files, performing registry and file system operations, and carrying out system information tasks. Earworm has also on occasion installed additional tools onto infected computers for the purposes of keylogging and password capture. During 2016, Symantec observed some overlap between the command and control (C&C) infrastructure used by Earworm and the C&C infrastructure used by Grizzly Steppe (the U.S. government code name for APT28 and related actors), implying a potential connection between Earworm and APT28. However, Earworm also appears to conduct separate operations from APT28 and thus Symantec tracks them as a distinct group. An ongoing threat It is now clear that after being implicated in the U.S. presidential election attacks in late 2016, APT28 was undeterred by the resulting publicity and continues to mount further attacks using its existing tools. After its foray into overt and disruptive attacks in 2016, the group has subsequently returned to its roots, mounting intelligence gathering operations against a range of targets. This ongoing activity and the fact that APT28 continues to refine its toolset means that the group will likely continue to pose a significant threat to nation state targets. Protection Symantec has had the following protections in place to protect customers against APT28 attacks: Trojan.Sofacy Backdoor.SofacyX Infostealer.Sofacy OSX.Sofacy Trojan.Shunnael Trojan.Lojax The following protections are in place to protect customers against Earworm attacks: Trojan.Zekapab Backdoor.Zekapab Threat Intelligence Customers of the DeepSight Intelligence Managed Adversary and Threat Intelligence (MATI) service have received reports on the \u201cSwallowtail\u201d (also known as APT28), which detail methods of detecting and thwarting activities of this adversary.","url":"https:\/\/www.symantec.com\/blogs\/election-security\/apt28-espionage-military-government"},{"Unnamed: 0":3,"query":"APT28","text":"Subverting Democracy: How Cyber Attackers Try to Hack the Vote Everything you need to know about APT28 and APT29, the attackers that attempted to influence the U.S. presidential election. The U.S. midterm elections are taking place on November 6 and, given what happened in the run-up to the 2016 presidential election, many voters may be concerned about whether foreign espionage actors will once again attempt to influence the vote. Cyber attacks played a central role in the 2016 campaign, creating some of the main controversies of the campaign. Multiple organizations were targeted, with the most talked about incident being the attack on the Democratic National Committee (DNC) which resulted in nearly 20,000 internal emails being leaked. With the midterm elections now around the corner, there are naturally concerns about further attacks. Here\u2019s a short primer on the 2016 attacks and what tactics were used by the attackers: How can cyber espionage groups interfere with elections? While there are many ways a cyber espionage actor could potentially interfere with an election, proven cases to date have involved compromising targeted organizations in order to steal and leak information in the hope that it could influence the outcome and\/or sow distrust in the political process. During the 2016 U.S. presidential election, two cyber espionage groups\u2014APT28 and APT29 \u2014compromised a number of political targets, including the DNC, and stole a cache of information, including a large number of emails. These emails were then leaked online, and their contents became a significant talking point during the campaign. According to the U.S. government, both APT28 and APT29 are linked to the Russian government. Who is APT28? APT28 (aka Sofacy, Fancy Bear, Swallowtail, Tsar Team, Sednit) is believed to be a Russian cyber espionage group which has been active since at least January 2007. The group was initially known for traditional, information-stealing espionage campaigns, targeting governments in the U.S. and Europe. It became involved in more overt, disruptive operations in the run-up to the 2016 U.S. presidential election. It was also responsible for the 2016 attack on the World Anti Doping Agency (WADA) and subsequent leak of drug testing information. How does APT28 infiltrate targets? The group has been known to employ a variety of methods to gain access to targeted organizations\u2019 networks. These include spear-phishing emails, watering hole websites, infected storage devices, and exploitation of software vulnerabilities, including zero-day vulnerabilities. During the 2016 U.S. presidential election attacks, APT28 used spear-phishing emails that tricked recipients into supposedly changing their email passwords on a fake webmail domain. The group then used these stolen credentials to gain access to email accounts and steal the contents. This information was later leaked. What tools does APT28 use? Symantec has seen APT28 use a number of custom malware tools, including: Infostealer.Sofacy OSX.Sofacy Trojan.Sofacy Trojan.Modruner Who is APT29? APT29 (aka Cozy Bear, Fritillary, the Dukes) is believed to be a Russian cyber espionage group which has been active since at least January 2010. Like APT28, it initially confined itself to spying campaigns, focusing on governments, the military, and think tanks in the U.S. and Europe. It later became involved in more subversive operations and was implicated (along with APT28) in disruptive attacks prior to the 2016 U.S. presidential election. How does APT29 infiltrate targets? APT29 usually relies on spear-phishing emails to gain access to targeted organizations\u2019 networks. During the 2016 U.S. presidential election attacks, APT29 sent spear-phishing emails to over 1,000 targeted individuals, including some U.S. government personnel. These emails contained malicious links which, if clicked, would lead to malware being installed on the target\u2019s computer. This allowed APT29 to compromise a political party\u2019s systems and steal emails from several accounts on the network. What tools does APT29 use? Symantec has seen APT29 use a number of custom malware tools, including: Trojan.Cozer Trojan.Seaduke Trojan.Dionisduke Backdoor.Netduke Trojan.Powerduke Backdoor.Miniduke Has Symantec previously published research on APT29? Yes, in July 2015 we published a blog: \u201cForkmeiamfamous\u201d: Seaduke, latest weapon in the Duke armory How likely are we to see a repeat of these tactics during the 2018 midterm U.S. elections? Given the impact the 2016 attacks had, there is a strong likelihood that these tactics may be used again in a bid to sow discord and confusion among voters. How has the link between APT28, APT29, and Russia been established? The U.S. Department of Homeland Security (DHS) and the Federal Bureau of Investigation (FBI) have concluded that both groups are linked to the Russian government. Symantec has no evidence that conflicts with this conclusion. What is the difference between APT28 and APT29? The groups are believed to be linked to different Russian agencies. Special counsel Robert Mueller\u2019s investigation has indicted 12 alleged members of Russia\u2019s military intelligence agency (known as GRU) for activity relating to the APT28 attacks.","url":"https:\/\/www.symantec.com\/blogs\/election-security\/election-hacking-faq"}]